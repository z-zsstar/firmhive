{"name": "httpd-nvram_access-1", "location": "usr/bin/httpd:0x0040a3d0 (fcn.0040a3d0)", "risk_score": 6.5, "confidence": 7.5, "description": "The HTTP service accesses the router's basic configuration, including the LAN IP address and wireless SSID, via nvram_get. These values are directly used to construct web interface responses, posing a potential XSS risk.", "code_snippet": "char *lan_ip = nvram_get(\"lan_ipaddr\");\nchar *ssid = nvram_get(\"wl0_ssid\");\nsprintf(response, \"<input value='%s'>\", lan_ip);", "link_identifiers": ["lan_ipaddr", "wl0_ssid", "nvram_get", "http_response"], "notes": "nvram_get"}
{"name": "httpd-env_access-1", "location": "usr/bin/httpd:0x0040b210 (fcn.0040b210)", "risk_score": 4.0, "confidence": 6.25, "description": "Retrieves the HTTP_USER_AGENT environment variable via getenv without sufficient validation before logging it.", "code_snippet": "char *ua = getenv(\"HTTP_USER_AGENT\");\nlog_message(\"User agent: %s\", ua);", "link_identifiers": ["HTTP_USER_AGENT", "getenv", "log_message"], "notes": "Potential log injection vulnerability"}
{"name": "cwmp-nvram_access-1", "location": "REDACTED_SENSITIVE_DATA", "risk_score": 8.5, "confidence": 8.5, "description": "REDACTED_SENSITIVE_DATA", "code_snippet": "REDACTED_SENSITIVE_DATA", "link_identifiers": ["acs_REDACTED_PASSWORD_PLACEHOLDER", "acs_password", "nvram_get", "tr069_auth"], "notes": "REDACTED_SENSITIVE_DATA"}
{"name": "cwmp-nvram_access-2", "location": "REDACTED_SENSITIVE_DATA", "risk_score": 5.0, "confidence": 7.25, "description": "Retrieve WAN interface configuration information, including IP address and connection status, which are used to report device status to the ACS server.", "code_snippet": "char *wan_ip = nvram_get(\"wan_ipaddr\");\nchar *status = nvram_get(\"wan_status\");\nreport_device_status(wan_ip, status);", "link_identifiers": ["wan_ipaddr", "wan_status", "nvram_get", "device_status"], "notes": "information leakage risk"}
{"name": "cwmp-env_access-1", "location": "REDACTED_SENSITIVE_DATA", "risk_score": 3.5, "confidence": 5.5, "description": "Retrieve device manufacturer information environment variables via getenv for constructing TR-069 message headers.", "code_snippet": "char *vendor = getenv(\"DEVICE_VENDOR\");\nadd_header_field(\"Vendor\", vendor);", "link_identifiers": ["DEVICE_VENDOR", "getenv", "tr069_header"], "notes": "low risk, but may be used for fingerprinting"}
{"name": "upnpd-nvram_access-1", "location": "usr/bin/upnpd:0x0040a210 (fcn.0040a210)", "risk_score": 7.0, "confidence": 7.75, "description": "The UPnP service accesses port mapping configurations via nvram_get, and these values are directly used to set UPnP port forwarding rules. If these configurations are tampered with, it may result in unauthorized port openings.", "code_snippet": "char *port = nvram_get(\"upnp_port\");\nchar *enabled = nvram_get(\"upnp_enable\");\nsetup_port_mapping(port, enabled);", "link_identifiers": ["upnp_port", "upnp_enable", "nvram_get", "port_mapping"], "notes": "Potential risk of port abuse"}
{"name": "upnpd-nvram_access-2", "location": "usr/bin/upnpd:0x0040b540 (fcn.0040b540)", "risk_score": 5.5, "confidence": 7.0, "description": "Access the LAN IP address and subnet mask to verify the source network of UPnP requests.", "code_snippet": "char *lan_ip = nvram_get(\"lan_ipaddr\");\nchar *netmask = nvram_get(\"lan_netmask\");\nvalidate_request_source(lan_ip, netmask);", "link_identifiers": ["lan_ipaddr", "lan_netmask", "nvram_get", "network_validation"], "notes": "The network authentication logic relies on NVRAM values."}
