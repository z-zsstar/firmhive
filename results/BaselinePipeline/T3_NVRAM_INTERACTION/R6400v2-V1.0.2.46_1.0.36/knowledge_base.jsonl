{"name": "busybox-getenv-atoi", "file_path": "bin/busybox", "location": "bin/busybox:0x2a45c,0x2a4ac", "risk_score": 6.5, "confidence": 7.5, "description": "Two instances of getenv calls were identified in the busybox binary, which read environment variable values and directly convert them to integers for use. These values are employed to set parameter values, posing potential security risks as the environment variable values are directly converted to integers and used without adequate validation.", "code_snippet": "N/A (HIDDEN)", "link_identifiers": ["fcn.0002a41c", "sym.imp.getenv", "0x2a4ec", "0x2a4f0", "sym.imp.atoi"], "notes": "Further confirmation is needed regarding the specific environment variable names pointed to by 0x2a4ec and 0x2a4f0."}
{"name": "busybox-getenv-PATH", "file_path": "bin/busybox", "location": "bin/busybox:0x51af0", "risk_score": 7.0, "confidence": 7.25, "description": "A getenv call was found in the busybox binary that reads the PATH environment variable. This value is used for path search during execution, posing a command injection risk. If PATH is maliciously modified, it could lead to execution of unintended programs.", "code_snippet": "N/A (HIDDEN)", "link_identifiers": ["REDACTED_SENSITIVE_DATA", "sym.imp.getenv", "PATH", "0x521e0"], "notes": "Modifying the PATH environment variable is a common attack vector that requires special attention."}
{"name": "busybox-getenv-setenv", "file_path": "bin/busybox", "location": "bin/busybox:0x53370", "risk_score": 5.0, "confidence": 6.0, "description": "A getenv call was found in the busybox binary, reading a specific environment variable (address 0x53434). This value is used to set environment variables, posing a risk of environment variable injection.", "code_snippet": "N/A (HIDDEN)", "link_identifiers": ["REDACTED_SENSITIVE_DATA", "sym.imp.getenv", "0x53434", "sym.imp.setenv"], "notes": "It is necessary to confirm the specific environment variable name pointed to by 0x53434 and its purpose."}
{"name": "init-getenv-lan_ifnames", "file_path": "sbin/init", "location": "sbin/init:0x10a90 (main)", "risk_score": 4.0, "confidence": 7.25, "description": "In sbin/init, calls to `getenv` were found retrieving the `lan_ifnames` environment variable. This variable is used for network interface configuration and is passed to string manipulation functions such as `strspn` and `strncpy`. While no direct security risks were identified, it's important to note that these environment variables could be maliciously modified to affect system behavior.", "code_snippet": "ldr r0, str.lan_ifnames ; [0x1d8ec:4]=0x5f6e616c ; \"lan_ifnames\"\nbl sym.imp.getenv", "link_identifiers": ["lan_ifnames", "getenv", "strspn", "strncpy", "strcspn"], "notes": "It is recommended to check all places where `lan_ifnames` is used to ensure that the obtained values are properly validated and sanitized."}
{"name": "remote-nvram-leafp2p_sys_prefix", "file_path": "etc/init.d/remote.sh", "location": "etc/init.d/remote.sh:18-22", "risk_score": 5.0, "confidence": 6.0, "description": "The script reads the `leafp2p_sys_prefix` variable value via the `nvram get` command and sets a default value '/opt/remote' when the variable is empty. This value is used to define the system path prefix, which if maliciously modified could lead to path traversal or command injection risks.", "code_snippet": "leafp2p_sys_prefix=$(${nvram} get leafp2p_sys_prefix)\n[ -z $leafp2p_sys_prefix ] && {\n    ${nvram} set leafp2p_sys_prefix=\"/opt/remote\"\n    ${nvram} commit\n}", "link_identifiers": ["leafp2p_sys_prefix", "nvram get", "nvram set", "nvram commit"], "notes": "This variable is used to define the system path, and if maliciously modified, it may lead to path traversal risks."}
{"name": "remote-nvram-leafp2p_replication_url", "file_path": "etc/init.d/remote.sh", "location": "etc/init.d/remote.sh:24-28", "risk_score": 7.0, "confidence": 6.5, "description": "The script reads the `leafp2p_replication_url` variable and sets a default value of 'https://readyshare.netgear.com/device/entry'. This URL is used for device replication services, and if tampered with, it could lead to data leakage or man-in-the-middle attacks.", "code_snippet": "leafp2p_replication_url=$(${nvram} get leafp2p_replication_url)\n[ -z $leafp2p_replication_url ] && {\n    ${nvram} set leafp2p_replication_url=\"https://readyshare.netgear.com/device/entry\"\n    ${nvram} commit\n}", "link_identifiers": ["leafp2p_replication_url", "nvram get", "nvram set", "nvram commit"], "notes": "The URL is used for external communication, and if tampered with, it may lead to man-in-the-middle attacks or data leakage."}
{"name": "remote-nvram-leafp2p_replication_hook_url", "file_path": "etc/init.d/remote.sh", "location": "etc/init.d/remote.sh:30-34", "risk_score": 7.0, "confidence": 6.5, "description": "The script reads the `leafp2p_replication_hook_url` variable and sets the default value to 'https://readyshare.netgear.com/device/hook'. This URL is used for hook services, with security risks similar to those of replication_url.", "code_snippet": "leafp2p_replication_hook_url=$(${nvram} get leafp2p_replication_hook_url)\n[ -z $leafp2p_replication_hook_url ] && {\n    ${nvram} set leafp2p_replication_hook_url=\"https://readyshare.netgear.com/device/hook\"\n    ${nvram} commit\n}", "link_identifiers": ["leafp2p_replication_hook_url", "nvram get", "nvram set", "nvram commit"], "notes": "The URL is used for external communication, with security risks similar to those of replication_url."}
{"name": "remote-nvram-leafp2p_remote_url", "file_path": "etc/init.d/remote.sh", "location": "etc/init.d/remote.sh:36-40", "risk_score": 8.0, "confidence": 7.0, "description": "The script reads the `leafp2p_remote_url` variable and sets the default web service URL. This URL is used for remote service communication, employing HTTP protocol instead of HTTPS, creating a risk of man-in-the-middle attacks.", "code_snippet": "REDACTED_SENSITIVE_DATA", "link_identifiers": ["leafp2p_remote_url", "nvram get", "nvram set", "nvram commit"], "notes": "The URL uses HTTP protocol instead of HTTPS, posing a risk of man-in-the-middle attacks."}
{"name": "remote-nvram-config-vars", "file_path": "etc/init.d/remote.sh", "location": "etc/init.d/remote.sh:42-72", "risk_score": 6.0, "confidence": 6.5, "description": "The script reads and sets multiple configuration variables (debug, firewall, rescan_devices, services, etc.), which control service behavior. Malicious modifications to these variables may cause service anomalies or security function failures.", "code_snippet": "leafp2p_debug=$(${nvram} get leafp2p_debug)\n[ -z $leafp2p_debug ] && {\n    ${nvram} set leafp2p_debug=\"2\"\n    ${nvram} commit\n}", "link_identifiers": ["leafp2p_debug", "leafp2p_firewall", "leafp2p_rescan_devices", "leafp2p_services", "leafp2p_service_0", "leafp2p_run"], "notes": "These configuration variables control the service behavior, particularly setting the firewall to 0 may disable security protection."}
{"name": "leafp2p-nvram-leafp2p_sys_prefix", "file_path": "etc/init.d/leafp2p.sh", "location": "etc/init.d/leafp2p.sh:5", "risk_score": 7.5, "confidence": 7.5, "description": "The script retrieves the environment variable `leafp2p_sys_prefix` using the `nvram get` command and uses it to construct the paths `SYS_PREFIX` and `PATH`. This value is directly utilized in subsequent script execution path construction, posing a potential security risk. If the variable is maliciously modified, it could lead to arbitrary command execution.", "code_snippet": "SYS_PREFIX=$(${nvram} get leafp2p_sys_prefix)\nCHECK_LEAFNETS=${SYS_PREFIX}/bin/checkleafnets.sh\nPATH=${SYS_PREFIX}/bin:${SYS_PREFIX}/usr/bin:/sbin:/usr/sbin:/bin:/usr/bin", "link_identifiers": ["leafp2p_sys_prefix", "nvram", "SYS_PREFIX", "CHECK_LEAFNETS", "PATH"], "notes": "It is recommended to verify the source and integrity of the `leafp2p_sys_prefix` variable to prevent path injection attacks."}
