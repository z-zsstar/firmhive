{"name": "nvram-generic-access", "file_path": "usr/sbin/nvram", "location": "REDACTED_SENSITIVE_DATA", "risk_score": 8.0, "confidence": 7.0, "description": "A universal NVRAM access pattern was identified in the usr/sbin/nvram binary, including retrieving individual variables (nvram_get), batch retrieval (nvram_getall), bitflag operations (nvram_get_bitflag/nvram_set_bitflag), and variable setting (nvram_set). These operations may involve security-sensitive data, particularly the variable setting operation which requires input validation to prevent injection attacks.", "code_snippet": "sym.imp.nvram_getall(pcVar16,0x20000);\npcVar15 = pcVar16;\nif (*(iVar20 + (0xfffc | 0xfffd0000)) != '\\0') {\n    do {\n        sym.imp.puts(pcVar15);\n        iVar17 = sym.imp.strlen(pcVar15);\n        pcVar15 = pcVar15 + iVar17 + 1;\n    } while (*pcVar15 != '\\0');", "link_identifiers": ["nvram_get", "nvram_set", "nvram_getall", "nvram_get_bitflag", "nvram_set_bitflag", "puts", "strlen", "strcat", "atoi"], "notes": "The decompiled code does not explicitly display all specific variable names, requiring further analysis of call parameters. Variable setting operations particularly demand security review."}
{"name": "httpd-env-vars", "file_path": "usr/sbin/httpd", "location": "usr/sbin/httpd:0x3bfe4, 0x3bff0, 0x3bff8 (fcn.0003b640)", "risk_score": 7.5, "confidence": 6.75, "description": "Multiple environment variable access points were found in /usr/sbin/httpd, including PATH_INFO, LD_LIBRARY_PATH, and REQUEST_METHOD. LD_LIBRARY_PATH poses the highest operational risk as it may lead to library hijacking attacks. PATH_INFO could potentially be exploited for path traversal attacks.", "code_snippet": "char *path_info = getenv(\"PATH_INFO\");\n// HIDDENpath_infoHIDDEN", "link_identifiers": ["PATH_INFO", "LD_LIBRARY_PATH", "REQUEST_METHOD", "getenv", "setenv", "fcn.0003b640"], "notes": "Sensitive environment variables should be cleared before privileged program execution, and PATH_INFO should be verified for proper path normalization."}
{"name": "readycloud-nvram-operations", "file_path": "usr/sbin/readycloud_nvram", "location": "usr/sbin/readycloud_nvram:HIDDEN", "risk_score": 6.0, "confidence": 5.75, "description": "Multiple NVRAM operations were identified in usr/sbin/readycloud_nvram, including variable retrieval (nvram_get), setting (nvram_set), batch retrieval (nvram_getall), and bit flag operations (nvram_get_bitflag/nvram_set_bitflag). The primary risk points lie in variable setting and batch retrieval operations, which may expose sensitive configuration information.", "code_snippet": "sym.imp.nvram_set(uVar2,*(iVar20 + -4));", "link_identifiers": ["nvram_get", "nvram_set", "nvram_getall", "nvram_get_bitflag", "nvram_set_bitflag", "strncpy", "0x20000"], "notes": "The buffer size is 0x20000, and it is necessary to check for potential buffer overflow risks. The batch-retrieved NVRAM data is output via puts, which may pose an information leakage risk."}
{"name": "init-scripts-nvram", "file_path": "etc/init.d", "location": "etc/init.d/leafp2p.sh, etc/init.d/remote.sh", "risk_score": 8.0, "confidence": 8.0, "description": "The etc/init.d/leafp2p.sh and remote.sh scripts contain frequent NVRAM operations involving multiple configuration items such as leafp2p_sys_prefix and leafp2p_replication_url. The remote.sh script sets leafp2p_service_0 with extensive network port configurations, potentially creating service exposure risks. All NVRAM modifications are immediately followed by commit operations.", "code_snippet": "nvram set leafp2p_service_0=\"port1:port2:port3\"\nnvram commit", "link_identifiers": ["leafp2p_sys_prefix", "leafp2p_replication_url", "leafp2p_replication_hook_url", "leafp2p_remote_url", "leafp2p_debug", "leafp2p_firewall", "leafp2p_service_0", "nvram", "nvram commit"], "notes": "Hardcoded remote service URLs may pose privacy/security risks. Verification is required regarding the actual purpose and exposure scope of these ports. Frequent commit operations may impact NVRAM lifespan."}
{"name": "acsd-env-vars-critical", "file_path": "usr/sbin/acsd", "location": "usr/sbin/acsd:0x4032a8 (configure_network), 0x4051f0 (setup_wireless), 0x4067d8 (debug_logging)", "risk_score": 9.8, "confidence": 9.0, "description": "A dangerous environment variable usage pattern was identified in usr/sbin/acsd, where DEBUG_LEVEL is directly incorporated into system() call construction, presenting a clear command injection vulnerability. Variables such as LAN_MAC and WIFI_MODE are also used directly without adequate security validation.", "code_snippet": "char *debug = getenv(\"DEBUG_LEVEL\");\nsystem(strcat(\"log_level \", debug));", "link_identifiers": ["getenv", "LAN_MAC", "WIFI_MODE", "DEBUG_LEVEL", "system", "set_network_config", "is_valid_wifi_mode"], "notes": "DEBUG_LEVEL command injection is a critical vulnerability that must be fixed. It is recommended to review all environment variable usage patterns and replace dangerous system() calls."}
{"name": "wlconf-no-nvram", "file_path": "usr/sbin/wlconf", "location": "N/A", "risk_score": 0.0, "confidence": 4.75, "description": "Analysis of usr/sbin/wlconf revealed no evidence of NVRAM or environment variable access; the file does not involve such operations.", "code_snippet": "N/A", "link_identifiers": [], "notes": "The analysis covers function calls, string references, and imported function tables, confirming no relevant operations."}
