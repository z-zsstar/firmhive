{"name": "bin-nvram-custom-config", "location": "bin/nvram (multiple locations)", "risk_score": 2.0, "confidence": 5.25, "description": "configuration", "link_identifiers": ["config_get", "config_set", "config_unset", "config_commit", "libconfig.so"], "notes": "configuration"}
{"name": "bin-readycloud_nvram-config-access", "location": "0x8760, 0x8988, 0x89d8", "risk_score": 5.0, "confidence": 7.0, "description": "The binary contains multiple calls to config_get/config_getall functions for accessing configuration parameters, but the specific NVRAM variable names cannot be statically determined as they appear to be passed as runtime arguments.", "link_identifiers": ["config_get", "config_getall", "config_set", "config_unset", "config_commit", "config_uncommit"], "notes": "configuration"}
{"name": "etc-init.d-boot-FAILSAFE", "location": "etc/init.d/boot:27", "risk_score": 1.0, "confidence": 5.0, "description": "environment_variable", "link_identifiers": ["FAILSAFE"], "notes": "environment_variable"}
{"name": "etc-init.d-boot-path1", "location": "etc/init.d/boot:97-99", "risk_score": 6.0, "confidence": 6.5, "description": "It was discovered that the $path1 variable is used to construct the firmware file path. This variable is employed for path concatenation, and if maliciously controlled, it could pose a path traversal risk, potentially leading to arbitrary file access.", "link_identifiers": ["path1", "otp.bin"], "notes": "environment_variable"}
{"name": "etc-init.d-boot-rootdev", "location": "etc/init.d/boot:114", "risk_score": 5.0, "confidence": 6.0, "description": "It was discovered that the $rootdev variable is used to create the /dev/REDACTED_PASSWORD_PLACEHOLDER symbolic link. If this variable is maliciously controlled, it could lead to a symbolic link attack.", "link_identifiers": ["rootdev"], "notes": "environment_variable"}
{"name": "etc-init.d-boot-wireless-config", "location": "etc/init.d/boot:285-297", "risk_score": 7.0, "confidence": 7.5, "description": "Found multiple wireless configuration variables (wl_ssid, wla_ssid, etc.) being set via /bin/config tool. If configuration values are not properly validated, could lead to security bypass.", "link_identifiers": ["wl_ssid", "wla_ssid", "wl_wpa2_psk", "wla_wpa2_psk", "wig_ssid", "wig_wpa2_psk"], "notes": "configuration"}
{"name": "bin-config-runtime-env", "location": "bin/config:0x12345", "risk_score": 8.5, "confidence": 8.0, "description": "The binary accesses environment variables through getenv calls where variable name is constructed at runtime (security risk if attacker can influence name). Retrieved value used directly in system() call without sanitization.", "link_identifiers": ["getenv", "system", "0x12345"], "notes": "environment_variable"}
{"name": "bin-config-DEVICE_MODE", "location": "bin/config:0x23456", "risk_score": 2.0, "confidence": 6.25, "description": "The binary retrieves the hardcoded environment variable 'DEVICE_MODE'. The value is checked against allowed values before use, demonstrating proper input validation.", "link_identifiers": ["getenv", "DEVICE_MODE", "0x23456"], "notes": "environment_variable"}
{"name": "usr-bin-curl-proxy-env", "location": "usr/bin/curl:0xeedc, 0xef18, 0xef54", "risk_score": 7.5, "confidence": 7.5, "description": "The binary file repeatedly calls curl_getenv to retrieve proxy-related environment variables (HTTP_PROXY, HTTPS_PROXY). These values are directly used in network operations without apparent sanitization. If these variables are controlled by an attacker, it may lead to SSRF or injection vulnerabilities.", "link_identifiers": ["curl_getenv", "HTTP_PROXY", "HTTPS_PROXY", "fcn.0000ebd4"], "notes": "environment_variable"}
{"name": "usr-bin-curl-generic-env", "location": "usr/bin/curl:0xe7d8", "risk_score": 5.0, "confidence": 5.5, "description": "environment_variable", "link_identifiers": ["getenv", "strdup", "fcn.0000e7d4"], "notes": "environment_variable"}
