{"name": "busybox-LINES-COLUMNS", "file_path": "bin/busybox", "location": "bin/busybox:0x4248f4 (sym.get_terminal_width_height)", "risk_score": 2.0, "confidence": 7.75, "description": "In the BusyBox binary, the 'LINES' and 'COLUMNS' environment variables are used to obtain the terminal's row and column counts. These values are converted to integers via atoi and then utilized to set the terminal height and width. Although there exists a risk of tampering, no direct security risks have been identified.", "code_snippet": "lw t9, -sym.imp.getenv(gp); addiu a0, a0, -0x66e8 ('LINES')", "link_identifiers": ["sym.get_terminal_width_height", "LINES", "COLUMNS", "atoi"], "notes": "These variables are primarily used for terminal display settings and have limited impact."}
{"name": "busybox-TERM", "file_path": "bin/busybox", "location": "bin/busybox:0x451bb8 (sym.setup_environment)", "risk_score": 5.0, "confidence": 8.0, "description": "In the 'sym.setup_environment' function of busybox, the 'TERM' environment variable is accessed to set the terminal type. This value is directly passed to the setenv function, posing a potential risk of malicious terminal type injection that could lead to terminal escape sequence attacks.", "code_snippet": "lw t9, -sym.imp.getenv(gp); addiu a0, s2, -0x6e8c ('TERM')", "link_identifiers": ["sym.setup_environment", "TERM", "setenv"], "notes": "Check whether the terminal emulator has properly filtered the TERM value"}
{"name": "telnetd-action-disable_telnetd", "file_path": "usr/bin/telnetd-action", "location": "usr/bin/telnetd-action:17", "risk_score": 1.0, "confidence": 7.0, "description": "The script checks the value of the environment variable 'disable_telnetd' to determine whether to disable the telnetd service. This is a configuration check and does not pose a direct security risk.", "code_snippet": "if [ \"$disable_telnetd\" = \"1\" ]; then", "link_identifiers": ["disable_telnetd"], "notes": "This is a simple configuration switch with low risk."}
{"name": "telnetd-action-BIND_PORT", "file_path": "usr/bin/telnetd-action", "location": "usr/bin/telnetd-action:31-32", "risk_score": 4.0, "confidence": 6.0, "description": "The script checks the value of the environment variable 'BIND_PORT' to determine the binding port for the telnetd service. If this variable is maliciously controlled, it may cause the service to listen on unintended ports.", "code_snippet": "if [ \"$BIND_PORT\" != \"0\" ]; then\n    BIND_PORT=\"-p $BIND_PORT\"", "link_identifiers": ["BIND_PORT"], "notes": "It is recommended to verify the source and content of the BIND_PORT variable."}
{"name": "telnetd-action-LANIP", "file_path": "usr/bin/telnetd-action", "location": "usr/bin/telnetd-action:37", "risk_score": 5.0, "confidence": 5.0, "description": "The script uses the $LANIP variable as the listening address for telnetd, but it is not explicitly defined. If this variable is compromised, it may cause the service to bind to an incorrect address.", "code_snippet": "telnetd $LANIP $BIND_PORT", "link_identifiers": ["LANIP"], "notes": "Need to confirm the source and validation mechanism of the LANIP variable"}
{"name": "pppoe-action-MULTIWAN", "file_path": "usr/bin/pppoe-action", "location": "usr/bin/pppoe-action: multiple locations", "risk_score": 8.5, "confidence": 8.5, "description": "The environment variable $MULTIWAN is widely used for multi-WAN configuration control. This variable is directly utilized in command construction (such as pppoe-stop, pppoe-start, etc.), posing a risk of command injection.", "link_identifiers": ["MULTIWAN", "pppoe-stop", "pppoe-start"], "notes": "The variable is passed directly to multiple commands, and it is necessary to verify whether it has been properly filtered."}
{"name": "udhcpc-action-HOSTNAME", "file_path": "usr/bin/udhcpc-action", "location": "usr/bin/udhcpc-action: multiple locations", "risk_score": 8.0, "confidence": 8.25, "description": "The HOSTNAME variable is directly used to construct the --hostname parameter for udhcpc, posing a potential shell injection risk.", "link_identifiers": ["HOSTNAME", "--hostname", "$HOSTNAME"], "notes": "The HOSTNAME comes from the rdcsman call, and its input filtering needs to be verified."}
{"name": "wifi-action-WPAPSK", "file_path": "usr/bin/wifi-action", "location": "usr/bin/wifi-action:HIDDEN(HIDDEN)", "risk_score": 9.0, "confidence": 8.5, "description": "Read WPA PSK (CSID_C_WLANAPCLI_WPAPSK) and use it directly to set iwpriv parameters. The PSK is stored and transmitted in plaintext, posing a risk of leakage.", "link_identifiers": ["rdcsman", "CSID_C_WLANAPCLI_WPAPSK", "DWPAPSK", "IWPRIV"], "notes": "WPA PSK is processed in plaintext, posing a serious security risk"}
{"name": "wifi-action-WEPKEY", "file_path": "usr/bin/wifi-action", "location": "usr/bin/wifi-action:HIDDEN(HIDDEN)", "risk_score": 8.0, "confidence": 8.5, "description": "Reading WEP keys (CSID_C_WLANAPCLI_WEPKEY[0-3]) and directly using them to configure iwpriv parameters. The keys are stored and transmitted in plaintext, posing a risk of leakage.", "link_identifiers": ["rdcsman", "CSID_C_WLANAPCLI_WEPKEY0", "CSID_C_WLANAPCLI_WEPKEY1", "CSID_C_WLANAPCLI_WEPKEY2", "CSID_C_WLANAPCLI_WEPKEY3", "REDACTED_SENSITIVE_DATA", "IWPRIV"], "notes": "WEP keys are processed in plaintext, posing a security risk"}
{"name": "udhcpc-PATH", "file_path": "usr/sbin/udhcpc", "location": "usr/sbin/udhcpc:run_script", "risk_score": 6.0, "confidence": 7.0, "description": "In the run_script function of udhcpc, the PATH environment variable is accessed to set the script execution path. If PATH is maliciously modified, it may lead to the execution of unintended programs.", "link_identifiers": ["getenv", "PATH", "run_script"], "notes": "The PATH environment variable is used to locate executable programs and should be protected from modification by unprivileged users."}
