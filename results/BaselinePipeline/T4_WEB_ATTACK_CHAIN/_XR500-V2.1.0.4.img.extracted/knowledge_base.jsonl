{"name": "vulnerability-proccgi-strcpy", "file_path": "www/cgi-bin/proccgi", "location": "www/cgi-bin/proccgi:0x87f0 fcn.000087c8", "risk_score": 8.0, "confidence": 7.25, "description": "An unchecked strcpy call was found in function fcn.000087c8 of 'www/cgi-bin/proccgi'. This function receives an external parameter (param_1) and directly passes it to strcpy, which may lead to buffer overflow. The parameter source may include HTTP request parameters, allowing attackers to overwrite memory with carefully crafted input, potentially executing arbitrary code or causing program crashes.", "code_snippet": "sym.imp.strcpy(iVar1,param_1);", "link_identifiers": ["fcn.000087c8", "strcpy", "param_1"], "notes": "Further verification is required to determine whether param_1 originates from HTTP request parameters. It is recommended to inspect the parent function that calls fcn.000087c8."}
{"name": "vulnerability-RMT_invite-eval", "file_path": "www/cgi-bin/RMT_invite.cgi", "location": "www/cgi-bin/RMT_invite.cgi:3", "risk_score": 9.5, "confidence": 8.75, "description": "An eval execution of the external command `/www/cgi-bin/proccgi $*` was found on line 3 of 'www/cgi-bin/RMT_invite.cgi', where `$*` contains unfiltered user input. This may lead to a command injection vulnerability, allowing attackers to execute arbitrary commands by crafting malicious HTTP parameters.", "code_snippet": "eval \"`/www/cgi-bin/proccgi $*`\"", "link_identifiers": ["eval", "proccgi", "$*"], "notes": "Further analysis of the proccgi script is required to determine the input handling method."}
{"name": "vulnerability-RMT_invite-json_injection", "file_path": "www/cgi-bin/RMT_invite.cgi", "location": "www/cgi-bin/RMT_invite.cgi:15,20,50", "risk_score": 7.0, "confidence": 7.75, "description": "In 'www/cgi-bin/RMT_invite.cgi', unfiltered user inputs $FORM_TXT_remote_login and $FORM_TXT_remote_password are directly passed to readycloud_control.cgi (lines 15, 20, 50). Although transmitted via pipeline, potential parameter injection risks still exist.", "code_snippet": "REDACTED_SENSITIVE_DATA", "link_identifiers": ["FORM_TXT_remote_login", "FORM_TXT_remote_password", "readycloud_control.cgi"], "notes": "It is necessary to check how readycloud_control.cgi processes these JSON data."}
{"name": "vulnerability-RMT_invite-nvram_set", "file_path": "www/cgi-bin/RMT_invite.cgi", "location": "www/cgi-bin/RMT_invite.cgi:30", "risk_score": 6.5, "confidence": 7.25, "description": "In 'www/cgi-bin/RMT_invite.cgi', the user-controlled variable $FORM_TXT_remote_login is directly assigned to the nvram configuration item readycloud_user_admin (line 30), which may lead to configuration tampering.", "code_snippet": "${nvram} set readycloud_user_admin=$FORM_TXT_remote_login", "link_identifiers": ["FORM_TXT_remote_login", "nvram", "readycloud_user_admin"], "notes": "Verify the security impact of NVRAM settings"}
{"name": "vulnerability-uhttpd-strcpy", "file_path": "usr/sbin/uhttpd", "location": "usr/sbin/uhttpd:0x108ec sym.do_uh_cgi_request", "risk_score": 9.5, "confidence": 8.75, "description": "In the 'do_uh_cgi_request' function of 'usr/sbin/uhttpd', an unsafe usage of strcpy() was identified, where user-controlled input is copied into a fixed-size stack buffer without length validation. This could potentially lead to buffer overflow attacks, resulting in arbitrary code execution.", "code_snippet": "0x000108ec      e2e4ffeb       bl sym.imp.strcpy", "link_identifiers": ["strcpy", "do_uh_cgi_request", "sp+0x3040"], "notes": "The target buffer is located on the stack, and its size is not validated against the length of the source input. An attacker can exploit this vulnerability by sending a specially crafted HTTP request."}
{"name": "vulnerability-uhttpd-system", "file_path": "usr/sbin/uhttpd", "location": "usr/sbin/uhttpd:0x10a28,0x10b18 sym.do_uh_cgi_request", "risk_score": 6.0, "confidence": 5.5, "description": "A system() command execution was found in the CGI handler of 'usr/sbin/uhttpd', using hardcoded commands ('killall inetd' and 'inetd'). While there is no direct vulnerability at present, it could become dangerous if any part of these commands becomes controllable.", "code_snippet": "0x00010a28      dbe4ffeb       bl sym.imp.system\n0x00010b18      9fe4ffeb       bl sym.imp.system", "link_identifiers": ["system", "killall inetd", "inetd", "do_uh_cgi_request"], "notes": "Currently using hardcoded commands, but if these commands become dynamically constructed, potential command injection vulnerabilities should be monitored."}
