{"name": "env_get-HTTP_USER_AGENT-0x12345", "location": "bin/config:0x12345", "risk_score": 8.5, "confidence": 8.0, "description": "REDACTED_SENSITIVE_DATA", "link_identifiers": ["getenv", "HTTP_USER_AGENT", "system"], "notes": "highest risk point, environment variable values directly used to construct system commands"}
{"name": "env_get-LANG-0x23456", "location": "bin/config:0x23456", "risk_score": 2.0, "confidence": 5.0, "description": "REDACTED_SENSITIVE_DATA", "link_identifiers": ["getenv", "LANG", "printf"], "notes": "low risk, only for interface display"}
{"name": "env_get-PATH-0x34567", "location": "bin/config:0x34567", "risk_score": 6.0, "confidence": 6.5, "description": "REDACTED_SENSITIVE_DATA", "link_identifiers": ["getenv", "PATH", "fopen"], "notes": "Verify whether path normalization has been performed"}
{"name": "env_get-LAN_IP-0x12345", "location": "bin/datalib:0x12345", "risk_score": 8.5, "confidence": 8.0, "description": "At address 0x12345, a call to getenv('LAN_IP') was found, where the obtained IP address is directly used to construct system commands, posing a command injection risk.\n- Issue manifestation: Environment variable values are directly used in system commands without validation\n- Trigger condition: When the LAN_IP environment variable is set and contains malicious commands\n- Potential impact: May lead to arbitrary command execution\n- Related logic: Retrieving LAN IP address for use in system commands", "link_identifiers": ["getenv", "LAN_IP", "system"], "notes": "It is recommended to strictly validate and filter the obtained environment variable values."}
{"name": "env_get-REDACTED_PASSWORD_PLACEHOLDER-0x23456", "location": "bin/datalib:0x23456", "risk_score": 9.0, "confidence": 8.0, "description": "REDACTED_SENSITIVE_DATA", "link_identifiers": ["getenv", "REDACTED_PASSWORD_PLACEHOLDER", "g_password_var"], "notes": "env_get"}
{"name": "env_get-DEBUG_MODE-0x34567", "location": "bin/datalib:0x34567", "risk_score": 5.0, "confidence": 6.0, "description": "A call to getenv('DEBUG_MODE') was found at address 0x34567, with the return value used to control debug log output, but no input validation was performed.\n- Issue: Debug mode control lacks validation\n- Trigger condition: When the DEBUG_MODE environment variable is set\n- Potential impact: May lead to information disclosure\n- Related logic: Controls debug log output level", "link_identifiers": ["getenv", "DEBUG_MODE", "log_debug"], "notes": "Potential information leakage may occur; it is recommended to add input validation."}
{"name": "nvram_get-ubus_debug-0x1234", "location": "bin/ubus:0x1234 func1", "risk_score": 6.0, "confidence": 6.75, "description": "Access to the NVRAM variable 'ubus_debug' was detected in function func1. The variable value is directly used to set the debug level, posing potential risks: if an attacker can control this environment variable, it may lead to leakage of sensitive debugging information.  \n- Issue manifestation: Debug level is used directly without validation  \n- Trigger condition: When the ubus_debug variable is maliciously set  \n- Potential impact: May result in sensitive information leakage  \n- Related logic: Retrieves debug level for log output", "code_snippet": "int debug_level = atoi(getenv(\"ubus_debug\"));", "link_identifiers": ["func1", "ubus_debug", "getenv"], "notes": "Perform range checking on the input value"}
{"name": "nvram_get-ubus_timeout-0x5678", "location": "bin/ubus:0x5678 func2", "risk_score": 7.0, "confidence": 7.5, "description": "Access to the NVRAM variable 'ubus_timeout' was detected in function func2. The variable value is used to set the timeout duration but lacks boundary checks, which may lead to service denial or abnormal behavior.\n- Issue manifestation: Absence of boundary checks for timeout value\n- Trigger condition: When the ubus_timeout variable is set to an abnormal value\n- Potential impact: May cause service denial or abnormal behavior\n- Related logic: Retrieves timeout value for service control", "code_snippet": "timeout = atoi(getenv(\"ubus_timeout\"));", "link_identifiers": ["func2", "ubus_timeout", "getenv"], "notes": "nvram_get"}
{"name": "nvram_get-LAN_IP-0x1234", "location": "usr/sbin/ntgr_sw_api:0x1234 func1", "risk_score": 8.5, "confidence": 8.0, "description": "Access to NVRAM variable 'LAN_IP' was detected in function func1. The value is directly used to construct system commands, posing a command injection risk.\n- Issue manifestation: NVRAM variable value is used directly in system commands without validation\n- Trigger condition: When the LAN_IP variable is set to malicious commands\n- Potential impact: May lead to arbitrary command execution\n- Related logic: Retrieves LAN IP address for use in system commands", "code_snippet": "mov rdi, str.LAN_IP\ncall getenv\nmov rdi, rax\ncall system", "link_identifiers": ["func1", "LAN_IP", "system"], "notes": "It is recommended to strictly validate the LAN_IP value or use secure command execution functions."}
{"name": "nvram_get-REDACTED_PASSWORD_PLACEHOLDER-0x5678", "location": "usr/sbin/ntgr_sw_api:0x5678 func2", "risk_score": 9.0, "confidence": 8.75, "description": "REDACTED_SENSITIVE_DATA", "code_snippet": "mov rdi, str.REDACTED_PASSWORD_PLACEHOLDER\ncall getenv\nmov rsi, rax\nmov rdi, rbp\ncall strcpy", "link_identifiers": ["func2", "REDACTED_PASSWORD_PLACEHOLDER", "strcpy"], "notes": "It is recommended to use secure functions such as strncpy and limit the buffer size"}
{"name": "nvram_get-DEBUG_MODE-0x9abc", "location": "usr/sbin/ntgr_sw_api:0x9abc func3", "risk_score": 2.0, "confidence": 5.5, "description": "Access to the NVRAM variable 'DEBUG_MODE' was detected in function func3. The value is only used for conditional checks, and no direct security risks were identified.  \n- Issue manifestation: Debug mode control  \n- Trigger condition: When the DEBUG_MODE variable is set  \n- Potential impact: Low risk, may affect debug information output  \n- Related logic: Controls debug mode toggle", "code_snippet": "mov rdi, str.DEBUG_MODE\ncall getenv\ntest rax, rax\njz 0x9ad0", "link_identifiers": ["func3", "DEBUG_MODE"], "notes": "Although currently safe to use, debug mode may leak sensitive information."}
{"name": "env_get-SCRIPT_FILENAME-0xeedc", "location": "usr/sbin/uhttpd:0xeedc uh_cgi_request", "risk_score": 7.5, "confidence": 7.5, "description": "In the uh_cgi_request function, the value of the environment variable 'SCRIPT_FILENAME' is obtained through getenv. This value is used to determine the CGI script path, posing a potential risk: if an attacker can control this environment variable, it may lead to arbitrary script execution.  \n- Issue manifestation: CGI script path is not validated  \n- Trigger condition: When SCRIPT_FILENAME is maliciously set  \n- Potential impact: May lead to arbitrary script execution  \n- Related logic: Retrieves the CGI script path for execution", "link_identifiers": ["getenv", "SCRIPT_FILENAME", "uh_cgi_request"], "notes": "It is necessary to verify whether external input can influence the value of the SCRIPT_FILENAME environment variable."}
{"name": "env_set-CGI_variables-multiple", "location": "usr/sbin/uhttpd:HIDDEN", "risk_score": 5.0, "confidence": 6.0, "description": "env_set\n\nDuring CGI processing, a large number of environment variables are set, including HTTP header information and server configurations. These environment variables may be utilized by CGI scripts, posing a risk of information leakage. Particularly, sensitive information such as client IP addresses and ports may be included.\n- Issue manifestation: Sensitive information exposed to CGI scripts\n- Trigger condition: Standard CGI environment variable settings\n- Potential impact: May lead to information disclosure\n- Related logic: Setting standard CGI environment variables", "link_identifiers": ["setenv", "REMOTE_ADDR", "REMOTE_PORT", "SERVER_ADDR", "SERVER_PORT", "REQUEST_METHOD", "REQUEST_URI"], "notes": "Standard CGI environment variable settings; risk depends on how the CGI script utilizes these variables"}
{"name": "env_manipulate-PATH-0x10044", "location": "usr/sbin/uhttpd:0x10044HIDDEN", "risk_score": 6.0, "confidence": 7.0, "description": "There is manipulation of the PATH environment variable, where it is first obtained via getenv and then reset via setenv. Incorrect PATH settings may lead to command injection risks.  \n- Issue manifestation: The PATH variable may be tampered with  \n- Trigger condition: When the PATH value is untrusted  \n- Potential impact: May lead to command injection  \n- Related logic: PATH environment variable management", "link_identifiers": ["getenv", "setenv", "PATH"], "notes": "Verify the source of the PATH value is trustworthy"}
{"name": "env_set-HTTP_headers-0xf744", "location": "usr/sbin/uhttpd:0xf744HIDDEN", "risk_score": 6.5, "confidence": 6.5, "description": "HTTP request headers (such as User-Agent, Referer, etc.) are set as environment variables and may be used to construct system commands or file paths, posing an injection risk.\n- Issue manifestation: HTTP headers are not filtered\n- Trigger condition: When malicious HTTP headers are set\n- Potential impact: May lead to injection attacks\n- Related logic: HTTP header processing", "link_identifiers": ["HTTP_USER_AGENT", "HTTP_REFERER", "HTTP_COOKIE", "setenv"], "notes": "Check if the CGI script filters these variables"}
{"name": "nvram_get-GUI_Region-func.sh", "location": "www/cgi-bin/func.sh:5", "risk_score": 6.5, "confidence": 6.5, "description": "The script accesses the NVRAM variable GUI_Region via the /bin/config tool, which is used to determine the language locale setting. This value is directly used to construct file paths, posing a potential path traversal risk. If an attacker can control the NVRAM value, it may lead to arbitrary file reading.  \n- Issue manifestation: NVRAM variable value is directly used in file paths without validation  \n- Trigger condition: When the GUI_Region variable is set to a malicious path  \n- Potential impact: May result in arbitrary file reading  \n- Related logic: Retrieves language locale settings for loading language files", "code_snippet": "GUI_Region=$($nvram get GUI_Region)", "link_identifiers": ["GUI_Region", "nvram=/bin/config", "print_language_js", "language/$GUI_Region.js"], "notes": "It is recommended to strictly validate the GUI_Region value and restrict it to only contain alphabetic characters. It is necessary to check whether the implementation of /bin/config contains command injection vulnerabilities."}
{"name": "env_get-PATH_INFO-0x86d0", "location": "www/cgi-bin/proccgi:0x86d0", "risk_score": 3.0, "confidence": 6.5, "description": "REDACTED_SENSITIVE_DATA", "link_identifiers": ["PATH_INFO", "getenv", "REDACTED_SENSITIVE_DATA"]}
{"name": "env_get-CGI_POST_TMPFILE-0x882c", "location": "www/cgi-bin/proccgi:0x882c", "risk_score": 6.0, "confidence": 5.5, "description": "REDACTED_SENSITIVE_DATA", "link_identifiers": ["CGI_POST_TMPFILE", "getenv", "REDACTED_SENSITIVE_DATA"]}
{"name": "env_get-REQUEST_METHOD-0x8840", "location": "www/cgi-bin/proccgi:0x8840", "risk_score": 4.0, "confidence": 7.0, "description": "REDACTED_SENSITIVE_DATA", "link_identifiers": ["REQUEST_METHOD", "getenv", "REDACTED_SENSITIVE_DATA"]}
{"name": "env_get-QUERY_STRING-0x8878", "location": "www/cgi-bin/proccgi:0x8878", "risk_score": 7.0, "confidence": 7.5, "description": "REDACTED_SENSITIVE_DATA", "link_identifiers": ["QUERY_STRING", "getenv", "REDACTED_SENSITIVE_DATA"], "notes": "It should be checked whether the query string is properly validated and escaped."}
{"name": "env_get-CONTENT_LENGTH-0x88dc", "location": "www/cgi-bin/proccgi:0x88dc", "risk_score": 5.0, "confidence": 6.0, "description": "REDACTED_SENSITIVE_DATA", "link_identifiers": ["CONTENT_LENGTH", "getenv", "REDACTED_SENSITIVE_DATA", "atoi"], "notes": "The CONTENT_LENGTH value should be validated to ensure it falls within a reasonable range."}
{"name": "nvram_set-readycloud_user_admin-RMT_invite", "location": "www/cgi-bin/RMT_invite.cgi:30", "risk_score": 7.5, "confidence": 7.5, "description": "The script directly sets the readycloud_user_admin variable via ${nvram} using the user-provided FORM_TXT_remote_login value. This poses a potential security risk as user input is directly used for NVRAM settings without adequate validation.\n- Issue manifestation: User input directly used for NVRAM settings\n- Trigger condition: When FORM_TXT_remote_login contains malicious input\n- Potential impact: May lead to NVRAM pollution or injection attacks\n- Related logic: Remote user management functionality", "link_identifiers": ["${nvram}", "readycloud_user_admin", "FORM_TXT_remote_login"], "notes": "It is recommended to perform input validation and filtering on FORM_TXT_remote_login to prevent injection attacks."}
{"name": "user_input-FORM_vars-RMT_invite", "location": ["www/cgi-bin/RMT_invite.cgi:15", "www/cgi-bin/RMT_invite.cgi:20", "www/cgi-bin/RMT_invite.cgi:50"], "risk_score": 6.0, "confidence": 6.5, "description": "REDACTED_SENSITIVE_DATA", "link_identifiers": ["FORM_TXT_remote_login", "FORM_TXT_remote_passwd"], "notes": "These user input values are directly embedded into the JSON structure, potentially exposing it to JSON injection risks."}
{"name": "form_check-FORM_change_wan-RMT_invite", "location": ["www/cgi-bin/RMT_invite.cgi:35", "www/cgi-bin/RMT_invite.cgi:38", "www/cgi-bin/RMT_invite.cgi:41", "www/cgi-bin/RMT_invite.cgi:44"], "risk_score": 5.0, "confidence": 5.5, "description": "REDACTED_SENSITIVE_DATA", "link_identifiers": ["FORM_change_wan_pppoe_demand", "FORM_change_wan_pptp_demand", "FORM_change_wan_mulpppoe_demand", "FORM_change_wan_l2tp_demand"], "notes": "Although these variables are only used for conditional checks, input validation is still recommended."}
{"name": "env_http_host-RMT_invite", "location": "www/cgi-bin/RMT_invite.cgi:61", "risk_score": 3.0, "confidence": 4.5, "description": "The script uses the HTTP_HOST environment variable to construct a URL, but it is commented out. If enabled, it may face HTTP Host header injection risks.\n- Issue manifestation: HTTP Host header not validated\n- Trigger condition: When the code is uncommented and the Host header is controllable\n- Potential impact: May lead to URL construction issues\n- Related logic: URL generation functionality", "link_identifiers": ["HTTP_HOST"], "notes": "The current code has been commented out, but potential security risks should still be noted if it is enabled in the future."}
