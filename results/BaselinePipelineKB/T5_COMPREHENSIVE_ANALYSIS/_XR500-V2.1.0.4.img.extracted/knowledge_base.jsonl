{"name": "vulnerability-nvram-command-injection", "location": "REDACTED_SENSITIVE_DATA", "risk_score": 8.5, "confidence": 7.75, "description": "nvram_set", "code_snippet": "REDACTED_SENSITIVE_DATA", "link_identifiers": ["sym.imp.strcpy", "fcn.000086d0", "config_set", "argv[2]", "nvram_set"], "notes": "nvram_set"}
{"name": "vulnerability-nvram-input-validation", "location": "REDACTED_SENSITIVE_DATA", "risk_score": 7.0, "confidence": 7.0, "description": "REDACTED_SENSITIVE_DATA", "code_snippet": "REDACTED_SENSITIVE_DATA", "link_identifiers": ["sym.imp.strchr", "fcn.000086d0", "config_set", "argv[2]", "nvram_set"], "notes": "nvram_set"}
{"name": "vulnerability-nvram-auth-bypass", "location": "REDACTED_SENSITIVE_DATA", "risk_score": 7.5, "confidence": 7.5, "description": "nvram_set", "link_identifiers": ["sym.imp.config_commit", "sym.imp.config_uncommit", "sym.imp.config_backup", "sym.imp.config_restore", "fcn.000086d0", "nvram_operations"], "notes": "nvram_set"}
{"name": "vulnerability-nvram-unsafe-string-ops", "location": "REDACTED_SENSITIVE_DATA", "risk_score": 7.0, "confidence": 7.25, "description": "nvram_set", "link_identifiers": ["sym.imp.strcpy", "sym.imp.strncmp", "sym.imp.sprintf", "fcn.000086d0", "nvram_operations"], "notes": "nvram_set"}
{"name": "vulnerability-uhttpd-config", "location": "etc/config/uhttpd", "risk_score": 7.5, "confidence": 8.5, "description": "The uHTTPd web server configuration presents potential security risks:\n1. HTTP/HTTPS ports (80/443) are listening on all interfaces (0.0.0.0)\n2. Use of 1024-bit RSA keys (below current security standards)\n3. CGI script timeout set to 60 seconds may lead to DoS\n4. RFC1918 filtering is enabled but without detailed rule configuration\n\nAttackers could exploit:\n- Weak encryption for man-in-the-middle attacks\n- Long-running CGI scripts consuming resources\n- Insufficient internal network filtering may enable DNS rebinding attacks", "link_identifiers": ["listen_http", "listen_https", "option bits 1024", "script_timeout", "rfc1918_filter", "uhttpd_config"], "notes": "REDACTED_SENSITIVE_DATA"}
{"name": "vulnerability-dropbear-config", "location": "etc/config/dropbear", "risk_score": 6.0, "confidence": 6.75, "description": "REDACTED_SENSITIVE_DATA", "link_identifiers": ["option PasswordAuth", "option REDACTED_SECRET_KEY_PLACEHOLDER", "option Port", "dropbear_config"], "notes": "It is recommended to modify the default port or add additional access controls."}
{"name": "vulnerability-firewall-config", "location": "etc/config/firewall", "risk_score": 8.0, "confidence": 7.25, "description": "Potential firewall bypass risks identified in configuration:\n1. Allowing WANâ†’LAN communication via DHCP/UDP port 68\n2. Overly permissive ICMPv6 rules (covering 9 packet types)\n3. Complete allowance of IGMP and multicast UDP traffic\n4. Inclusion of user-defined rule path (/etc/firewall.user)\n\nExploitable vectors:\n- DHCP packets could be used for network reconnaissance\n- ICMPv6 flood attacks\n- Multicast protocol abuse\n- Potential tampering with user-defined rules", "link_identifiers": ["Allow-DHCP-Renew", "Allow-ICMPv6-Input", "option proto igmp", "option dest_ip 224.0.0.0/4", "option path /etc/firewall.user", "firewall_config"], "notes": "It is recommended to refine ICMPv6 rules and monitor the integrity of the firewall.user file."}
{"name": "attack-chain-web-to-firewall", "location": "multiple", "risk_score": 9.0, "confidence": 6.75, "description": "Possibility of discovering a complete attack chain:\n1. Gain initial foothold through vulnerabilities in the uHTTPd web interface (e.g., CGI handling)\n2. Leverage permissive ICMPv6/IGMP firewall rules for lateral movement\n3. Establish persistence by modifying firewall.user to add backdoor rules\n\nTrigger conditions:\n- Presence of web application vulnerabilities (CGI/Lua scripts)\n- Attacker located on the same IPv6 network segment\n- Acquisition of low-privilege accounts (e.g., www-data)", "link_identifiers": ["option cgi_prefix", "lua_handler", "Allow-ICMPv6-Forward", "firewall.user", "attack_chain"], "notes": "This attack chain requires multiple conditions to be met simultaneously, but once successful, the harm is severe."}
{"name": "potential-vulnerability-apply-cgi", "location": "www/apply.cgi", "risk_score": 7.0, "confidence": 5.5, "description": "Initial analysis has identified the content of the www/apply.cgi file, but a more detailed examination is required to determine potential security risks. Recommended follow-up analysis steps: 1) Conduct a thorough review of the file content to identify command execution functions 2) Analyze parameter processing logic 3) Examine input validation mechanisms", "link_identifiers": ["apply.cgi", "www", "cgi_handler"], "notes": "Further analysis of the complete file content is required to confirm whether there are any sensitive function calls that could be externally input."}
{"name": "file-permission-apply-cgi", "location": "www/apply.cgi", "risk_score": 3.5, "confidence": 5.9, "description": "The target file 'www/apply.cgi' is a zero-byte empty file with full executable permissions (rwxrwxrwx). This configuration may indicate: 1) The file is a placeholder left during development 2) The file content was accidentally cleared while retaining permission settings 3) Improper cleanup of old files after system updates. Although the file itself contains no analyzable content, the 777 permission setting poses potential risks as attackers could replace it with malicious scripts.", "link_identifiers": ["www/apply.cgi", "file_permission"], "notes": "It is recommended to check the compatibility of the file modification time (January 2018) with other system components. Although the current file is harmless, consideration should be given to deleting it or restricting its permissions to prevent potential privilege abuse."}
{"name": "vulnerability-functions-eval-injection", "location": "lib/functions.sh:15-30", "risk_score": 7.5, "confidence": 7.0, "description": "The script contains multiple eval operations (in append() and list_contains() functions) that dynamically evaluate variables. If attacker-controlled input reaches these functions without proper sanitization, it could lead to command injection vulnerabilities. The functions are used for system configuration and network interface management.", "link_identifiers": ["append", "list_contains", "eval", "hotplug_dev", "command_injection"], "notes": "It is necessary to track the calling locations of these functions and the inputs they receive."}
{"name": "vulnerability-functions-env-leak", "location": "lib/functions.sh:10-20", "risk_score": 5.0, "confidence": 5.25, "description": "env_set", "link_identifiers": ["NO_EXPORT", "export", "append", "env_leak"], "notes": "All call sites that utilize these exported functions should be checked."}
{"name": "vulnerability-hotplug-device-control", "location": "lib/functions.sh:12-14", "risk_score": 8.0, "confidence": 6.25, "description": "The `hotplug_dev()` function directly interfaces with the system's hotplug mechanism using environment variables. If the `INTERFACE` parameter can be controlled by an attacker, it might lead to privilege escalation or unauthorized device access.", "link_identifiers": ["hotplug_dev", "ACTION", "INTERFACE", "hotplug-call", "device_control"], "notes": "Analyze all functions that call hotplug_dev() and their input sources."}
{"name": "core-script-impact", "location": "lib/functions.sh:1-3", "risk_score": 9.0, "confidence": 8.5, "description": "system_core", "link_identifiers": ["OpenWrt.org", "functions.sh", "busybox", "core_script"], "notes": "system_core"}
{"name": "vulnerability-ppp-parameter-injection", "location": "lib/network/ppp.sh", "risk_score": 7.5, "confidence": 7.25, "description": "Multiple insufficiently validated external input points were identified in `ppp.sh`, including configuration parameters such as PPTP/L2TP/PPPoE REDACTED_PASSWORD_PLACEHOLDERs, passwords, and MTU values. These parameters are obtained through the `config get` command and directly used for constructing PPP configurations without proper input validation or filtering. Attackers could potentially exploit this vulnerability to perform command injection or configuration tampering by injecting malicious parameters.", "link_identifiers": ["wan_pptp_REDACTED_PASSWORD_PLACEHOLDER", "wan_pptp_password", "wan_l2tp_REDACTED_PASSWORD_PLACEHOLDER", "wan_REDACTED_PASSWORD_PLACEHOLDER", "wan_pppoe_REDACTED_PASSWORD_PLACEHOLDER", "wan_pppoe_passwd", "config get", "ppp_injection"], "notes": "It is necessary to check how the upper layer calls set these configuration values and confirm whether there are other filtering mechanisms."}
{"name": "vulnerability-ppp-dns-hijacking", "location": "lib/network/ppp.sh", "risk_score": 6.0, "confidence": 6.0, "description": "The DNS configuration handling in `ppp.sh` poses a potential security risk. When using static DNS, it directly writes user-provided DNS server addresses into resolv.conf without validating the IP address format's legitimacy. This may lead to DNS hijacking.", "link_identifiers": ["wan_ether_dns1", "wan_ether_dns2", "/tmp/resolv.conf", "dns_hijacking"], "notes": "It is recommended to add IP address format validation."}
{"name": "vulnerability-switch-permission", "location": "lib/network/switch.sh", "risk_score": 5.0, "confidence": 5.0, "description": "The `switch.sh` script, though functionally simple, directly manipulates network interfaces and switch configurations. If maliciously invoked, it could potentially cause network outages. The script lacks permission verification mechanisms.", "link_identifiers": ["ifconfig", "swconfig", "setup_switch_dev", "switch_permission"], "notes": "It is recommended to add execution permission checks."}
{"name": "REDACTED_SENSITIVE_DATA", "location": "lib/network/ppp.sh", "risk_score": 6.5, "confidence": 6.25, "description": "In `ppp.sh`, although partial escaping is applied when handling passwords, the escaping logic may be incomplete. Special characters such as `$` and `'` could still cause issues.", "link_identifiers": ["sed 's/\\\\/\\\\\\\\/g'", "sed 's/\\#/\\\\#/g'", "chap-secrets", "pap-secrets", "password_escape"], "notes": "Testing the handling of various special characters is required."}
{"name": "vulnerability-uhttpd-configuration", "location": "www/cgi-bin/uhttpd.sh", "risk_score": 8.5, "confidence": 8.0, "description": "REDACTED_SENSITIVE_DATA", "link_identifiers": ["uhttpd.sh", "UHTTPD_BIN", "PX5G_BIN", "/etc/uhttpd.crt", "REDACTED_SENSITIVE_DATA", "0.0.0.0:80", "0.0.0.0:443", "kill -9", "/module_name", "uhttpd_config"], "notes": "Recommendations: 1) Use a more secure permission model; 2) Restrict listening interfaces; 3) Implement proper service termination mechanisms; 4) Filter REALM values"}
{"name": "vulnerability-uhttpd-permissions", "location": "www/cgi-bin/uhttpd.sh", "risk_score": 9.0, "confidence": 9.0, "description": "The CGI script invoked during the uHTTPd startup process has globally writable permissions (rwxrwxrwx), meaning any local user can modify this script, potentially leading to privilege escalation or service disruption.", "link_identifiers": ["uhttpd.sh permissions", "rwxrwxrwx", "file_permission"], "notes": "The file permissions should be immediately changed to 750, and ensure the owner is REDACTED_PASSWORD_PLACEHOLDER."}
{"name": "vulnerability-lua-handler", "location": "www/cgi-bin/url-routing.lua", "risk_score": 6.5, "confidence": 4.5, "description": "The url-routing.lua (Lua processor) used in the script may introduce script injection vulnerabilities, requiring further analysis of the file's content and permissions.", "link_identifiers": ["url-routing.lua", "Lua handler", "script_injection"], "notes": "Need to check the implementation details of the url-routing.lua file"}
{"name": "vulnerability-proccgi-buffer-overflow", "location": "www/cgi-bin/proccgi:0x000085d0", "risk_score": 8.5, "confidence": 8.25, "description": "proccgi uses strcpy for string copying when processing POST data without performing length checks. When handling data specified by CONTENT_LENGTH, if an attacker provides excessively long input, it may lead to a buffer overflow. The trigger condition is sending excessively long data via an HTTP POST request.", "link_identifiers": ["strcpy", "CONTENT_LENGTH", "POST", "proccgi -- out of memory allocating", "buffer_overflow"], "notes": "Further verification is needed to determine whether this vulnerability can be triggered via the network interface."}
{"name": "vulnerability-proccgi-injection", "location": "www/cgi-bin/proccgi:0x00008b44", "risk_score": 7.0, "confidence": 7.25, "description": "The program directly constructs output strings using user-provided inputs when processing FORM_ parameters, posing a potential injection vulnerability. Attackers may inject special characters or commands through carefully crafted input parameters.", "link_identifiers": ["FORM_%s=", "fprintf", "stdout", "injection"], "notes": "The web interface calling this CGI needs to be checked to determine exploitability."}
{"name": "vulnerability-proccgi-memory-handling", "location": "www/cgi-bin/proccgi:0x000085e8", "risk_score": 6.0, "confidence": 6.25, "description": "Insufficient handling of memory allocation errors; merely outputting error messages without safely terminating the program upon memory allocation failure may lead to undefined behavior.", "link_identifiers": ["malloc", "proccgi -- out of memory allocating", "abort", "memory_handling"], "notes": "On memory-constrained devices, it may be more easily triggered"}
{"name": "vulnerability-cgi-scripts-command-injection", "location": "www/cgi-bin/", "risk_score": 7.5, "confidence": 7.0, "description": "RMT_invite.cgi and runtests.cgi are shell scripts that need to be checked for command injection vulnerabilities. Specifically, verify whether unvalidated user input is directly used to construct system commands.", "link_identifiers": ["RMT_invite.cgi", "runtests.cgi", "command_injection"], "notes": "Further analysis of the script content is required"}
{"name": "vulnerability-rmt-eval-injection", "location": "www/cgi-bin/RMT_invite.cgi:3", "risk_score": 9.0, "confidence": 8.0, "description": "The script executes the output of proccgi through eval, which may lead to command injection. Attackers can inject arbitrary commands by carefully crafting CGI parameters. The use of eval is dangerous, especially when the input comes from untrusted sources.", "link_identifiers": ["eval", "proccgi", "$*", "command_injection"], "notes": "Analyze the proccgi script to verify input sanitization"}
{"name": "vulnerability-rmt-auth-bypass", "location": "www/cgi-bin/RMT_invite.cgi:12-45", "risk_score": 8.0, "confidence": 8.5, "description": "Using unvalidated user input (FORM_TXT_remote_login, FORM_TXT_remote_password) directly for NVRAM settings and API calls may lead to authentication bypass or information disclosure. Attackers could inject malicious values to modify system configurations.", "link_identifiers": ["FORM_TXT_remote_login", "FORM_TXT_remote_password", "readycloud_control.cgi", "nvram", "auth_bypass"], "notes": "Critical authentication parameters must undergo rigorous verification."}
{"name": "vulnerability-rmt-json-injection", "location": "www/cgi-bin/RMT_invite.cgi:13-14", "risk_score": 7.5, "confidence": 6.75, "description": "When processing JSON data via readycloud_control.cgi, the lack of content type validation may lead to HTTP request smuggling or JSON injection. Attackers could craft malicious JSON to manipulate backend processing logic.", "link_identifiers": ["readycloud_control.cgi", "REQUEST_METHOD", "PATH_INFO", "json_injection"], "notes": "Verify the Content-Type and JSON structure"}
{"name": "vulnerability-rmt-wan-config", "location": "www/cgi-bin/RMT_invite.cgi:30-37", "risk_score": 7.0, "confidence": 7.0, "description": "REDACTED_SENSITIVE_DATA", "link_identifiers": ["wan_pppoe_demand", "wan_pptp_demand", "wan_mulpppoe_demand", "wan_l2tp_demand", "FORM_change_wan_pppoe_demand", "wan_config"], "notes": "Network input configuration modifications require administrator privileges."}
{"name": "vulnerability-rmt-http-header", "location": "www/cgi-bin/RMT_invite.cgi:50-52", "risk_score": 6.5, "confidence": 5.75, "description": "The handling of HTTP_HOST has potential issues, with comments indicating a past truncation vulnerability. Although the current version has been modified, there may still be risks of other HTTP header injections.", "link_identifiers": ["HTTP_HOST", "HTTP_URL", "header_injection"], "notes": "The HTTP header processing logic should be comprehensively audited."}
{"name": "vulnerability-readycloud-nvram-buffer-overflow", "location": "bin/readycloud_nvram", "risk_score": 7.5, "confidence": 7.25, "description": "readycloud_nvram is an NVRAM configuration management tool that provides multiple configuration operation functions. The program uses insecure string manipulation functions (strcpy, sprintf), posing potential buffer overflow risks.", "link_identifiers": ["config_restore", "config_unset", "config_getall", "config_uncommit", "config_backup", "config_commit", "config_set", "config_default", "config_get", "strcpy", "sprintf", "buffer_overflow"], "notes": "nvram_set  \n\nImportant: Since the program has been stripped, more detailed function implementation cannot be obtained. It is recommended to perform dynamic analysis to verify potential buffer overflow vulnerabilities."}
{"name": "vulnerability-readycloud-nvram-input-validation", "location": "bin/readycloud_nvram", "risk_score": 8.0, "confidence": 7.0, "description": "The program processes user input via command-line arguments, but no apparent input validation mechanism is detected. Attackers could potentially exploit buffer overflow vulnerabilities by crafting malicious arguments to execute arbitrary code. Particularly for the `config set name=value` operation, if the value parameter is excessively long and not properly validated, it may lead to stack overflow.", "link_identifiers": ["config_set", "strcpy", "sprintf", "input_validation"], "notes": "Dynamic analysis is required to verify the maximum length limit of input parameters and buffer size."}
{"name": "vulnerability-readycloud-nvram-libconfig", "location": "bin/readycloud_nvram", "risk_score": 6.5, "confidence": 6.5, "description": "The program relies on the libconfig.so library for NVRAM operations. If this library contains vulnerabilities or is improperly configured, it may lead to privilege escalation or information leakage. The config_restore and config_backup functions may involve the import and export of sensitive configurations, requiring validation of file paths and permission controls.", "link_identifiers": ["config_restore", "config_backup", "init_libconfig", "libconfig"], "notes": "Check the implementation of libconfig.so and the configuration file permissions."}
{"name": "libconfig-sync-mechanism", "location": "usr/lib/libconfig.so", "risk_score": 3.0, "confidence": 5.5, "description": "REDACTED_SENSITIVE_DATA", "link_identifiers": ["config_set", "config_get", "config_commit", "/var/run/datalib.locker"], "notes": "While the basic synchronization mechanism has been implemented, no obvious buffer overflow or memory safety issues were found. It is recommended to verify whether applications calling these functions properly handle error conditions."}
{"name": "libconfig-info-leak", "location": "usr/lib/libconfig.so:0x00000ef0", "risk_score": 2.0, "confidence": 4.75, "description": "The config_commit function outputs status messages ('Saving Data...' and 'Done!') during save operations, potentially exposing internal state information.", "link_identifiers": ["config_commit", "Saving Data...", "Done!", "info_leak"], "notes": "The risk of information leakage is low, but debug output should be disabled in security-sensitive environments."}
