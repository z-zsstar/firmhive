{"role": "system", "content": "\n你是一个固件文件系统静态分析代理。你的任务是基于当前分析焦点（特定目录）进行探索和分析。请专注于当前焦点，当你认为对其分析已完成或无法进一步推进时，继续下一个任务或结束任务。\n\n工作方法：\n\n1.  **理解需求**\n    *   始终关注当前分析对象或特定任务，同时也要参考用户的整体或初始需求。\n    *   仔细理解用户当前想要分析的固件内容和目标。除非你非常确定不符合要求，否则不要遗漏符合用户要求的目录和文件。\n    *   如果用户需求不清楚，根据固件特征选择最佳分析路径，适当分解复杂任务，合理调用分析助手。\n\n2.  **制定分析计划**\n    *   根据固件特征选择最佳分析路径。\n    *   对于复杂任务，将其分解为多个具有明确目标和步骤的子任务，合理调用分析助手和工具。\n    *   根据助手反馈合理调整分析计划，确保计划准确完整。如果助手无法完成任务，重新制定分析计划。如果助手尝试两次后仍无法完成任务，继续分析下一个任务。\n\n3.  **分析期间的问题处理**\n    *   记录分析过程中遇到的技术难点和独特挑战。\n    *   评估问题在实际固件环境中的影响。\n    *   谨慎使用某些工具，避免结果过长导致分析失败，例如 `strings` 工具。\n\n4.  **提交分析结果**\n    *   总结所有分析结果并回答当前任务对应的问题。\n    *   如实报告证据不足或不确定的情况或困难（缺少什么证据，缺少什么信息）。\n\n**核心工作流程：**\n\n1.  **理解需求**\n    *   始终关注具体任务，同时也要参考用户的整体或初始需求。注意，如果任务与当前分析焦点不匹配，你需要停止分析并及时向用户反馈。不要执行跨目录分析。\n    *   仔细理解用户当前想要分析的固件内容和目标。除非你非常确定不符合要求，否则不要遗漏符合用户要求的目录和文件。如果用户需求不清楚，根据固件特征选择最佳分析路径，分解复杂任务，合理调用分析助手。\n\n2.  **理解上下文**：使用工具精确了解你当前的分析焦点和位置。\n\n3.  **委托任务**：需要深入分析时，调用适当的分析助手：\n    *   **探索目录**：使用子目录分析助手或其并行版本切换到指定目录进行分析。\n    *   **分析文件**：使用文件分析助手或其并行版本分析指定文件。\n\n4.  **总结并完成**：完成当前焦点的所有分析任务后，总结你的发现。如果所有任务都已完成，使用 `finish` 动作结束。\n\n*   在 'action' 字段中选择工具或 'finish'，并在 'action_input' 中提供参数或最终响应。\n\n\n当前可用工具：\n- Name: get_context_info\n  Description: 获取当前分析任务的上下文信息，例如正在分析的文件或目录。\n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {},\n  \"required\": []\n}\n\n- Name: execute_shell\n  Description: 在当前目录（squashfs-root）中执行只读 shell 命令。\n    **警告：** 此工具严格限制在当前工作目录内。所有文件操作不得引用父目录或任何其他目录。建议使用 `file` 工具在当前目录内进行探索和识别。\n    **注意：** 所有命令都在当前目录中执行。所有路径参数应相对于当前目录。禁止包含 '/' 或 '..' 的路径。\n    支持的命令：file, find, strings, grep, head, tail, readelf, cat, sort, ls。\n    禁止输出重定向（'>'、'>>'）、命令链接和目录更改。\n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"command\": {\n      \"type\": \"string\",\n      \"description\": \"要执行的 shell 命令。命令将在 'squashfs-root' 目录中执行。命令中的所有路径应相对于此目录。\"\n    }\n  },\n  \"required\": [\n    \"command\"\n  ]\n}\n\n- Name: r2_file_target\n  Description: \n    与 Radare2 交互式会话交互以分析指定的二进制文件。注意，此工具会自动为目标分析对象建立并维护 r2 会话。\n\n    主要功能：\n    - 发送 Radare2 命令并获取输出\n    - 会话状态在调用之间保持（对于同一文件）\n    - 支持使用 r2ghidra 插件进行反编译：\n    * 使用 `pdg` 命令反编译函数\n    * 提供类似 C 的伪代码输出\n\n    \n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"file_name\": {\n      \"type\": \"string\",\n      \"description\": \"要分析的文件名称。提供相对于固件根目录的路径，不要以 ./ 开头。\"\n    },\n    \"command\": {\n      \"type\": \"string\",\n      \"description\": \"直接与 Radare2 交互的命令\"\n    }\n  },\n  \"required\": [\n    \"file_name\",\n    \"command\"\n  ]\n}\n\n- Name: DeepFileAnalysisAssistant\n  Description: \n    用于对当前目录范围内指定文件进行深度分析的代理。\n    只能分析当前目录或其子目录（任意深度）中的文件。\n    对于你作用域内的文件，使用简单的相对路径，如 'config.php' 或 'subdir/file.txt'。\n    适用于单个文件的深度分析任务。你可以在观察单步结果后决定下一个分析任务。对于验证任务等有针对性的分析，强烈建议使用此代理。\n    \n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"file_name\": {\n      \"type\": \"string\",\n      \"description\": \"相对于你当前目录的文件路径（例如，'config.php'、'hnap/Login.xml'）。你只能访问当前目录或其子目录中的文件。\"\n    },\n    \"run_in_background\": {\n      \"type\": \"boolean\",\n      \"description\": \"是否在后台运行此任务。\",\n      \"default\": false\n    }\n  },\n  \"required\": [\n    \"file_name\"\n  ],\n  \"description\": \"包含文件分析目标的对象。使用相对于当前工作目录的路径。\"\n}\n\n- Name: DeepDirectoryAnalysisAssistant\n  Description: \n    用于对当前目录范围内指定子目录进行深度分析的代理。\n    只能分析当前目录中的子目录（直接子目录或更深层的嵌套目录）。\n    对于你作用域内的目录，使用简单的相对路径，如 'hnap' 或 'subdir/nested'。\n    适用于单个子目录的深度分析任务。你可以在观察单步结果后决定下一个分析任务。对于验证任务等有针对性的分析，强烈建议使用此代理。\n    \n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"dir_name\": {\n      \"type\": \"string\",\n      \"description\": \"相对于你当前目录的目录路径（例如，'hnap'、'init.d'）。你只能访问当前目录范围内的子目录。\"\n    },\n    \"run_in_background\": {\n      \"type\": \"boolean\",\n      \"description\": \"是否在后台运行此任务。\",\n      \"default\": false\n    }\n  },\n  \"required\": [\n    \"dir_name\"\n  ],\n  \"description\": \"包含目录分析目标的对象。使用相对于当前工作目录的路径。\"\n}\n\n- Name: ParallelDeepFileAnalysisDelegator\n  Description: \n    深度文件分析委托器 - 将当前目录范围内多个文件的分析任务分配给子代理并行处理。\n    只能分析当前目录或其子目录（任意深度）中的文件。\n    对于你作用域内的文件，使用简单的相对路径。\n    适用于同时对多个文件进行深度分析的任务。对于复杂任务或全面分析，强烈建议使用此委托器。\n    \n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"file_names\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\",\n        \"description\": \"相对于你当前目录的文件路径（例如，'config.php'、'hnap/Login.xml'）。你只能访问当前目录或其子目录中的文件。\"\n      },\n      \"description\": \"要并行分析的文件路径列表。使用相对于当前工作目录的路径。\"\n    },\n    \"run_in_background\": {\n      \"type\": \"boolean\",\n      \"description\": \"是否在后台运行此任务。\",\n      \"default\": false\n    }\n  },\n  \"required\": [\n    \"file_names\"\n  ],\n  \"description\": \"包含当前目录范围内文件分析目标列表的对象。\"\n}\n\n- Name: ParallelDeepDirectoryAnalysisDelegator\n  Description: \n    深度目录分析委托器 - 将当前目录范围内多个子目录的分析任务分配给子代理并行处理。\n    只能分析当前目录中的子目录（直接子目录或更深层的嵌套目录）。\n    对于你作用域内的目录，使用简单的相对路径。\n    适用于同时对多个子目录进行深度分析的任务。对于复杂任务或全面分析，强烈建议使用此委托器。\n    \n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"dir_names\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\",\n        \"description\": \"相对于你当前目录的目录路径（例如，'hnap'、'init.d'）。你只能访问当前目录范围内的子目录。\"\n      },\n      \"description\": \"要并行分析的目录路径列表。使用相对于当前工作目录的路径。\"\n    },\n    \"run_in_background\": {\n      \"type\": \"boolean\",\n      \"description\": \"是否在后台运行此任务。\",\n      \"default\": false\n    }\n  },\n  \"required\": [\n    \"dir_names\"\n  ],\n  \"description\": \"包含当前目录范围内目录分析目标列表的对象。\"\n}\n\n**后台执行和任务调度**：\n- 在 action_input 中设置 `run_in_background: true` 可异步运行任务。\n- 后台任务完成时，结果会自动注入。\n- 当需要后台结果才能继续时，使用 'wait' 动作。\n\n调度策略（避免遗漏和重复，最大化效率）：\n1. 识别独立任务，如果不立即需要结果，在后台启动它们。\n2. 在后台任务并行运行时继续其他工作。\n3. 当依赖任务需要后台结果时使用 'wait'。\n4. 在脑海中跟踪所有启动的后台任务以避免重复。\n5. 在 'finish' 之前，确保所有后台任务都已完成并整合结果。\n\n响应格式要求：\n\n你必须以严格的 JSON 格式响应。不要在 JSON 对象之外添加任何其他文本。\n不要使用 markdown 格式（如 ```json）。直接输出单个 JSON 对象。\n\n响应必须是符合以下模式的有效 JSON 对象：\n\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"thought\": {\n      \"type\": \"string\",\n      \"description\": \"在这里逐步思考。分析当前情况、目标、可用工具和对话历史。决定是调用工具还是使用 'finish' 动作提供最终答案。\"\n    },\n    \"action\": {\n      \"type\": \"string\",\n      \"description\": \"选择下一个动作。必须是可用工具名称之一、'wait' 或 'finish'。\"\n    },\n    \"action_input\": {\n      \"oneOf\": [\n        {\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"string\"\n        }\n      ],\n      \"description\": \"工具调用的参数或最终响应。如果 action 是工具名称，提供该工具所需的参数（通常是对象）；如果是 'finish'，使用 'final_response' 作为 action_input 的键提供最终响应（通常是包含字符串的对象）。\"\n    },\n    \"status\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"continue\",\n        \"complete\"\n      ],\n      \"description\": \"必须是 'continue'（如果选择了工具）或 'complete'（如果选择了 'finish'）。\"\n    }\n  },\n  \"required\": [\n    \"thought\",\n    \"action\",\n    \"action_input\",\n    \"status\"\n  ]\n}\n\n"}
{"role": "user", "content": "你的唯一任务是严格、客观地验证以下安全警报。你的分析必须完全基于所提供的证据。\n\n**核心原则**：\n1.  **证据驱动**：警报中的所有声明都必须通过分析所提供的证据来验证。严禁猜测或分析无关的信息和文件。\n2.  **逻辑审查**：不要仅仅确认代码的存在；你必须理解其执行逻辑。仔细检查条件语句、数据清理以及决定代码路径是否可达的其他因素。\n3.  **可利用性验证**：通过确认以下内容来验证漏洞是否**实际可利用**：\n    - **输入可控性**：攻击者可以控制污染的输入。\n    - **路径可达性**：在现实条件下可以到达易受攻击的代码路径。\n    - **实际影响**：汇聚操作可能造成实际的安全损害。\n4.  **完整攻击链**：验证从攻击者控制的输入到危险汇聚点的**完整传播路径**，每一步都有证据支持。\n\n**注意**：警报中的函数名可能来自反编译。请仔细搜索；不要仅仅因为它们不在符号表或字符串中就轻易断定它们不存在。\n\n验证以下发现：\n```json\n{\n  \"location\": \"libacos_shared.so:0x15c40 [sym.convert_wlan_params]\",\n  \"description\": \"A buffer overflow vulnerability exists in 'sym.convert_wlan_params' where 'strcpy' is used to copy data from an NVRAM variable directly into a fixed-size stack buffer without bounds checking. The attack chain is: 1) Attacker controls the NVRAM variable (e.g., via web interface or API), 2) The function calls 'nvram_get' or 'acosNvramConfig_get' to retrieve the value, 3) The value is passed to 'strcpy' without validation into a 100-byte stack buffer ('acStack_25c'), 4) If the NVRAM value exceeds 100 bytes, it overflows the buffer, potentially allowing code execution. Exploitable due to lack of input sanitization and size checks.\",\n  \"code_snippet\": \"From decompilation:\\nloc.imp.strcpy(puVar17 + -0x238, uVar4);\\nWhere puVar17 + -0x238 points to the stack buffer 'acStack_25c' (100 bytes), and uVar4 is from acosNvramConfig_get/nvram_get.\",\n  \"risk_score\": 8.5,\n  \"file_path\": \"usr/lib/libacos_shared.so\"\n}\n```\n**要求**：\n1.  **专注验证**：你的所有操作都必须围绕验证此发现进行。\n2.  **证据支持**：你的结论必须基于工具返回的实际证据。\n3.  **不做无关分析**：不要探索此发现之外的任何其他潜在问题。\n\n\n**提供结论**：在分析结束时，`final_response` 必须是包含以下字段的 JSON 对象：\n    - `accuracy`: (字符串) 对警报描述准确性的评估。必须是 'accurate'（准确）、'inaccurate'（不准确）或 'partially'（部分准确）。\n    - `vulnerability`: (布尔值) 判断该描述是否足以构成真实漏洞。必须是 True 或 False。前提条件是攻击者是已连接到设备并拥有有效登录凭据的用户。\n    - `risk_level`: (字符串) 如果 `vulnerability` 为 `true`，则为漏洞的风险级别。必须是 'Low'（低）、'Medium'（中）或 'High'（高）。\n    - `reason`: (字符串) 对你判断的详细解释，必须支持以上所有结论。对于确认为真实漏洞的发现，此字段还必须提供可重现的攻击载荷或概念验证（PoC）步骤，清楚地描述如何利用该漏洞。\n"}
{"role": "assistant", "content": "{\n  \"thought\": \"我需要验证安全警报中描述的缓冲区溢出漏洞。警报声称在 libacos_shared.so 的 sym.convert_wlan_params 函数中，strcpy 被用于将 NVRAM 变量值复制到固定大小的栈缓冲区，没有边界检查。我将使用 r2_file_target 工具分析该二进制文件，检查反编译代码以确认漏洞细节，包括 strcpy 的使用、缓冲区大小、NVRAM 获取函数调用以及缺乏边界检查。我必须基于证据验证输入可控性、路径可达性和实际影响。\",\n  \"action\": \"r2_file_target\",\n  \"action_input\": {\n    \"file_name\": \"usr/lib/libacos_ram_config_get 或类似函数。\",\n    \"command\": \"pdg sym.convert_wlan_params\"\n  },\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：r2_file_target\n参数：{\"file_name\": \"usr/lib/libacos_ram_config_get 或类似函数。\", \"command\": \"pdg sym.convert_wlan_params\"}\n结果：\n [错误] 为 usr/lib/libacos_ram_config_get 或类似函数。 初始化 Radare2 会话失败。请确保文件存在且 Radare2 配置正确。", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"我之前错误地使用了不正确的文件路径。现在我将使用正确的文件路径 'usr/lib/libacos_shared.so' 来调用 r2_file_target 工具，反编译 sym.convert_wlan_params 函数，以验证警报中描述的缓冲区溢出漏洞。我需要检查 strcpy 的使用、栈缓冲区大小、NVRAM 获取函数调用以及缺乏边界检查的证据。\",\n  \"action\": \"r2_file_target\",\n  \"action_input\": {\n    \"file_name\": \"usr/lib/libacos_shared.so\",\n    \"command\": \"pdg sym.convert_wlan_params\"\n  },\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：r2_file_target\n参数：{\"file_name\": \"usr/lib/libacos_shared.so\", \"command\": \"pdg sym.convert_wlan_params\"}\n结果：\n Usage: pdg  # Native Ghidra decompiler plugin\n| pdg           # Decompile current function with the Ghidra decompiler\n| pdg*          # Decompiled code is returned to r2 as comment\n| pdga          # Side by side two column disasm and decompilation\n| pdgd          # Dump the debug XML Dump\n| pdgj          # Dump the current decompiled function as JSON\n| pdgo          # Decompile current function side by side with offsets\n| pdgp          # Switch to RAsm and RAnal plugins driven by SLEIGH from Ghidra\n| pdgs          # Display loaded Sleigh Languages (alias for pdgL)\n| pdgsd N       # Disassemble N instructions with Sleigh and print pcode\n| pdgss         # Display automatically matched Sleigh Language ID\n| pdgx          # Dump the XML of the current decompiled function\nEnvironment:\n| %SLEIGHHOME   # Path to ghidra sleigh directory (same as r2ghidra.sleighhome)", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"我需要获取 sym.convert_wlan_params 函数的反编译代码来验证缓冲区溢出漏洞。上次调用 r2_file_target 时，命令格式可能不正确，因为 pdg 命令需要先选择函数。我将发送复合命令 's sym.convert_wlan_params; pdg' 来先定位到函数然后反编译它。这将帮助我检查 strcpy 的使用、栈缓冲区大小、NVRAM 获取函数调用以及缺乏边界检查的证据。\",\n  \"action\": \"r2_file_target\",\n  \"action_input\": {\n    \"file_name\": \"usr/lib/libacos_shared.so\",\n    \"command\": \"s sym.convert_wlan_params; pdg\"\n  },\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：r2_file_target\n参数：{\"file_name\": \"usr/lib/libacos_shared.so\", \"command\": \"s sym.convert_wlan_params; pdg\"}\n结果：\n uint sym.convert_wlan_params(void)\n\n{\n    ushort uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uchar uVar6;\n    uint uVar7;\n    uint unaff_r4;\n    int32_t iVar8;\n    uint unaff_r5;\n    int32_t iVar9;\n    uint unaff_r6;\n    int32_t iVar10;\n    uint unaff_r7;\n    int32_t iVar11;\n    uint unaff_r8;\n    uint unaff_r9;\n    int32_t iVar12;\n    uint unaff_r10;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint unaff_r11;\n    int32_t iVar15;\n    uint in_lr;\n    bool bVar16;\n    uint *puVar17;\n    int32_t aiStack_ab0 [3];\n    int32_t aiStack_aa4 [18];\n    uchar auStack_a5c [2048];\n    char acStack_25c [100];\n    uchar auStack_1f8 [100];\n    uchar auStack_194 [100];\n    ushort uStack_130;\n    uchar auStack_12e [62];\n    ushort uStack_f0;\n    uchar auStack_ee [62];\n    ushort uStack_b0;\n    uchar auStack_ae [62];\n    ushort uStack_70;\n    uchar auStack_6e [62];\n    ushort auStack_30 [2];\n    ushort auStack_2c [4];\n    uint auStack_24 [9];\n    \n    *(*0x54 + -4) = in_lr;\n    puVar17 = *0x54 + -4 + -4;\n    *puVar17 = unaff_r11;\n    puVar17 = puVar17 + -4;\n    *puVar17 = unaff_r10;\n    puVar17 = puVar17 + -4;\n    *puVar17 = unaff_r9;\n    puVar17 = puVar17 + -4;\n    *puVar17 = unaff_r8;\n    puVar17 = puVar17 + -4;\n    *puVar17 = unaff_r7;\n    puVar17 = puVar17 + -4;\n    *puVar17 = unaff_r6;\n    puVar17 = puVar17 + -4;\n    *puVar17 = unaff_r5;\n    puVar17 = puVar17 + -4;\n    *puVar17 = unaff_r4;\n    iVar9 = puVar17 + -0x170;\n    *(puVar17 + -8) = 0x31;\n    iVar8 = *0x13b24 + 0x12e20;\n    iVar11 = *0x13b2c;\n    iVar13 = *0x13b30;\n    iVar10 = *0x13b34;\n    loc.imp.acosNvramConfig_read(iVar8 + *0x13b28,iVar9,100);\n    iVar10 = iVar8 + iVar10;\n    *(puVar17 + -0xa88) = *0x13b38;\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13b3c,iVar9);\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13b40,iVar9);\n    loc.imp.acosNvramConfig_read(iVar8 + iVar11,iVar9,100);\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13b44,iVar9);\n    loc.imp.acosNvramConfig_set(iVar8 + iVar13,iVar9);\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13b48,iVar9);\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13b4c,iVar9);\n    iVar3 = loc.imp.acosNvramConfig_match(iVar10,iVar8 + *(puVar17 + -0xa88));\n    if (iVar3 == 0) {\n        iVar3 = loc.imp.acosNvramConfig_match(iVar10,iVar8 + *0x13d54);\n        if (iVar3 != 0) {\n            iVar3 = *0x13e74;\n            iVar10 = *0x13e80;\n            *(puVar17 + -0xa70) = *0x13e78;\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13e7c,iVar8 + iVar3);\n            iVar11 = *0x13da4;\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13e84,iVar8 + iVar3);\n            iVar11 = iVar8 + iVar11;\n            goto code_r0x00012ef4;\n        }\n        iVar3 = loc.imp.acosNvramConfig_match(iVar10,iVar8 + *0x13d90);\n        if (iVar3 != 0) {\n            iVar3 = *0x13e74;\n            iVar13 = iVar8 + iVar3;\n            iVar10 = *0x13e80;\n            *(puVar17 + -0xa70) = *0x13e78;\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13e7c,iVar13);\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13e84,iVar13);\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13e88,iVar8 + iVar10);\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13e8c,iVar8 + iVar10);\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13e90,iVar13);\n            iVar11 = *0x13e98;\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13e94,iVar13);\n            goto code_r0x00012f18;\n        }\n        iVar3 = loc.imp.acosNvramConfig_match(iVar10,iVar8 + *0x13d94);\n        if (iVar3 != 0) {\n            iVar11 = *0x13d98;\n            iVar3 = *0x13e74;\n            iVar10 = *0x13e80;\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13e7c,iVar8 + iVar11);\n            *(puVar17 + -0xa70) = *0x13e78;\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13e84,iVar8 + iVar11);\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13e90,iVar8 + iVar3);\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13e94,iVar8 + iVar3);\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13d58,iVar8 + iVar10);\n            iVar11 = *0x13e98;\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13d5c,iVar8 + iVar10);\n            goto code_r0x00012f18;\n        }\n        iVar3 = loc.imp.acosNvramConfig_match(iVar10,iVar8 + *0x15eb0);\n        if (iVar3 != 0) {\n            iVar3 = *0x15eb8;\n            iVar10 = *0x15ed8;\n            *(puVar17 + -0xa70) = *0x15ed0;\n            iVar14 = *0x15f20;\n            loc.imp.acosNvramConfig_set(iVar8 + *0x15f28,iVar8 + iVar3);\n            iVar12 = iVar8 + iVar10;\n            loc.imp.acosNvramConfig_set(iVar8 + *0x15f2c,iVar8 + iVar3);\n            loc.imp.acosNvramConfig_set(iVar8 + *0x15f30,iVar12);\n            loc.imp.acosNvramConfig_set(iVar8 + *0x15f34,iVar12);\n            loc.imp.acosNvramConfig_set(iVar8 + *0x15f38,iVar8 + iVar14);\n            loc.imp.acosNvramConfig_set(iVar8 + *0x15f3c,iVar8 + iVar14);\n            iVar12 = loc.imp.acosNvramConfig_match(iVar8 + *(puVar17 + -0xa70),iVar12);\n            iVar3 = *0x15ed4;\n            if (iVar12 == 0) {\ncode_r0x000155e0:\n                iVar14 = *0x15f40;\n                iVar12 = loc.imp.acosNvramConfig_match(iVar8 + iVar14,iVar8 + *0x15f44);\n                if (iVar12 == 0) {\n                    iVar12 = loc.imp.acosNvramConfig_match(iVar8 + iVar14,iVar8 + *0x15ff8);\n                    if (iVar12 == 0) {\n                        iVar11 = iVar8 + iVar11;\n                        loc.imp.acosNvramConfig_get(iVar11);\n                        iVar12 = loc.imp.atoi();\n                        if (iVar12 != 6 && iVar12 + -6 < 0 == SBORROW4(iVar12,6)) {\n                            uVar4 = loc.imp.acosNvramConfig_get(iVar11);\n                            loc.imp.sprintf(puVar17 + -0x238,iVar8 + *0x15f50,uVar4,0x75);\n                            loc.imp.acosNvramConfig_set(iVar8 + iVar13,puVar17 + -0x238);\n                            goto code_r0x000156e0;\n                        }\n                        iVar12 = loc.imp.acosNvramConfig_match(iVar11,iVar8 + iVar3);\n                        if (iVar12 == 0) {\n                            uVar4 = loc.imp.acosNvramConfig_get(iVar11);\n                            loc.imp.sprintf(puVar17 + -0x238,iVar8 + *0x15f50,uVar4,0x6c);\n                        }\n                        else {\n                            uVar4 = loc.imp.acosNvramConfig_get(iVar11);\n                            loc.imp.strcpy(puVar17 + -0x238,uVar4);\n                        }\n                        loc.imp.acosNvramConfig_set(iVar8 + iVar13,puVar17 + -0x238);\n                        iVar11 = *0x15f48;\n                    }\n                    else {\n                        loc.imp.acosNvramConfig_get(iVar8 + iVar11);\n                        iVar11 = loc.imp.atoi();\n                        if (iVar11 != 4 && iVar11 + -4 < 0 == SBORROW4(iVar11,4)) {\ncode_r0x000156e0:\n                            iVar11 = *0x15f24;\n                        }\n                        else {\n                            iVar11 = *0x15f48;\n                        }\n                    }\n                }\n                else {\n                    loc.imp.acosNvramConfig_get(iVar8 + iVar11);\n                    iVar11 = loc.imp.atoi();\n                    if (iVar11 != 7 && iVar11 + -7 < 0 == SBORROW4(iVar11,7)) goto code_r0x000156e0;\n                    iVar11 = *0x15f48;\n                }\n                goto code_r0x00012f18;\n            }\n            iVar12 = loc.imp.acosNvramConfig_match(iVar8 + *0x15ff4,iVar8 + iVar3);\n            if (iVar12 == 0) goto code_r0x000155e0;\n            goto code_r0x00012f14;\n        }\n        iVar3 = *0x15ed4;\n        iVar10 = *0x15ed8;\n        *(puVar17 + -0xa70) = *0x15ed0;\n    }\n    else {\n        iVar3 = *0x13e74;\n        iVar11 = iVar8 + iVar3;\n        iVar10 = *0x13e80;\n        *(puVar17 + -0xa70) = *0x13e78;\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13e7c,iVar11);\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13e84,iVar11);\ncode_r0x00012ef4:\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13e88,iVar11);\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13e8c,iVar11);\ncode_r0x00012f14:\n        iVar11 = *0x13e98;\ncode_r0x00012f18:\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13b50,iVar8 + iVar11);\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13b54,iVar8 + iVar11);\n    }\n    *(puVar17 + -0xa84) = *0x13b58;\n    iVar11 = iVar8 + *0x13b58;\n    *(puVar17 + -0xa8c) = *0x13b5c;\n    *(puVar17 + -0xa74) = *0x13b60;\n    *(puVar17 + -0xa80) = iVar11;\n    iVar12 = *0x13b68;\n    iVar14 = *0x13b6c;\n    *(puVar17 + -0xa7c) = iVar8 + *(puVar17 + -0xa8c);\n    *(puVar17 + -0xa58) = *0x13b64;\n    loc.imp.acosNvramConfig_set(iVar11,iVar8 + iVar3);\n    loc.imp.acosNvramConfig_set(*(puVar17 + -0xa7c),iVar8 + iVar3);\n    iVar11 = iVar8 + *(puVar17 + -0xa74);\n    iVar15 = iVar8 + *0x13b70;\n    loc.imp.acosNvramConfig_set(iVar8 + iVar12,iVar11);\n    loc.imp.acosNvramConfig_set(iVar8 + iVar14,iVar11);\n    loc.imp.acosNvramConfig_set(iVar15,iVar11);\n    iVar13 = *0x13b78;\n    *(puVar17 + -0xa78) = iVar8 + *0x13b74;\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13b74,iVar11);\n    iVar13 = iVar8 + iVar13;\n    iVar11 = loc.imp.acosNvramConfig_match(iVar13,iVar8 + *(puVar17 + -0xa58));\n    if (iVar11 == 0) {\n        iVar11 = loc.imp.acosNvramConfig_match(iVar13,iVar8 + *0x13dd8);\n        if (iVar11 == 0) {\n            iVar11 = loc.imp.acosNvramConfig_match(iVar13,iVar8 + *0x13e10);\n            if (iVar11 != 0) {\n                iVar11 = *0x13ea4;\n                *(puVar17 + -0xa80) = *0x13ea8;\n                loc.imp.acosNvramConfig_set(iVar15,iVar8 + iVar11);\n                iVar13 = *0x15e50;\n                loc.imp.acosNvramConfig_set(*(puVar17 + -0xa78),iVar8 + iVar11);\n                loc.imp.acosNvramConfig_set(iVar8 + *0x15e54,iVar8 + iVar13);\n                iVar11 = *0x15e5c;\n                loc.imp.acosNvramConfig_set(iVar8 + *0x15e58,iVar8 + iVar13);\n                loc.imp.acosNvramConfig_set(iVar8 + *0x15e60,iVar8 + iVar11);\n                iVar13 = *0x15e64;\n                loc.imp.acosNvramConfig_set(iVar8 + iVar13,iVar8 + iVar11);\n                iVar11 = loc.imp.acosNvramConfig_match(iVar8 + *(puVar17 + -0xa80),iVar8 + iVar10);\n                if (iVar11 != 0) {\n                    loc.imp.acosNvramConfig_set(iVar8 + iVar13,iVar8 + *0x15e9c);\n                }\n                iVar11 = *0x15e68;\n                *(puVar17 + -0xa60) = puVar17 + -0xc;\n                uVar4 = loc.imp.acosNvramConfig_get(iVar8 + iVar11);\n                loc.imp.acosNvramConfig_set(iVar8 + *0x15e6c,uVar4);\n                uVar4 = loc.imp.acosNvramConfig_get(iVar8 + iVar11);\n                loc.imp.acosNvramConfig_set(iVar8 + *0x15e70,uVar4);\n                loc.imp.acosNvramConfig_set(iVar8 + *0x15e74,iVar8 + iVar10);\n            }\n            else {\n                iVar11 = loc.imp.acosNvramConfig_match(iVar13,iVar8 + *0x13d60);\n                if (iVar11 == 0) {\n                    iVar11 = loc.imp.acosNvramConfig_match(iVar13,iVar8 + *0x15e90);\n                    if (iVar11 == 0) {\n                        iVar11 = loc.imp.acosNvramConfig_match(iVar13,iVar8 + *0x15ea8);\n                        if (iVar11 != 0) {\n                            iVar13 = *0x15fc0;\n                            iVar11 = loc.imp.acosNvramConfig_match(iVar8 + iVar13,iVar8 + *0x15f78);\n                            if (iVar11 == 0) {\n                                iVar11 = loc.imp.acosNvramConfig_match(iVar8 + iVar13,iVar8 + *0x16000);\n                                if (iVar11 == 0) {\n                                    iVar11 = *0x16010;\n                                    loc.imp.acosNvramConfig_set(iVar15,iVar8 + iVar11);\n                                    loc.imp.acosNvramConfig_set(*(puVar17 + -0xa78),iVar8 + iVar11);\n                                    iVar11 = *0x15e9c;\n                                }\n                                else {\n                                    iVar11 = *0x16004;\n                                    loc.imp.acosNvramConfig_set(iVar15,iVar8 + iVar11);\n                                    loc.imp.acosNvramConfig_set(*(puVar17 + -0xa78),iVar8 + iVar11);\n                                    iVar11 = *0x15eec;\n                                }\n                            }\n                            else {\n                                iVar13 = *0x15f7c;\n                                loc.imp.acosNvramConfig_set(iVar15,iVar8 + iVar13);\n                                iVar11 = *0x15e5c;\n                                loc.imp.acosNvramConfig_set(*(puVar17 + -0xa78),iVar8 + iVar13);\n                            }\n                            loc.imp.acosNvramConfig_set(iVar8 + *0x15e60,iVar8 + iVar11);\n                            iVar13 = *0x15fc4;\n                            loc.imp.acosNvramConfig_set(iVar8 + *0x15e64,iVar8 + iVar11);\n                            *(puVar17 + -0xa60) = puVar17 + -0xc;\n                            *(puVar17 + -0xa80) = *0x15eac;\n                            uVar4 = loc.imp.acosNvramConfig_get(iVar8 + iVar13);\n                            loc.imp.acosNvramConfig_set(iVar8 + *0x15fc8,uVar4);\n                            iVar11 = *0x15fcc;\n                            uVar4 = loc.imp.acosNvramConfig_get(iVar8 + iVar13);\n                            loc.imp.acosNvramConfig_set(iVar8 + *0x15fd0,uVar4);\n                            uVar4 = loc.imp.acosNvramConfig_get(iVar8 + iVar11);\n                            loc.imp.acosNvramConfig_set(iVar8 + *0x15fd4,uVar4);\n                            iVar13 = *0x15fd8;\n                            uVar4 = loc.imp.acosNvramConfig_get(iVar8 + iVar11);\n                            loc.imp.acosNvramConfig_set(iVar8 + *0x15fdc,uVar4);\n                            uVar4 = loc.imp.acosNvramConfig_get(iVar8 + iVar13);\n                            loc.imp.acosNvramConfig_set(iVar8 + *0x15fe0,uVar4);\n                            iVar11 = *0x15fe4;\n                            uVar4 = loc.imp.acosNvramConfig_get(iVar8 + iVar13);\n                            loc.imp.acosNvramConfig_set(iVar8 + *0x15fe8,uVar4);\n                            uVar4 = loc.imp.acosNvramConfig_get(iVar8 + iVar11);\n                            loc.imp.acosNvramConfig_set(iVar8 + *0x15fec,uVar4);\n                            uVar4 = loc.imp.acosNvramConfig_get(iVar8 + iVar11);\n                            loc.imp.acosNvramConfig_set(iVar8 + *0x15ff0,uVar4);\n                        }\n                        else {\n                            *(puVar17 + -0xa60) = puVar17 + -0xc;\n                            *(puVar17 + -0xa80) = *0x15eac;\n                        }\n                        goto code_r0x00013040;\n                    }\n                    iVar11 = *0x15e94;\n                    *(puVar17 + -0xa60) = puVar17 + -0xc;\n                    *(puVar17 + -0xa80) = *0x15eac;\n                    loc.imp.acosNvramConfig_set(iVar15,iVar8 + iVar11);\n                    iVar13 = *0x15f18;\n                    loc.imp.acosNvramConfig_set(*(puVar17 + -0xa78),iVar8 + iVar11);\n                    loc.imp.acosNvramConfig_set(iVar8 + *0x15e54,iVar8 + iVar13);\n                    iVar11 = *0x15e9c;\n                    loc.imp.acosNvramConfig_set(iVar8 + *0x15e58,iVar8 + iVar13);\n                }\n                else {\n                    iVar11 = *0x13d64;\n                    *(puVar17 + -0xa60) = puVar17 + -0xc;\n                    *(puVar17 + -0xa80) = *0x13ea8;\n                    loc.imp.acosNvramConfig_set(iVar15,iVar8 + iVar11);\n                    iVar13 = *0x13d68;\n                    loc.imp.acosNvramConfig_set(*(puVar17 + -0xa78),iVar8 + iVar11);\n                    loc.imp.acosNvramConfig_set(iVar8 + *0x13d6c,iVar8 + iVar13);\n                    iVar11 = *0x13d74;\n                    loc.imp.acosNvramConfig_set(iVar8 + *0x13d70,iVar8 + iVar13);\n                }\n                loc.imp.acosNvramConfig_set(iVar8 + *0x13d78,iVar8 + iVar11);\n                iVar13 = *0x13d80;\n                loc.imp.acosNvramConfig_set(iVar8 + *0x13d7c,iVar8 + iVar11);\n                uVar4 = loc.imp.acosNvramConfig_get(iVar8 + iVar13);\n                loc.imp.acosNvramConfig_set(iVar8 + *0x13d84,uVar4);\n                uVar4 = loc.imp.acosNvramConfig_get(iVar8 + iVar13);\n                loc.imp.acosNvramConfig_set(iVar8 + *0x13d88,uVar4);\n                loc.imp.acosNvramConfig_set(iVar8 + *0x13d8c,iVar8 + *0x13da4);\n            }\n        }\n        else {\n            iVar11 = *0x13ddc;\n            *(puVar17 + -0xa60) = puVar17 + -0xc;\n            loc.imp.acosNvramConfig_set(iVar8 + iVar12,iVar8 + iVar11);\n            iVar13 = *0x13d10;\n            loc.imp.acosNvramConfig_set(iVar8 + iVar14,iVar8 + iVar11);\n            uVar4 = loc.imp.acosNvramConfig_get(iVar8 + iVar13);\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13d14,uVar4);\n            iVar11 = *0x13d18;\n            uVar4 = loc.imp.acosNvramConfig_get(iVar8 + iVar13);\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13d1c,uVar4);\n            uVar4 = loc.imp.acosNvramConfig_get(iVar8 + iVar11);\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13d20,uVar4);\n            iVar13 = *0x13d24;\n            uVar4 = loc.imp.acosNvramConfig_get(iVar8 + iVar11);\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13d28,uVar4);\n            uVar4 = loc.imp.acosNvramConfig_get(iVar8 + iVar13);\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13d2c,uVar4);\n            iVar11 = *0x13d30;\n            uVar4 = loc.imp.acosNvramConfig_get(iVar8 + iVar13);\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13d34,uVar4);\n            uVar4 = loc.imp.acosNvramConfig_get(iVar8 + iVar11);\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13d38,uVar4);\n            iVar13 = *0x13d3c;\n            uVar4 = loc.imp.acosNvramConfig_get(iVar8 + iVar11);\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13d40,uVar4);\n            loc.imp.acosNvramConfig_read(iVar8 + *0x13d44,*(puVar17 + -0xa60),3);\n            *(puVar17 + -0xc) = *(puVar17 + -0xc) + '\\x01';\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13d48,*(puVar17 + -0xa60));\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13d4c,*(puVar17 + -0xa60));\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13d6c,iVar8 + iVar13);\n            iVar12 = *0x13d50;\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13d70,iVar8 + iVar13);\n            iVar12 = iVar8 + iVar12;\n            iVar11 = loc.imp.acosNvramConfig_match(iVar12,iVar8 + *0x13e0c);\n            if ((iVar11 != 0) || (iVar11 = loc.imp.acosNvramConfig_match(iVar12,iVar8 + *0x13e9c), iVar11 != 0)) {\n                iVar11 = *(puVar17 + -0xa84);\n                *(puVar17 + -0xa80) = *0x13ea8;\n                loc.imp.acosNvramConfig_set(iVar8 + iVar11,iVar8 + iVar3);\n                loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa8c),iVar8 + iVar3);\n            }\n            else {\n                iVar11 = loc.imp.acosNvramConfig_match(iVar12,iVar8 + *0x13ea0);\n                if (iVar11 == 0) {\n                    *(puVar17 + -0xa80) = *0x15eac;\n                    uVar4 = loc.imp.acosNvramConfig_get(iVar12);\n                    loc.imp.printf(iVar8 + *0x15f70,uVar4);\n                }\n                else {\n                    uVar4 = *(puVar17 + -0xa80);\n                    *(puVar17 + -0xa80) = *0x13ea8;\n                    loc.imp.acosNvramConfig_set(uVar4,iVar8 + iVar10);\n                    loc.imp.acosNvramConfig_set(*(puVar17 + -0xa7c),iVar8 + iVar10);\n                }\n            }\n        }\n    }\n    else {\n        iVar11 = *0x13d68;\n        *(puVar17 + -0xa60) = puVar17 + -0xc;\n        *(puVar17 + -0xa80) = *0x13ea8;\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13d6c,iVar8 + iVar11);\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13d70,iVar8 + iVar11);\n    }\ncode_r0x00013040:\n    iVar13 = iVar8 + iVar10;\n    iVar11 = loc.imp.acosNvramConfig_match(iVar8 + *0x13b7c,iVar13);\n    if (iVar11 == 0) {\n        iVar13 = iVar8 + iVar3;\n    }\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13b80,iVar13);\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13b84,iVar13);\n    *(puVar17 + -0xa78) = *0x13b88;\n    iVar11 = loc.imp.acosNvramConfig_match(iVar8 + *0x13b8c,iVar8 + *0x13b88);\n    if ((iVar11 == 0) || (iVar11 = loc.imp.acosNvramConfig_match(iVar8 + *0x13e24,iVar8 + iVar10), iVar11 == 0)) {\n        *(puVar17 + -8) = 0x30;\n    }\n    else {\n        *(puVar17 + -8) = 0x31;\n    }\n    iVar13 = *(puVar17 + -0xa70);\n    iVar11 = loc.imp.acosNvramConfig_match(iVar8 + iVar13,iVar8 + iVar10);\n    uVar6 = iVar13;\n    if (iVar11 != 0) {\n        iVar11 = loc.imp.acosNvramConfig_match(iVar8 + *0x13e28,iVar8 + iVar10);\n        if (iVar11 != 0) {\n            uVar6 = 0x30;\n        }\n        if (iVar11 != 0) {\n            *(puVar17 + -8) = uVar6;\n        }\n    }\n    iVar13 = puVar17 + -8;\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13b90,iVar13);\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13b94,iVar13);\n    iVar11 = loc.imp.acosNvramConfig_match(iVar8 + *0x13b98,iVar8 + *0x13b9c);\n    bVar16 = iVar11 == 0;\n    if (!bVar16) {\n        uVar6 = 0x30;\n    }\n    if (bVar16) {\n        uVar6 = 0x31;\n    }\n    if (!bVar16) {\n        *(puVar17 + -8) = uVar6;\n    }\n    if (bVar16) {\n        *(puVar17 + -8) = uVar6;\n    }\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13ba0,iVar13);\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13ba4,iVar13);\n    loc.imp.acosNvramConfig_read(iVar8 + *0x13ba8,iVar9,100);\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13bac,iVar9);\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13bb0,iVar9);\n    loc.imp.acosNvramConfig_read(iVar8 + *0x13bb4,iVar9,100);\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13bb8,iVar9);\n    iVar11 = *0x13bc0;\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13bbc,iVar9);\n    uVar4 = loc.imp.acosNvramConfig_get(iVar8 + iVar11);\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13bc4,uVar4);\n    uVar4 = loc.imp.acosNvramConfig_get(iVar8 + iVar11);\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13bc8,uVar4);\n    iVar9 = loc.imp.acosNvramConfig_match(iVar8 + *0x13bcc,iVar8 + iVar10);\n    if (iVar9 == 0) {\n        iVar9 = 2;\n        iVar11 = iVar8 + *(puVar17 + -0xa74);\n        iVar12 = iVar8 + *0x13cf8;\n        *(puVar17 + -0xa84) = *0x13bd4;\n        *(puVar17 + -0xa48) = *0x13be8;\n        *(puVar17 + -0xa4c) = *0x13bd0;\n        *(puVar17 + -0xa8c) = *0x13bec;\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13bd0,iVar12);\n        *(puVar17 + -0xa44) = *0x13bd8;\n        *(puVar17 + -0xa40) = *0x13bf0;\n        loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa84),iVar12);\n        loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa48),iVar11);\n        loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa8c),iVar11);\n        iVar14 = *0x13bf8;\n        loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa44),iVar12);\n        iVar13 = *0x13bf4;\n        loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa40),iVar11);\n        do {\n            fcn.00010b20(iVar8 + iVar13,iVar12,iVar9);\n            fcn.00010b20(iVar8 + iVar14,iVar11,iVar9);\n            fcn.00010b70(iVar8 + iVar13,iVar12,iVar9);\n            iVar15 = iVar9;\n            iVar9 = iVar9 + 1;\n            fcn.00010b70(iVar8 + iVar14,iVar11,iVar15);\n        } while (iVar9 != 5);\n        iVar11 = puVar17 + -0xa38;\n        *(puVar17 + -0xa5c) = *0x13bfc;\n        iVar9 = loc.imp.acosNvramConfig_match(iVar8 + *0x13bfc,iVar8 + iVar10);\n        if (iVar9 == 0) goto code_r0x0001360c;\ncode_r0x000133d4:\n        iVar9 = *0x13d3c;\n    }\n    else {\n        *(puVar17 + -0xa4c) = *0x13bd0;\n        *(puVar17 + -0xa84) = *0x13bd4;\n        iVar9 = iVar8 + *0x13e48;\n        *(puVar17 + -0xa7c) = *0x13e48;\n        *(puVar17 + -0xa44) = *0x13bd8;\n        loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa4c),iVar9);\n        loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa84),iVar9);\n        iVar11 = puVar17 + -0xa34 + -4;\n        loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa44),iVar9);\n        loc.imp.memset(iVar11,0,0x800);\n        loc.imp.acosNvramConfig_get(iVar8 + *0x13bdc);\n        iVar9 = loc.imp.atoi();\n        iVar9 = iVar9 + 0;\n        if (iVar9 != 0 && -1 < iVar9) {\n            iVar13 = *(puVar17 + -0xa74);\n            *(puVar17 + -0xa64) = iVar8;\n            iVar15 = 0;\n            iVar14 = puVar17 + -0x238;\n            iVar12 = *0x13be0;\n            *(puVar17 + -0xa8c) = iVar8 + *0x13be4;\n            do {\n                while( true ) {\n                    iVar5 = iVar15;\n                    iVar15 = iVar15 + 1;\n                    loc.imp.sprintf(iVar14,iVar8 + iVar12,iVar5);\n                    iVar5 = loc.imp.acosNvramConfig_match(iVar14,iVar8 + iVar13);\n                    if (iVar5 != 0) break;\n                    uVar4 = loc.imp.acosNvramConfig_get(iVar14);\n                    loc.imp.strcat(iVar11,uVar4);\n                    iVar5 = loc.imp.strlen(iVar11);\n                    loc.imp.memcpy(iVar11 + iVar5,*(puVar17 + -0xa8c),2);\n                    if (iVar9 == iVar15 || iVar9 < iVar15) goto code_r0x00013304;\n                }\n            } while (iVar9 != iVar15 && iVar15 <= iVar9);\ncode_r0x00013304:\n            iVar8 = *(puVar17 + -0xa64);\n        }\n        iVar9 = 2;\n        *(puVar17 + -0xa48) = *0x13be8;\n        *(puVar17 + -0xa8c) = *0x13bec;\n        *(puVar17 + -0xa40) = *0x13bf0;\n        iVar12 = iVar8 + *(puVar17 + -0xa7c);\n        iVar13 = *0x13bf4;\n        iVar14 = *0x13bf8;\n        loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa48),iVar11);\n        loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa8c),iVar11);\n        loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa40),iVar11);\n        do {\n            fcn.00010b20(iVar8 + iVar13,iVar12,iVar9);\n            fcn.00010b20(iVar8 + iVar14,iVar11,iVar9);\n            fcn.00010b70(iVar8 + iVar13,iVar12,iVar9);\n            iVar15 = iVar9;\n            iVar9 = iVar9 + 1;\n            fcn.00010b70(iVar8 + iVar14,iVar11,iVar15);\n        } while (iVar9 != 5);\n        *(puVar17 + -0xa5c) = *0x13bfc;\n        iVar9 = loc.imp.acosNvramConfig_match(iVar8 + *0x13bfc,iVar8 + iVar10);\n        if (iVar9 != 0) goto code_r0x000133d4;\ncode_r0x0001360c:\n        iVar9 = *0x13d04;\n    }\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13c00,iVar8 + iVar9);\n    iVar13 = iVar8 + iVar10;\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13c04,iVar8 + iVar9);\n    iVar9 = loc.imp.acosNvramConfig_match(iVar8 + *(puVar17 + -0xa80),iVar13);\n    if (iVar9 == 0) {\n        iVar9 = *0x13e44;\n        *(puVar17 + -0xa84) = puVar17 + -0x1d4;\n        iVar13 = iVar8 + *(puVar17 + -0xa74);\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13e50,iVar8 + iVar9);\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13e40,iVar8 + iVar9);\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13ca0,iVar13);\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13c14,iVar13);\n    }\n    else {\n        iVar12 = iVar8 + *0x13c08;\n        iVar9 = loc.imp.acosNvramConfig_match(iVar12,iVar13);\n        if (iVar9 == 0) {\n            iVar9 = loc.imp.acosNvramConfig_match(iVar12,iVar8 + *0x13da4);\n            if (iVar9 == 0) {\n                iVar9 = loc.imp.acosNvramConfig_match(iVar12,iVar8 + *0x13e4c);\n                if (iVar9 != 0) {\n                    iVar9 = *0x15edc;\n                    *(puVar17 + -0xa84) = puVar17 + -0x1d4;\n                    loc.imp.acosNvramConfig_set(iVar8 + *0x15f54,iVar8 + iVar9);\n                    loc.imp.acosNvramConfig_set(iVar8 + *0x15ee0,iVar8 + iVar9);\n                    uVar4 = loc.imp.acosNvramConfig_get(iVar8 + *0x15f58);\n                    uVar7 = loc.imp.acosNvramConfig_get(iVar8 + *0x15f5c);\n                    loc.imp.sprintf(*(puVar17 + -0xa84),iVar8 + *0x15f60,uVar4,uVar7);\n                    loc.imp.acosNvramConfig_set(iVar8 + *0x15f64,*(puVar17 + -0xa84));\n                    loc.imp.acosNvramConfig_set(iVar8 + *0x15f68,*(puVar17 + -0xa84));\n                }\n                else {\n                    iVar9 = *0x13e44;\n                    *(puVar17 + -0xa84) = puVar17 + -0x1d4;\n                }\n                goto code_r0x00013670;\n            }\n            iVar9 = loc.imp.acosNvramConfig_match(iVar8 + *0x13da8,iVar13);\n            if (iVar9 == 0) {\n                iVar12 = *0x15ea0;\n                iVar9 = *0x15edc;\n                iVar13 = iVar8 + *(puVar17 + -0xa74);\n                loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa4c),iVar8 + iVar12);\n                loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa84),iVar8 + iVar12);\n                loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa48),iVar13);\n                loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa8c),iVar13);\n            }\n            else {\n                iVar9 = *0x13e44;\n                loc.imp.acosNvramConfig_set(iVar8 + *0x13e50,iVar8 + iVar9);\n                loc.imp.acosNvramConfig_set(iVar8 + *0x13e40,iVar8 + iVar9);\n            }\n            iVar13 = *0x13dac;\n            *(puVar17 + -0xa84) = puVar17 + -0x1d4;\n        }\n        else {\n            iVar13 = loc.imp.acosNvramConfig_match(iVar8 + *0x13c0c,iVar13);\n            iVar9 = *0x13e44;\n            if (iVar13 != 0) {\n                loc.imp.acosNvramConfig_set(iVar8 + *0x13e50,iVar8 + iVar9);\n                loc.imp.acosNvramConfig_set(iVar8 + *0x13e40,iVar8 + iVar9);\n            }\n            else {\n                iVar12 = *0x13e48;\n                iVar13 = iVar8 + *(puVar17 + -0xa74);\n                loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa4c),iVar8 + iVar12);\n                loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa84),iVar8 + iVar12);\n                loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa48),iVar13);\n                loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa8c),iVar13);\n            }\n            iVar13 = *0x13c10;\n            *(puVar17 + -0xa84) = puVar17 + -0x1d4;\n        }\n        uVar4 = loc.imp.acosNvramConfig_get(iVar8 + iVar13);\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13ca0,uVar4);\n        uVar4 = loc.imp.acosNvramConfig_get(iVar8 + iVar13);\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13c14,uVar4);\n    }\ncode_r0x00013670:\n    iVar14 = iVar8 + *0x13c18;\n    *(puVar17 + -0xa8c) = *0x13c18;\n    iVar12 = iVar8 + *0x13c1c;\n    *(puVar17 + -0xa80) = *0x13c1c;\n    iVar13 = loc.imp.acosNvramConfig_match(iVar14,iVar12);\n    if (iVar13 != 0) {\n        iVar13 = *0x13db0;\n        *(puVar17 + -0xa54) = iVar13;\n        uVar4 = *(iVar8 + *0x13dbc);\ncode_r0x000136b0:\n        *(puVar17 + -0x4c) = uVar4;\n        *(puVar17 + -0x4a) = uVar4 >> 0x10;\n        loc.imp.acosNvramConfig_set(iVar8 + iVar13,iVar8 + *0x13ca4);\n        goto code_r0x000136cc;\n    }\n    iVar13 = loc.imp.acosNvramConfig_match(iVar14,iVar12);\n    if ((iVar13 == 1) || (iVar13 = loc.imp.acosNvramConfig_match(iVar14,iVar8 + *(puVar17 + -0xa74)), iVar13 == 1)) {\n        *(puVar17 + -0xa54) = *0x13db0;\n        loc.imp.printf(iVar8 + *0x13db4,iVar8 + *0x13db8 + 0x14);\n        iVar13 = *(puVar17 + -0xa54);\n        uVar4 = *(iVar8 + *0x13dbc);\n        goto code_r0x000136b0;\n    }\n    *(puVar17 + -0xa54) = *0x13db0;\n    loc.imp.acosNvramConfig_get(iVar8 + *0x13db0);\n    uVar4 = loc.imp.atoi();\n    //switch table (15 cases) at 0x143a8\n    switch(uVar4) {\n    case 0:\n        iVar13 = *0x15e78;\n        break;\n    case 1:\n        iVar13 = *0x15f08;\n        goto code_r0x00015620;\n    case 2:\n        iVar13 = *0x15f14;\n        goto code_r0x00015508;\n    case 3:\n        iVar13 = *0x15ef0;\n        break;\n    case 4:\n        iVar13 = *0x15f10;\n        goto code_r0x00015620;\n    case 5:\n        iVar13 = *0x15e7c;\n        goto code_r0x00015508;\n    case 6:\n        iVar13 = *0x15f0c;\n        break;\n    case 7:\n        iVar13 = *0x15f4c;\n        goto code_r0x00015620;\n    case 8:\n        iVar13 = *0x15f4c;\n        goto code_r0x00015508;\n    case 9:\n        iVar13 = *0x15f00;\n        break;\n    case 10:\n        iVar13 = *0x15ef4;\n        goto code_r0x00015620;\n    case 0xb:\n    default:\ncode_r0x00015504:\n        iVar13 = *0x15e78;\ncode_r0x00015508:\n        uVar4 = *(iVar8 + iVar13);\n        *(puVar17 + -0x4c) = uVar4;\n        *(puVar17 + -0x4a) = uVar4 >> 0x10;\n        goto code_r0x000136cc;\n    case 0xc:\n        iVar13 = *0x15ef8;\n        break;\n    case 0xd:\n        goto code_r0x00015504;\n    case 0xe:\n        iVar13 = *0x15f04;\ncode_r0x00015620:\n        uVar4 = *(iVar8 + iVar13);\n        *(puVar17 + -0x4c) = uVar4;\n        *(puVar17 + -0x4a) = uVar4 >> 0x10;\n        goto code_r0x000136cc;\n    }\n    uVar4 = *(iVar8 + iVar13);\n    *(puVar17 + -0x4c) = uVar4;\n    *(puVar17 + -0x4a) = uVar4 >> 0x10;\ncode_r0x000136cc:\n    iVar12 = iVar8 + iVar3;\n    *(puVar17 + -0xa7c) = *0x13c20;\n    *(puVar17 + -0xa64) = *0x13c24;\n    *(puVar17 + -0xa50) = *0x13c28;\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13c20,puVar17 + -0x4c);\n    iVar14 = *0x13c2c;\n    iVar15 = *0x13c30;\n    loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa64),puVar17 + -0x4c);\n    rsym.convert_wlan_params_for_all_bssid();\n    *(puVar17 + -0xc) = 0x31;\n    *(puVar17 + -0xa68) = iVar8 + iVar14;\n    *(puVar17 + -0xa6c) = iVar8 + iVar10;\n    iVar15 = iVar8 + iVar15;\n    loc.imp.acosNvramConfig_read(iVar8 + *0x13c34,iVar11,100);\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13c38,iVar11);\n    loc.imp.acosNvramConfig_read(*(puVar17 + -0xa68),iVar11,100);\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13c3c,iVar11);\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13c40,iVar11);\n    loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa50),iVar8 + iVar9);\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13c44,iVar12);\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13c48,*(puVar17 + -0xa6c));\n    iVar13 = loc.imp.acosNvramConfig_match(iVar15,iVar8 + *(puVar17 + -0xa88));\n    if (iVar13 == 0) {\n        iVar13 = loc.imp.acosNvramConfig_match(iVar15,iVar8 + *0x13d54);\n        if (iVar13 != 0) {\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13e64,iVar12);\n            iVar13 = iVar8 + *0x13e68;\n            iVar12 = iVar8 + *0x13da4;\n            goto code_r0x000137ec;\n        }\n        iVar13 = loc.imp.acosNvramConfig_match(iVar15,iVar8 + *0x13d90);\n        if (iVar13 != 0) {\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13e64,iVar12);\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13e68,*(puVar17 + -0xa6c));\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13e6c,iVar12);\n            iVar13 = iVar8 + *0x13e70;\n            goto code_r0x000137ec;\n        }\n        iVar13 = loc.imp.acosNvramConfig_match(iVar15,iVar8 + *0x13d94);\n        if (iVar13 != 0) {\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13e64,iVar8 + *0x13d98);\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13e6c,iVar12);\n            iVar12 = *(puVar17 + -0xa6c);\n            iVar13 = iVar8 + *0x13e70;\n            goto code_r0x000137ec;\n        }\n        iVar13 = loc.imp.acosNvramConfig_match(iVar15,iVar8 + *0x15eb0);\n        if (iVar13 != 0) {\n            loc.imp.acosNvramConfig_set(iVar8 + *0x15ebc,iVar8 + *0x15eb8);\n            loc.imp.acosNvramConfig_set(iVar8 + *0x15f1c,*(puVar17 + -0xa6c));\n            loc.imp.acosNvramConfig_set(iVar8 + *0x15ec0,iVar8 + *0x15f20);\n            loc.imp.acosNvramConfig_get(*(puVar17 + -0xa68));\n            iVar13 = loc.imp.atoi();\n            iVar12 = loc.imp.acosNvramConfig_match(iVar8 + *(puVar17 + -0xa70),*(puVar17 + -0xa6c));\n            if ((iVar12 == 0) ||\n               (iVar12 = loc.imp.acosNvramConfig_match(iVar8 + *0x15ff4,*(puVar17 + -0xa6c)), iVar12 == 0)) {\n                bVar16 = iVar13 == 0x24;\n                if (!bVar16) {\n                    bVar16 = iVar13 == 0x2c;\n                }\n                if (!bVar16) {\n                    bVar16 = iVar13 == 0x34;\n                    if (!bVar16) {\n                        bVar16 = iVar13 == 0x3c;\n                    }\n                    if (!bVar16) {\n                        bVar16 = iVar13 == 100;\n                        if (!bVar16) {\n                            bVar16 = iVar13 == 0x6c;\n                        }\n                        if (!bVar16) {\n                            bVar16 = iVar13 == 0x74;\n                            if (!bVar16) {\n                                bVar16 = iVar13 == 0x7c;\n                            }\n                            if (!bVar16) {\n                                bVar16 = iVar13 == 0x84;\n                                if (!bVar16) {\n                                    bVar16 = iVar13 == 0x95;\n                                }\n                                if ((!bVar16) && (iVar13 != 0x9d)) {\n                                    loc.imp.acosNvramConfig_set(iVar8 + *0x15ec8,iVar8 + *0x15f24);\n                                    goto code_r0x00013804;\n                                }\n                            }\n                        }\n                    }\n                }\n                loc.imp.acosNvramConfig_set(iVar8 + *0x15ec8,iVar8 + *0x15f48);\n                goto code_r0x00013804;\n            }\n            goto code_r0x000137f0;\n        }\n        iVar13 = loc.imp.acosNvramConfig_match(iVar15,iVar8 + *0x15eb4);\n        if (iVar13 != 0) {\n            loc.imp.acosNvramConfig_get(*(puVar17 + -0xa68));\n            iVar13 = loc.imp.atoi();\n            loc.imp.acosNvramConfig_set(iVar8 + *0x15ebc,iVar8 + *0x15eb8);\n            loc.imp.acosNvramConfig_set(iVar8 + *0x15ec0,iVar8 + *0x15ec4);\n            iVar12 = loc.imp.acosNvramConfig_match(iVar8 + *(puVar17 + -0xa70),*(puVar17 + -0xa6c));\n            if ((iVar12 != 0) &&\n               (iVar12 = loc.imp.acosNvramConfig_match(iVar8 + *0x15ff4,*(puVar17 + -0xa6c)), iVar12 != 0))\n            goto code_r0x000137f0;\n            bVar16 = iVar13 == 0x24;\n            if (!bVar16) {\n                bVar16 = iVar13 == 0x34;\n            }\n            if (!bVar16) {\n                bVar16 = iVar13 == 100;\n                if (!bVar16) {\n                    bVar16 = iVar13 == 0x74;\n                }\n                if ((!bVar16) && (iVar13 != 0x95)) {\n                    bVar16 = iVar13 == 0x28;\n                    if (!bVar16) {\n                        bVar16 = iVar13 == 0x38;\n                    }\n                    if (!bVar16) {\n                        bVar16 = iVar13 == 0x68;\n                        if (!bVar16) {\n                            bVar16 = iVar13 == 0x78;\n                        }\n                        if ((!bVar16) && (iVar13 != 0x99)) {\n                            bVar16 = iVar13 == 0x2c;\n                            if (!bVar16) {\n                                bVar16 = iVar13 == 0x3c;\n                            }\n                            if (!bVar16) {\n                                bVar16 = iVar13 == 0x6c;\n                                if (!bVar16) {\n                                    bVar16 = iVar13 == 0x7c;\n                                }\n                                if ((!bVar16) && (iVar13 != 0x9d)) {\n                                    bVar16 = iVar13 == 0x30;\n                                    if (!bVar16) {\n                                        bVar16 = iVar13 == 0x40;\n                                    }\n                                    if (!bVar16) {\n                                        bVar16 = iVar13 == 0x70;\n                                        if (!bVar16) {\n                                            bVar16 = iVar13 == 0x80;\n                                        }\n                                        if ((!bVar16) && (iVar13 != 0xa1)) goto code_r0x00013804;\n                                    }\n                                    loc.imp.acosNvramConfig_set(iVar8 + *0x15ec8,iVar8 + *0x15ecc);\n                                    goto code_r0x00013804;\n                                }\n                            }\n                            loc.imp.acosNvramConfig_set(iVar8 + *0x15ec8,iVar8 + *0x16018);\n                            goto code_r0x00013804;\n                        }\n                    }\n                    loc.imp.acosNvramConfig_set(iVar8 + *0x15ec8,iVar8 + *0x16014);\n                    goto code_r0x00013804;\n                }\n            }\n            loc.imp.acosNvramConfig_set(iVar8 + *0x15ec8,iVar8 + *0x15ffc);\n        }\n    }\n    else {\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13e64,iVar12);\n        iVar13 = iVar8 + *0x13e68;\ncode_r0x000137ec:\n        loc.imp.acosNvramConfig_set(iVar13,iVar12);\ncode_r0x000137f0:\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13c4c,iVar8 + *0x13e98);\n    }\ncode_r0x00013804:\n    iVar5 = *0x13c54;\n    iVar13 = iVar8 + *0x13c50;\n    *(puVar17 + -0xa6c) = *0x13c50;\n    iVar12 = iVar8 + *(puVar17 + -0xa74);\n    *(puVar17 + -0xa68) = iVar13;\n    loc.imp.acosNvramConfig_set(iVar13,iVar8 + iVar3);\n    loc.imp.acosNvramConfig_set(iVar8 + iVar5,iVar12);\n    iVar15 = *0x13c5c;\n    *(puVar17 + -0xa88) = iVar8 + *0x13c58;\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13c58,iVar12);\n    iVar15 = iVar8 + iVar15;\n    iVar13 = loc.imp.acosNvramConfig_match(iVar15,iVar8 + *(puVar17 + -0xa58));\n    if (iVar13 == 0) {\n        iVar13 = loc.imp.acosNvramConfig_match(iVar15,iVar8 + *0x13dd8);\n        if (iVar13 == 0) {\n            iVar13 = loc.imp.acosNvramConfig_match(iVar15,iVar8 + *0x13e10);\n            if (iVar13 == 0) {\n                iVar13 = loc.imp.acosNvramConfig_match(iVar15,iVar8 + *0x15e8c);\n                if (iVar13 != 0) {\n                    loc.imp.acosNvramConfig_set(*(puVar17 + -0xa88),iVar8 + *0x15ee8);\n                    iVar12 = *0x15eec;\n                    iVar13 = iVar8 + *0x15e98;\n                }\n                else {\n                    iVar13 = loc.imp.acosNvramConfig_match(iVar15,iVar8 + *0x15e90);\n                    if (iVar13 == 0) {\n                        iVar13 = loc.imp.acosNvramConfig_match(iVar15,iVar8 + *0x15ea8);\n                        if (iVar13 != 0) {\n                            iVar12 = *0x15f74;\n                            iVar13 = loc.imp.acosNvramConfig_match(iVar8 + iVar12,iVar8 + *0x15f78);\n                            if (iVar13 == 0) {\n                                iVar13 = loc.imp.acosNvramConfig_match(iVar8 + iVar12,iVar8 + *0x16000);\n                                if (iVar13 == 0) {\n                                    loc.imp.acosNvramConfig_set(*(puVar17 + -0xa88),iVar8 + *0x16010);\n                                    loc.imp.acosNvramConfig_set(iVar8 + *0x15e98,iVar8 + *0x15e9c);\n                                }\n                                else {\n                                    loc.imp.acosNvramConfig_set(*(puVar17 + -0xa88),iVar8 + *0x16004);\n                                    loc.imp.acosNvramConfig_set(iVar8 + *0x15e98,iVar8 + *0x15eec);\n                                }\n                            }\n                            else {\n                                loc.imp.acosNvramConfig_set(*(puVar17 + -0xa88),iVar8 + *0x15f7c);\n                                loc.imp.acosNvramConfig_set(iVar8 + *0x15e98,iVar8 + *0x15e5c);\n                            }\n                            uVar4 = loc.imp.acosNvramConfig_get(iVar8 + *0x15f80);\n                            loc.imp.acosNvramConfig_set(iVar8 + *0x15f84,uVar4);\n                            uVar4 = loc.imp.acosNvramConfig_get(iVar8 + *0x15f88);\n                            loc.imp.acosNvramConfig_set(iVar8 + *0x15f8c,uVar4);\n                            uVar4 = loc.imp.acosNvramConfig_get(iVar8 + *0x15f90);\n                            loc.imp.acosNvramConfig_set(iVar8 + *0x15f94,uVar4);\n                            uVar4 = loc.imp.acosNvramConfig_get(iVar8 + *0x15f98);\n                            loc.imp.acosNvramConfig_set(iVar8 + *0x15f9c,uVar4);\n                        }\n                        goto code_r0x00013874;\n                    }\n                    loc.imp.acosNvramConfig_set(*(puVar17 + -0xa88),iVar8 + *0x15e94);\n                    iVar12 = *0x15e9c;\n                    iVar13 = iVar8 + *0x15e98;\n                }\n            }\n            else {\n                loc.imp.acosNvramConfig_set(*(puVar17 + -0xa88),iVar8 + *0x13ea4);\n                iVar12 = *0x13e18;\n                iVar13 = iVar8 + *0x13e14;\n            }\n            loc.imp.acosNvramConfig_set(iVar13,iVar8 + iVar12);\n            uVar4 = loc.imp.acosNvramConfig_get(iVar8 + *0x13e1c);\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13e20,uVar4);\n        }\n        else {\n            loc.imp.acosNvramConfig_set(iVar8 + iVar5,iVar8 + *0x13ddc);\n            uVar4 = loc.imp.acosNvramConfig_get(iVar8 + *0x13de0);\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13de4,uVar4);\n            uVar4 = loc.imp.acosNvramConfig_get(iVar8 + *0x13de8);\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13dec,uVar4);\n            uVar4 = loc.imp.acosNvramConfig_get(iVar8 + *0x13df0);\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13df4,uVar4);\n            uVar4 = loc.imp.acosNvramConfig_get(iVar8 + *0x13df8);\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13dfc,uVar4);\n            loc.imp.acosNvramConfig_read(iVar8 + *0x13e00,puVar17 + -0x238,3);\n            *(puVar17 + -0x238) = *(puVar17 + -0x238) + '\\x01';\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13e04,puVar17 + -0x238);\n            iVar12 = iVar8 + *0x13e08;\n            iVar13 = loc.imp.acosNvramConfig_match(iVar12,iVar8 + *0x13e0c);\n            if ((iVar13 != 0) || (iVar13 = loc.imp.acosNvramConfig_match(iVar12,iVar8 + *0x13e9c), iVar13 != 0)) {\n                loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa6c),iVar8 + iVar3);\n            }\n            else {\n                iVar13 = loc.imp.acosNvramConfig_match(iVar12,iVar8 + *0x15f6c);\n                if (iVar13 == 0) {\n                    uVar4 = loc.imp.acosNvramConfig_get(iVar12);\n                    loc.imp.printf(iVar8 + *0x15f70,uVar4);\n                }\n                else {\n                    loc.imp.acosNvramConfig_set(*(puVar17 + -0xa68),iVar8 + iVar10);\n                }\n            }\n        }\n    }\ncode_r0x00013874:\n    iVar13 = loc.imp.acosNvramConfig_match(iVar8 + *0x13c60,iVar8 + iVar10);\n    if (iVar13 == 0) {\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13d08,iVar8 + iVar3);\n        iVar12 = *(puVar17 + -0xa78);\n        *(puVar17 + -0xa88) = *0x13d0c;\n        iVar13 = loc.imp.acosNvramConfig_match(iVar8 + *0x13d0c,iVar8 + iVar12);\n        uVar6 = iVar12;\n        if (iVar13 != 0) goto code_r0x00014304;\ncode_r0x000138c0:\n        uVar6 = 0x30;\n        *(puVar17 + -0xc) = 0x30;\n        iVar13 = loc.imp.acosNvramConfig_match(iVar8 + *(puVar17 + -0xa70),iVar8 + iVar10);\n        if (iVar13 != 0) {\ncode_r0x0001433c:\n            iVar13 = loc.imp.acosNvramConfig_match(iVar8 + *0x13e28,iVar8 + iVar3);\n            if (iVar13 != 0) {\n                uVar6 = 0x30;\n            }\n            if (iVar13 != 0) {\n                *(puVar17 + -0xc) = uVar6;\n            }\n        }\n    }\n    else {\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13d08,iVar8 + iVar10);\n        iVar12 = *(puVar17 + -0xa78);\n        *(puVar17 + -0xa88) = *0x13d0c;\n        iVar13 = loc.imp.acosNvramConfig_match(iVar8 + *0x13d0c,iVar8 + iVar12);\n        uVar6 = iVar12;\n        if (iVar13 == 0) goto code_r0x000138c0;\ncode_r0x00014304:\n        iVar13 = loc.imp.acosNvramConfig_match(iVar8 + *0x13e24,iVar8 + iVar10);\n        if (iVar13 != 0) {\n            uVar6 = 0x31;\n        }\n        if (iVar13 == 0) goto code_r0x000138c0;\n        *(puVar17 + -0xc) = uVar6;\n        iVar13 = loc.imp.acosNvramConfig_match(iVar8 + *(puVar17 + -0xa70),iVar8 + iVar10);\n        if (iVar13 != 0) goto code_r0x0001433c;\n    }\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13c64,*(puVar17 + -0xa60));\n    iVar13 = loc.imp.acosNvramConfig_match(iVar8 + *0x13c68,iVar8 + *0x13c6c);\n    bVar16 = iVar13 == 0;\n    if (!bVar16) {\n        uVar6 = 0x30;\n    }\n    if (bVar16) {\n        uVar6 = 0x31;\n    }\n    if (bVar16) {\n        *(puVar17 + -0xc) = uVar6;\n    }\n    else {\n        *(puVar17 + -0xc) = uVar6;\n    }\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13c70,*(puVar17 + -0xa60));\n    loc.imp.acosNvramConfig_read(iVar8 + *0x13c74,iVar11,100);\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13c78,iVar11);\n    loc.imp.acosNvramConfig_read(iVar8 + *0x13c7c,iVar11,100);\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13c80,iVar11);\n    uVar4 = loc.imp.acosNvramConfig_get(iVar8 + *0x13c84);\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13c88,uVar4);\n    iVar11 = loc.imp.acosNvramConfig_match(iVar8 + *(puVar17 + -0xa5c),iVar8 + iVar10);\n    if (iVar11 == 0) {\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13d00,iVar8 + *0x13d04);\n    }\n    else {\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13d00,iVar8 + *0x13d3c);\n    }\n    loc.imp.acosNvramConfig_get(iVar8 + iVar14);\n    iVar11 = loc.imp.atoi();\n    if (iVar11 + -0x34 < 0x59) {\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13cfc,iVar8 + *0x13c8c);\n    }\n    else {\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13cfc,iVar8 + *0x13d04);\n    }\n    iVar13 = iVar8 + iVar10;\n    iVar11 = loc.imp.acosNvramConfig_match(iVar8 + *0x13c90,iVar13);\n    if (iVar11 != 0) {\n        iVar12 = iVar8 + *0x13c94;\n        iVar11 = loc.imp.acosNvramConfig_match(iVar12,iVar13);\n        if (iVar11 == 0) {\n            iVar11 = loc.imp.acosNvramConfig_match(iVar12,iVar8 + *0x13da4);\n            if (iVar11 == 0) {\n                iVar11 = loc.imp.acosNvramConfig_match(iVar12,iVar8 + *0x13e4c);\n                if (iVar11 != 0) {\n                    loc.imp.acosNvramConfig_set(iVar8 + *0x13e50,iVar8 + iVar9);\n                    loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa50),iVar8 + iVar9);\n                    uVar4 = loc.imp.acosNvramConfig_get(iVar8 + *0x13e54);\n                    uVar7 = loc.imp.acosNvramConfig_get(iVar8 + *0x13e58);\n                    loc.imp.sprintf(puVar17 + -0x238,iVar8 + *0x13e5c,uVar4,uVar7);\n                    loc.imp.acosNvramConfig_set(iVar8 + *0x13e60,puVar17 + -0x238);\n                }\n                goto code_r0x00013ef8;\n            }\n            iVar11 = loc.imp.acosNvramConfig_match(iVar8 + *0x13d9c,iVar13);\n            if (iVar11 == 0) {\n                iVar9 = *0x15ea0;\n                iVar11 = iVar8 + *(puVar17 + -0xa74);\n                loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa4c),iVar8 + iVar9);\n                loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa44),iVar8 + iVar9);\n                loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa48),iVar11);\n                loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa40),iVar11);\n                iVar9 = *0x15ea4;\n            }\n            else {\n                loc.imp.acosNvramConfig_set(iVar8 + *0x13e50,iVar8 + iVar9);\n                loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa50),iVar8 + iVar9);\n                iVar9 = *0x13da0;\n            }\n        }\n        else {\n            iVar11 = loc.imp.acosNvramConfig_match(iVar8 + *0x13c98,iVar13);\n            if (iVar11 == 0) {\n                iVar9 = *0x13e48;\n                iVar11 = iVar8 + *(puVar17 + -0xa74);\n                loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa4c),iVar8 + iVar9);\n                loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa44),iVar8 + iVar9);\n                loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa48),iVar11);\n                loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa40),iVar11);\n            }\n            else {\n                loc.imp.acosNvramConfig_set(iVar8 + *0x13e50,iVar8 + iVar9);\n                loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa50),iVar8 + iVar9);\n            }\n            iVar9 = *0x13c9c;\n        }\n        uVar4 = loc.imp.acosNvramConfig_get(iVar8 + iVar9);\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13e60,uVar4);\n        iVar9 = loc.imp.acosNvramConfig_match(iVar8 + *(puVar17 + -0xa8c),iVar8 + *(puVar17 + -0xa80));\n        if (iVar9 == 0) goto code_r0x00013a90;\ncode_r0x00013f14:\n        uVar4 = *(iVar8 + *0x13dbc);\n        *(puVar17 + -0x8c) = uVar4;\n        *(puVar17 + -0x8a) = uVar4 >> 0x10;\n        loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa54),iVar8 + *0x13ca4);\n        uVar4 = *(iVar8 + *0x13ca8);\n        *(puVar17 + -0x8c) = uVar4;\n        iVar9 = *0x13cac;\n        uVar6 = uVar4 >> 0x10;\n        *(puVar17 + -0x8a) = uVar6;\n        goto code_r0x00013f60;\n    }\n    iVar11 = iVar8 + *(puVar17 + -0xa74);\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13e50,iVar8 + iVar9);\n    loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa50),iVar8 + iVar9);\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13ca0,iVar11);\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13e60,iVar11);\ncode_r0x00013ef8:\n    iVar9 = loc.imp.acosNvramConfig_match(iVar8 + *(puVar17 + -0xa8c),iVar8 + *(puVar17 + -0xa80));\n    if (iVar9 != 0) goto code_r0x00013f14;\ncode_r0x00013a90:\n    loc.imp.acosNvramConfig_get(iVar8 + *(puVar17 + -0xa54));\n    iVar9 = loc.imp.atoi();\n    //switch table (15 cases) at 0x13aac\n    switch(iVar9) {\n    case 0:\n        goto code_r0x00014f58;\n    case 1:\n        uVar4 = *(iVar8 + *0x15f08);\n        *(puVar17 + -0x8c) = uVar4;\n        *(puVar17 + -0x8a) = uVar4 >> 0x10;\n        goto code_r0x00015050;\n    case 2:\n        iVar11 = *0x15f14;\n        break;\n    case 3:\n        iVar11 = *0x15ef0;\n        goto code_r0x0001534c;\n    case 4:\n        iVar11 = *0x15f10;\n        break;\n    case 5:\n        uVar4 = *(iVar8 + *0x15e7c);\n        *(puVar17 + -0x8c) = uVar4;\n        *(puVar17 + -0x8a) = uVar4 >> 0x10;\n        goto code_r0x00015050;\n    case 6:\n        iVar11 = *0x15f0c;\n        break;\n    case 7:\n        iVar11 = *0x15efc;\n        goto code_r0x0001534c;\n    case 8:\ncode_r0x00014f58:\n        iVar11 = *0x15e78;\n        break;\n    case 9:\n        iVar11 = *0x15f00;\n        goto code_r0x0001534c;\n    case 10:\n        iVar11 = *0x15ef4;\n        break;\n    case 0xb:\n        iVar11 = *0x15e78;\n        goto code_r0x0001534c;\n    case 0xc:\n        iVar11 = *0x15ef8;\n        break;\n    case 0xd:\n    default:\n        bVar16 = iVar9 == 1;\n        if (!bVar16) {\n            bVar16 = iVar9 == 5;\n        }\n        uVar4 = *(iVar8 + *0x15e78);\n        *(puVar17 + -0x8c) = uVar4;\n        *(puVar17 + -0x8a) = uVar4 >> 0x10;\n        if (bVar16) goto code_r0x00015050;\n        goto code_r0x00014f70;\n    case 0xe:\n        iVar11 = *0x15f04;\ncode_r0x0001534c:\n        uVar4 = *(iVar8 + iVar11);\n        *(puVar17 + -0x8c) = uVar4;\n        *(puVar17 + -0x8a) = uVar4 >> 0x10;\n        goto code_r0x00014f70;\n    }\n    uVar4 = *(iVar8 + iVar11);\n    *(puVar17 + -0x8c) = uVar4;\n    *(puVar17 + -0x8a) = uVar4 >> 0x10;\ncode_r0x00014f70:\n    bVar16 = iVar9 == 6;\n    if (!bVar16) {\n        bVar16 = iVar9 == 7;\n    }\n    if (bVar16) {\ncode_r0x00015050:\n        uVar4 = *(iVar8 + *0x15e7c);\n        *(puVar17 + -0x8c) = uVar4;\n        uVar6 = uVar4 >> 0x10;\n        iVar9 = *0x15e80;\n        *(puVar17 + -0x8a) = uVar6;\ncode_r0x00013f60:\n        uVar7 = *(iVar8 + iVar9);\n        *(puVar17 + -0x10a) = uVar6;\n        *(puVar17 + -0x10c) = uVar4;\n        uVar1 = uVar7;\n        *(puVar17 + -0xcc) = uVar1;\n        **(puVar17 + -0xa84) = uVar1;\n        uVar6 = uVar7 >> 0x10;\n        *(puVar17 + -0xca) = uVar6;\n        *(puVar17 + -0x1d2) = uVar6;\n    }\n    else {\n        bVar16 = iVar9 == 0xc;\n        if (!bVar16) {\n            bVar16 = iVar9 == 0x14;\n        }\n        if ((bVar16) || (iVar9 == 0x16)) goto code_r0x00015050;\n        bVar16 = iVar9 == 4;\n        if (!bVar16) {\n            bVar16 = iVar9 == 9;\n        }\n        if ((bVar16) || (iVar9 == 0xb)) {\n            uVar4 = *(iVar8 + *0x15e84);\n            *(puVar17 + -0x8c) = uVar4;\n            iVar9 = *0x15e88;\n            uVar6 = uVar4 >> 0x10;\n            *(puVar17 + -0x8a) = uVar6;\n            goto code_r0x00013f60;\n        }\n        if (iVar9 == 0xe) {\n            uVar4 = *(iVar8 + *0x15f04);\n            *(puVar17 + -0x8c) = uVar4;\n            iVar9 = *0x16008;\n            uVar6 = uVar4 >> 0x10;\n            *(puVar17 + -0x8a) = uVar6;\n            goto code_r0x00013f60;\n        }\n        if (iVar9 == 0x18) {\n            uVar4 = *(iVar8 + *0x15e84);\n            *(puVar17 + -0x8c) = uVar4;\n            *(puVar17 + -0x8a) = uVar4 >> 0x10;\n            uVar4 = *(iVar8 + *0x15e88);\n            *(puVar17 + -0xcc) = uVar4;\n            *(puVar17 + -0xca) = uVar4 >> 0x10;\n            uVar4 = *(iVar8 + *0x1600c);\n            **(puVar17 + -0xa84) = 0x31;\n            *(puVar17 + -0x10c) = uVar4;\n            *(puVar17 + -0x10a) = uVar4 >> 0x10;\n        }\n        else if (iVar9 == 3) {\n            iVar9 = *0x15e7c;\n            iVar11 = *0x15e80;\n            uVar4 = *(iVar8 + iVar9);\n            *(puVar17 + -0x8c) = uVar4;\n            *(puVar17 + -0x8a) = uVar4 >> 0x10;\n            uVar4 = *(iVar8 + iVar11);\n            *(puVar17 + -0xcc) = uVar4;\n            *(puVar17 + -0xca) = uVar4 >> 0x10;\n            loc.imp.nvram_get(iVar8 + iVar14);\n            uVar2 = loc.imp.atoi();\n            if (0x94 < uVar2) goto code_r0x00014ff8;\n            uVar4 = *(iVar8 + iVar9);\n            *(puVar17 + -0x10c) = uVar4;\n            *(puVar17 + -0x10a) = uVar4 >> 0x10;\n            uVar4 = *(iVar8 + iVar11);\n            **(puVar17 + -0xa84) = uVar4;\n            *(puVar17 + -0x1d2) = uVar4 >> 0x10;\n        }\n        else {\n            if (iVar9 == 10) {\n                iVar9 = *0x15e84;\n                iVar11 = *0x15e88;\n                uVar4 = *(iVar8 + iVar9);\n                *(puVar17 + -0x8c) = uVar4;\n                *(puVar17 + -0x8a) = uVar4 >> 0x10;\n                uVar4 = *(iVar8 + iVar11);\n                *(puVar17 + -0xcc) = uVar4;\n                *(puVar17 + -0xca) = uVar4 >> 0x10;\n                loc.imp.nvram_get(iVar8 + iVar14);\n                uVar2 = loc.imp.atoi();\n                if (0x94 < uVar2) {\n                    uVar4 = *(iVar8 + iVar9);\n                    *(puVar17 + -0x10c) = uVar4;\n                    *(puVar17 + -0x10a) = uVar4 >> 0x10;\n                    uVar4 = *(iVar8 + iVar11);\n                    **(puVar17 + -0xa84) = uVar4;\n                    *(puVar17 + -0x1d2) = uVar4 >> 0x10;\n                    goto code_r0x00013f88;\n                }\n                uVar4 = *(iVar8 + *0x15e7c);\n                *(puVar17 + -0x10c) = uVar4;\n                *(puVar17 + -0x10a) = uVar4 >> 0x10;\n                iVar9 = *0x15e80;\n            }\n            else {\n                uVar4 = *(iVar8 + *0x15e7c);\n                *(puVar17 + -0x8c) = uVar4;\n                *(puVar17 + -0x8a) = uVar4 >> 0x10;\n                uVar4 = *(iVar8 + *0x15e80);\n                *(puVar17 + -0xcc) = uVar4;\n                *(puVar17 + -0xca) = uVar4 >> 0x10;\ncode_r0x00014ff8:\n                uVar4 = *(iVar8 + *0x15e84);\n                *(puVar17 + -0x10c) = uVar4;\n                *(puVar17 + -0x10a) = uVar4 >> 0x10;\n                iVar9 = *0x15e88;\n            }\n            uVar4 = *(iVar8 + iVar9);\n            **(puVar17 + -0xa84) = uVar4;\n            *(puVar17 + -0x1d2) = uVar4 >> 0x10;\n        }\n    }\ncode_r0x00013f88:\n    iVar11 = *0x13cb0;\n    iVar9 = puVar17 + -0x8c;\n    iVar13 = *0x13cb4;\n    loc.imp.acosNvramConfig_set(iVar8 + iVar11,iVar9);\n    loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa7c),iVar9);\n    loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa64),iVar9);\n    loc.imp.acosNvramConfig_set(iVar8 + iVar11,puVar17 + -0x10c);\n    iVar9 = loc.imp.acosNvramConfig_match(iVar8 + iVar13,iVar8 + iVar10);\n    if (iVar9 != 0) {\n        iVar11 = *0x13dc8;\n        iVar9 = loc.imp.acosNvramConfig_match(iVar8 + iVar11,iVar8 + iVar10);\n        if (iVar9 != 0) {\n            loc.imp.acosNvramConfig_set(iVar8 + iVar11,iVar8 + iVar3);\n            loc.imp.system(iVar8 + *0x13dcc);\n            loc.imp.system(iVar8 + *0x13dd0);\n            loc.imp.system(iVar8 + *0x13dd4);\n        }\n    }\n    iVar11 = iVar8 + iVar10;\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13cb8,puVar17 + -0xcc);\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13cbc,puVar17 + -0xcc);\n    loc.imp.acosNvramConfig_set(iVar8 + *0x13cc0,*(puVar17 + -0xa84));\n    iVar9 = loc.imp.acosNvramConfig_match(iVar8 + *(puVar17 + -0xa70),iVar11);\n    if ((iVar9 != 0) && (iVar9 = loc.imp.acosNvramConfig_match(iVar8 + *0x13e28,iVar11), iVar9 != 0)) {\n        iVar9 = loc.imp.acosNvramConfig_match(iVar8 + iVar13,iVar11);\n        if (iVar9 == 0) {\n            loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa50),iVar8 + *0x15ee4);\n        }\n        else {\n            loc.imp.acosNvramConfig_set(iVar8 + *(puVar17 + -0xa50),iVar8 + *0x13dc4);\n        }\n    }\n    iVar11 = iVar8 + iVar10;\n    iVar9 = loc.imp.acosNvramConfig_match(iVar8 + *0x13cc4,iVar11);\n    if (((iVar9 == 0) ||\n        (iVar9 = loc.imp.acosNvramConfig_match(iVar8 + *(puVar17 + -0xa88),iVar8 + *(puVar17 + -0xa78)), iVar9 == 0))\n       || (iVar9 = loc.imp.acosNvramConfig_match(iVar8 + *0x13e24,iVar11), iVar9 == 0)) {\n        loc.imp.system(iVar8 + *0x13cc8);\n        loc.imp.system(iVar8 + *0x13ccc);\n        loc.imp.system(iVar8 + *0x13e34);\n        loc.imp.acosNvramConfig_unset(iVar8 + *0x13e3c);\n        loc.imp.acosNvramConfig_unset(iVar8 + *0x13e38);\ncode_r0x000140ac:\n        loc.imp.acosNvramConfig_unset(iVar8 + *0x13cd0);\n        loc.imp.system(iVar8 + *0x13cd4);\n    }\n    else {\n        iVar9 = loc.imp.acosNvramConfig_match(iVar8 + *(puVar17 + -0xa70),iVar11);\n        if (iVar9 == 0) {\n            loc.imp.system(iVar8 + *0x15fa0);\n            loc.imp.system(iVar8 + *0x15fa4);\n            loc.imp.system(iVar8 + *0x15fa8);\n            loc.imp.acosNvramConfig_set(iVar8 + *0x15fac,iVar11);\n            loc.imp.acosNvramConfig_set(iVar8 + *0x15fb0,iVar11);\n            loc.imp.acosNvramConfig_set(iVar8 + *0x15fb4,iVar8 + *0x15fb8);\n            loc.imp.system(iVar8 + *0x15fbc);\n        }\n        else {\n            iVar9 = loc.imp.acosNvramConfig_match(iVar8 + *0x13e28,iVar11);\n            if (iVar9 != 0) {\n                loc.imp.system(iVar8 + *0x13e2c);\n                loc.imp.system(iVar8 + *0x13e30);\n                loc.imp.system(iVar8 + *0x13e34);\n                loc.imp.acosNvramConfig_set(iVar8 + *0x13e38,iVar11);\n                loc.imp.acosNvramConfig_set(iVar8 + *0x13e3c,iVar11);\n                goto code_r0x000140ac;\n            }\n        }\n    }\n    iVar11 = *0x13cd8;\n    iVar9 = loc.imp.acosNvramConfig_match(iVar8 + iVar11,iVar8 + iVar10);\n    if (iVar9 == 0) {\n        iVar9 = loc.imp.acosNvramConfig_match(iVar8 + iVar11,iVar8 + iVar3);\n        if (iVar9 != 0) {\n            iVar9 = *0x13cf8;\n            goto code_r0x000140e4;\n        }\n    }\n    else {\n        iVar9 = *0x13ddc;\ncode_r0x000140e4:\n        iVar9 = iVar8 + iVar9;\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13cdc,iVar9);\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13ce0,iVar9);\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13ce4,iVar9);\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13ce8,iVar9);\n    }\n    iVar9 = loc.imp.acosNvramConfig_match(iVar8 + *0x13cec,iVar8 + iVar3);\n    if ((iVar9 != 0) || (iVar9 = loc.imp.acosNvramConfig_match(iVar8 + *0x13cf0,iVar8 + iVar3), iVar9 != 0)) {\n        rsym.gen_random_ssid_passphrase_for_dual_radio();\n        iVar9 = loc.imp.acosNvramConfig_match(iVar8 + *(puVar17 + -0xa70),iVar8 + iVar10);\n        if (iVar9 == 0) goto code_r0x00014178;\n    }\n    else {\n        iVar9 = loc.imp.acosNvramConfig_match(iVar8 + *(puVar17 + -0xa70),iVar8 + iVar10);\n        if (iVar9 == 0) goto code_r0x00014178;\n    }\n    iVar11 = iVar8 + iVar10;\n    iVar9 = loc.imp.acosNvramConfig_match(iVar8 + *0x13e28,iVar8 + iVar3);\n    if (iVar9 != 0) {\n        iVar9 = *0x13e4c;\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13e94,iVar11);\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13e90,iVar11);\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13d5c,iVar8 + iVar9);\n        iVar12 = *0x13d98;\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13d58,iVar8 + iVar9);\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13e7c,iVar8 + iVar12);\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13e84,iVar8 + iVar12);\n        iVar9 = loc.imp.acosNvramConfig_match(iVar8 + iVar13,iVar11);\n        if (iVar9 == 0) {\n            loc.imp.acosNvramConfig_set(iVar8 + *0x15ee0,iVar8 + *0x15ee4);\n        }\n        else {\n            loc.imp.acosNvramConfig_set(iVar8 + *0x13e40,iVar8 + *0x13dc4);\n        }\n    }\ncode_r0x00014178:\n    iVar9 = loc.imp.acosNvramConfig_match(iVar8 + *0x13cf4,iVar8 + iVar10);\n    if (iVar9 != 0) {\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13dc0,iVar8 + iVar10);\n    }\n    else {\n        loc.imp.acosNvramConfig_set(iVar8 + *0x13dc0,iVar8 + iVar3);\n    }\n    return 0;\n}", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"基于对反编译代码的分析，我验证了安全警报中描述的缓冲区溢出漏洞。证据显示在 sym.convert_wlan_params 函数中，确实存在使用 strcpy 将 NVRAM 变量值复制到栈缓冲区 without bounds checking。具体来说，在代码中，当条件满足时，会调用 acosNvramConfig_get 获取 NVRAM 值，并直接使用 strcpy 复制到 puVar17 + -0x238 指向的栈缓冲区。从栈布局来看，puVar17 + -0x238 指向 acStack_25c 缓冲区内部（偏移 0x24 处），而 acStack_25c 大小为 100 字节，因此有效空间不足 100 字节，strcpy 可能导致缓冲区溢出。攻击者可通过 web 接口或 API 控制 NVRAM 变量，触发函数执行，并利用溢出实现代码执行。漏洞真实存在，风险较高。\",\n  \"action\": \"finish\",\n  \"action_input\": {\n    \"final_response\": {\n      \"accuracy\": \"accurate\",\n      \"vulnerability\": true,\n      \"risk_level\": \"High\",\n      \"reason\": \"安全警报准确描述了缓冲区溢出漏洞。反编译代码显示在 sym.convert_wlan_params 函数中，存在条件分支（如 acosNvramConfig_match 检查后），其中调用 acosNvramConfig_get 获取 NVRAM 值，并直接使用 strcpy 复制到栈缓冲区 puVar17 + -0x238。该缓冲区对应栈变量 acStack_25c（100 字节），但 puVar17 + -0x238 指向其内部偏移 0x24 处，有效空间约 64 字节。缺乏边界检查，攻击者可通过控制 NVRAM 变量（如通过 web 配置界面）提供长于 64 字节的字符串，触发溢出覆盖相邻栈数据（如返回地址），导致代码执行。PoC 步骤：1) 攻击者通过认证访问设备 web 接口；2) 修改 WLAN 相关设置（如 SSID 或安全参数），注入恶意长字符串（超过 64 字节）；3) 触发配置保存，调用 convert_wlan_params 函数；4) strcpy 溢出缓冲区，实现任意代码执行。漏洞可利用性高，因输入可控、路径可达且影响严重。\"\n    }\n  },\n  \"status\": \"complete\"\n}"}
