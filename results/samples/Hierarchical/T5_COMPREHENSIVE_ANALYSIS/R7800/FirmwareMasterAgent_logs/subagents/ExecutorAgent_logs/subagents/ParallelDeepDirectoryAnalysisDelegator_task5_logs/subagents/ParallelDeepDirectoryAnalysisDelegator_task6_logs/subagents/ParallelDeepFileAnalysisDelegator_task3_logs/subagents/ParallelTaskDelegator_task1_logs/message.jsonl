{"role": "system", "content": "\n你是一个专门的文件分析代理。你的任务是深入分析当前指定的文件并提供详细的、有证据支持的分析结果。请专注于当前焦点文件或当前特定任务。当你认为你的分析已完成或无法进一步推进时，继续下一个任务或结束任务。\n\n**工作原则：**\n-   **基于证据**：所有分析都必须基于从工具获取的实际证据；禁止无根据的猜测。\n-   **结果验证**：批判性地评估委托子任务（例如函数分析）返回的结果，并始终验证其真实性和可靠性，以防止虚假结果污染最终结论。\n\n**工作流程：**\n1.  **理解任务**：专注于当前分析文件的特定任务，并充分参考用户的整体要求。注意，如果任务与当前分析焦点不匹配，你需要停止分析并及时向用户反馈。不要执行跨目录分析。\n2.  **执行分析**：确保你的分析有足够的深度。对于复杂任务，将其分解为多个具有明确目标和步骤的子任务，并合理地按顺序或并行调用分析助手或工具。选择最合适的工具或助手来获取证据。对于复杂的调用链，使用 `FunctionAnalysisDelegator` 并提供详细的污点信息和上下文。谨慎使用某些工具，避免结果过长导致分析失败，例如 `strings` 工具。\n3.  **完成并报告**：完成分析后，使用 `finish` 动作并严格按照以下格式提交最终报告。\n\n**最终响应要求**：\n*   回答与当前任务相关的所有问题，你的响应必须有完整的证据。不要遗漏任何有效信息。\n*   用具体证据支持所有发现，并如实报告任何证据不足或困难。\n\n每个发现必须包含以下**核心字段**：\n- **`description`**：对发现的详细描述，必须包括：\n* **完整且可验证的攻击链**：从攻击者可控源到危险汇聚点的具体污点传播路径，每一步都有证据支持。\n* **精确的触发条件**：到达易受攻击代码路径所需的确切条件。\n* **可利用性分析**：清楚说明*为什么*这是可利用的（例如，缺少清理、逻辑缺陷）。\n\n- **`link_identifiers`**：特定的 NVRAM 或 ENV 变量名、文件路径、IPC 套接字路径和自定义共享函数符号。\n- **`location`**：代码汇聚点或关键逻辑的精确位置。\n- **`code_snippet`**：返回完整的相关代码片段，展示漏洞。\n- **`risk_score`**：风险评分（0.0-10.0）。**只有具有经过验证的完整攻击链和明确安全影响的发现才能得分 >= 7.0。**\n- **`confidence`**：对发现准确性和可利用性分析的置信度（0.0-10.0）。**得分 >= 8.0 需要从源到汇聚点的完整、可验证的攻击链。**\n- **`notes`**：供人工分析师参考。包括：需要进一步验证的假设、相关文件或函数、后续分析的建议方向。\n\n#### 关键原则：\n- **可利用性是必须的**：只报告实际可利用的发现。理论上的弱点或不良实践（如使用 `strcpy`）是不够的，除非你能证明它们会导致漏洞。\n- **需要完整路径**：部分或推测性路径（\"如果...可能存在漏洞\"）是不可接受的。你必须提供完整、经过验证的链。\n- **证据优于推测**：所有声明都必须由工具的证据支持。如果缺少证据，请明确说明。不要猜测。\n\n*   在 'action' 字段中选择工具或 'finish'，并在 'action_input' 中提供参数或最终响应。\n\n\n当前可用工具：\n- Name: get_context_info\n  Description: 获取当前分析任务的上下文信息，例如正在分析的文件或目录。\n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {},\n  \"required\": []\n}\n\n- Name: execute_shell\n  Description: 在当前目录（3.4.103）中执行只读 shell 命令。\n    **警告：** 此工具严格限制在当前工作目录内。所有文件操作不得引用父目录或任何其他目录。建议使用 `file` 工具在当前目录内进行探索和识别。\n    **注意：** 所有命令都在当前目录中执行。所有路径参数应相对于当前目录。禁止包含 '/' 或 '..' 的路径。\n    支持的命令：file, find, strings, grep, head, tail, readelf, cat, sort, ls。\n    禁止输出重定向（'>'、'>>'）、命令链接和目录更改。\n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"command\": {\n      \"type\": \"string\",\n      \"description\": \"要执行的 shell 命令。命令将在 '3.4.103' 目录中执行。命令中的所有路径应相对于此目录。\"\n    }\n  },\n  \"required\": [\n    \"command\"\n  ]\n}\n\n- Name: r2\n  Description: \n    与 Radare2 交互式会话交互以分析当前二进制文件。注意，此工具会自动为当前分析焦点文件建立并维护 r2 会话。\n\n    主要功能：\n    - 发送 Radare2 命令并获取输出\n    - 会话状态在调用之间保持（对于同一文件）\n    - 支持使用 r2ghidra 插件进行反编译：\n    * 使用 `pdg` 命令反编译函数\n    * 提供类似 C 的伪代码输出\n    \n    \n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"command\": {\n      \"type\": \"string\",\n      \"description\": \"Command to interact directly with Radare2\"\n    }\n  },\n  \"required\": [\n    \"command\"\n  ]\n}\n\n- Name: FunctionDelegator\n  Description: \n    函数分析委托器 - 专门分析二进制文件中函数调用链的代理。它的职责是正向追踪函数调用之间的污点数据流。你可以将潜在的外部入口点委托给此代理进行深入追踪。\n    \n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"tasks\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"task\": {\n            \"type\": \"string\",\n            \"description\": \"为子函数创建分析任务时，你的描述必须清楚地包括以下四点：\\n1. **目标函数**：要分析的子函数的名称和地址。\\n2. **污点入口**：污点在子函数中所在的特定寄存器或栈地址（例如，'污点在第一个参数寄存器 r0 中'）。\\n3. **污点来源**：这个污点数据在父函数中是如何产生的（例如，'这个值是父函数 main 通过调用 nvram_get(\\\"lan_ipaddr\\\") 获取的'）。\\n4. **分析目标**：清楚地指出新任务应该追踪这个新的污点入口（例如，'在子函数内追踪 r0'）。\"\n          },\n          \"task_context\": {\n            \"type\": \"string\",\n            \"description\": \"（可选）提供可能影响分析的补充上下文。这些信息不是污点流本身的一部分，但可能影响子函数的执行路径。例如：\\n- '此时寄存器 r2 的值为 0x500，表示最大缓冲区长度。'\\n- '在此调用之前，全局变量 `is_admin` 被设置为 1。'\\n- '在分析期间假设文件已成功打开。'\"\n          }\n        },\n        \"required\": [\n          \"task\"\n        ]\n      },\n      \"description\": \"要执行的函数分析任务列表。\"\n    },\n    \"run_in_background\": {\n      \"type\": \"boolean\",\n      \"description\": \"是否在后台运行此任务。\",\n      \"default\": false\n    }\n  },\n  \"required\": [\n    \"tasks\"\n  ]\n}\n\n- Name: TaskDelegator\n  Description: 用于查询此固件文件系统的所有已知信息。可以查询文件的已知发现以及其他文件的已知发现。你可以优先查询文件的已知发现，然后通过结果链接到其他文件的已知发现。注意：没有发现意味着当前还没有发现。\n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"task\": {\n      \"type\": \"string\",\n      \"description\": \"要执行的子任务的详细描述。请指定分析对象。\"\n    },\n    \"run_in_background\": {\n      \"type\": \"boolean\",\n      \"description\": \"是否在后台运行此任务。\",\n      \"default\": false\n    }\n  },\n  \"required\": [\n    \"task\"\n  ]\n}\n\n**后台执行和任务调度**：\n- 在 action_input 中设置 `run_in_background: true` 可异步运行任务。\n- 后台任务完成时，结果会自动注入。\n- 当需要后台结果才能继续时，使用 'wait' 动作。\n\n调度策略（避免遗漏和重复，最大化效率）：\n1. 识别独立任务，如果不立即需要结果，在后台启动它们。\n2. 在后台任务并行运行时继续其他工作。\n3. 当依赖任务需要后台结果时使用 'wait'。\n4. 在脑海中跟踪所有启动的后台任务以避免重复。\n5. 在 'finish' 之前，确保所有后台任务都已完成并整合结果。\n\n响应格式要求：\n\n你必须以严格的 JSON 格式响应。不要在 JSON 对象之外添加任何其他文本。\n不要使用 markdown 格式（如 ```json）。直接输出单个 JSON 对象。\n\n响应必须是符合以下模式的有效 JSON 对象：\n\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"thought\": {\n      \"type\": \"string\",\n      \"description\": \"在这里逐步思考。分析当前情况、目标、可用工具和对话历史。决定是调用工具还是使用 'finish' 动作提供最终答案。\"\n    },\n    \"action\": {\n      \"type\": \"string\",\n      \"description\": \"选择下一个动作。必须是可用工具名称之一、'wait' 或 'finish'。\"\n    },\n    \"action_input\": {\n      \"oneOf\": [\n        {\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"string\"\n        }\n      ],\n      \"description\": \"工具调用的参数或最终响应。如果 action 是工具名称，提供该工具所需的参数（通常是对象）；如果是 'finish'，使用 'final_response' 作为 action_input 的键提供最终响应（通常是包含字符串的对象）。\"\n    },\n    \"status\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"continue\",\n        \"complete\"\n      ],\n      \"description\": \"必须是 'continue'（如果选择了工具）或 'complete'（如果选择了 'finish'）。\"\n    }\n  },\n  \"required\": [\n    \"thought\",\n    \"action\",\n    \"action_input\",\n    \"status\"\n  ]\n}\n\n"}
{"role": "user", "content": "用户初始请求：\n对固件进行全面的安全分析。核心目标是识别并报告从不可信输入点到危险操作的完整、可行且**实际可利用**的攻击链。分析必须关注具有明确可利用性证据的漏洞，而不是理论缺陷。\n1. **输入点识别**：识别所有潜在的不可信输入源，包括但不限于网络接口（HTTP、API、套接字）、IPC、NVRAM/环境变量等。\n2. **数据流追踪**：追踪不可信数据在系统内的传播路径，并分析是否存在缺少适当验证、过滤或边界检查的过程。\n3. **组件交互分析**：关注组件之间的交互（例如 `nvram` get/set、IPC 通信），观察外部可控数据如何在系统内流动并影响其他组件。\n4. **利用链评估**：对于发现的每个潜在攻击链，评估其触发条件、重现步骤以及成功利用的概率。**只有找到完整且可验证的链时，发现才是有效的。**\n5. **最终输出**：报告应清楚地描述攻击者最有可能成功利用的攻击路径和安全漏洞。\n\n当前具体任务：\n分析函数 'ath_iw_getparam' 的代码，寻找输入点和数据流"}
{"role": "assistant", "content": "{\n  \"thought\": \"用户要求分析函数 'ath_iw_getparam' 的代码，寻找输入点和数据流。首先，我需要获取当前分析任务的上下文信息，确认正在分析的文件。然后，使用 Radare2 工具加载和分析该函数，识别输入点（如函数参数、全局变量）和数据流路径。如果发现子函数调用，可能需要使用 FunctionDelegator 进行深入追踪。所有分析必须基于证据，避免猜测。\",\n  \"action\": \"get_context_info\",\n  \"action_input\": {},\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：get_context_info\n参数：{}\n结果：\n 当前分析焦点：\n- 文件：ath_dev.ko\n- 目录：3.4.103\n- 相对于固件根目录的目录路径：lib/modules/3.4.103", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"当前分析焦点是文件 'ath_dev.ko'，我需要分析函数 'ath_iw_getparam' 的代码以识别输入点和数据流。我将使用 Radare2 工具来定位并反编译这个函数。首先，我会搜索函数符号，然后反编译它以获取代码结构。如果找到子函数调用或复杂数据流，我可能需要使用 FunctionDelegator 进行深入追踪。所有分析必须基于从工具获取的证据。\",\n  \"action\": \"r2\",\n  \"action_input\": {\n    \"command\": \"s sym.ath_iw_getparam\"\n  },\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：r2\n参数：{\"command\": \"s sym.ath_iw_getparam\"}\n结果：\n [s sym.ath_iw_getparam 命令无输出]", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"Radare2 命令 's sym.ath_iw_getparam' 无输出，表明该符号可能不存在或名称不匹配。我需要先列出所有符号以确认函数是否存在，或使用其他方法查找。我将使用 Radare2 的 'is' 命令列出所有符号，然后搜索相关函数。如果仍然找不到，我可能需要使用 'strings' 或 'readelf' 工具探索文件。所有步骤必须基于证据。\",\n  \"action\": \"r2\",\n  \"action_input\": {\n    \"command\": \"is\"\n  },\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：r2\n参数：{\"command\": \"is\"}\n结果：\n nth paddr      vaddr      bind   type   size lib name                                       demangled\n―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\n1   0x00000034 0x08000034 LOCAL  SECT   0        .text\n2   0x0003bf58 0x0803bf58 LOCAL  SECT   0        .rodata\n3   0x0003f450 0x0803f450 LOCAL  SECT   0        .rodata.str1.4\n4   0x00045354 0x08045354 LOCAL  SECT   0        __ksymtab_strings\n5   0x00045bc8 0x08045bc8 LOCAL  SECT   0        .data\n6   0x00045d38 0x08045d38 LOCAL  SECT   0        .bss\n7   0x0003f4e0 0x0803f4e0 LOCAL  NOTYPE 0        .LC5\n8   0x000060d8 0x080060d8 LOCAL  FUNC   20       ath_reg_notify_tx_bcn\n9   0x000060ec 0x080060ec LOCAL  FUNC   20       ath_dereg_notify_tx_bcn\n10  0x00006100 0x08006100 LOCAL  FUNC   20       ath_vap_info_get\n11  0x00006114 0x08006114 LOCAL  FUNC   32       ath_reg_vap_info_notify\n12  0x00040164 0x08040164 LOCAL  NOTYPE 0        .LC1\n13  0x00006134 0x08006134 LOCAL  FUNC   20       ath_vap_info_update_notify\n14  0x00006148 0x08006148 LOCAL  FUNC   32       ath_dereg_vap_info_notify\n15  0x00006168 0x08006168 LOCAL  FUNC   88       ath_set_txpowlimit\n16  0x000061c0 0x080061c0 LOCAL  FUNC   32       ath_enable_tpc\n17  0x0000627c 0x0800627c LOCAL  FUNC   36       ath_up_beacon\n18  0x000062a0 0x080062a0 LOCAL  FUNC   40       ath_get_channel\n19  0x000062c8 0x080062c8 LOCAL  FUNC   32       ath_get_rxfilter\n20  0x000062e8 0x080062e8 LOCAL  FUNC   56       ath_monitor_filter_phyerr\n21  0x00006320 0x08006320 LOCAL  FUNC   16       ath_enter_led_scan_state\n22  0x00006330 0x08006330 LOCAL  FUNC   20       ath_led_state\n23  0x00006344 0x08006344 LOCAL  FUNC   40       ath_radio_info\n24  0x0000636c 0x0800636c LOCAL  FUNC   16       ath_leave_led_scan_state\n25  0x0000637c 0x0800637c LOCAL  FUNC   16       ath_notify_force_ppm\n26  0x0000638c 0x0800638c LOCAL  FUNC   56       ath_vap_dfs_wait\n27  0x000063c4 0x080063c4 LOCAL  FUNC   48       ath_enable_intr\n28  0x000063f4 0x080063f4 LOCAL  FUNC   40       ath_disable_intr\n29  0x0000641c 0x0800641c LOCAL  FUNC   16       ath_suspend_led_control\n30  0x0000642c 0x0800642c LOCAL  FUNC   52       ath_get_ciphers\n31  0x00006460 0x08006460 LOCAL  FUNC   32       ath_get_phy_stats\n32  0x00006480 0x08006480 LOCAL  FUNC   24       ath_get_phy_stats_allmodes\n33  0x00006498 0x08006498 LOCAL  FUNC   24       ath_get_ath_stats\n34  0x000064b0 0x080064b0 LOCAL  FUNC   24       ath_get_11n_stats\n35  0x000064c8 0x080064c8 LOCAL  FUNC   24       ath_get_dfs_stats\n36  0x000064e0 0x080064e0 LOCAL  FUNC   144      ath_update_beacon_info\n37  0x00006570 0x08006570 LOCAL  FUNC   32       ath_update_loc_ctl_reg\n38  0x00006590 0x08006590 LOCAL  FUNC   32       ath_read_loc_timer_reg\n39  0x000065b0 0x080065b0 LOCAL  FUNC   32       ath_get_eeprom_chain_mask\n40  0x000065d0 0x080065d0 LOCAL  FUNC   24       ath_set_extprotspacing\n41  0x000065e8 0x080065e8 LOCAL  FUNC   32       ath_get_extbusyper\n42  0x00006608 0x08006608 LOCAL  FUNC   52       ath_start_pktlog\n43  0x0000663c 0x0800663c LOCAL  FUNC   64       ath_read_pktlog_hdr\n44  0x0000667c 0x0800667c LOCAL  FUNC   64       ath_read_pktlog_buf\n45  0x000066bc 0x080066bc LOCAL  FUNC   52       ath_setacparams\n46  0x000066f0 0x080066f0 LOCAL  FUNC   40       ath_setrtparams\n47  0x00006718 0x08006718 LOCAL  FUNC   76       ath_sethbrparams\n48  0x00006764 0x08006764 LOCAL  FUNC   32       ath_setrxtimeout\n49  0x00006784 0x08006784 LOCAL  FUNC   68       ath_dev_get_chan_stats\n50  0x000067c8 0x080067c8 LOCAL  FUNC   40       ath_get_goodput\n51  0x000067f0 0x080067f0 LOCAL  FUNC   56       ath_get_tid_seqno\n52  0x00006828 0x08006828 LOCAL  FUNC   24       ath_keycache_size\n53  0x00006860 0x08006860 LOCAL  FUNC   24       ath_get_current_tx_antenna\n54  0x00006878 0x08006878 LOCAL  FUNC   24       ath_get_default_antenna\n55  0x00006890 0x08006890 LOCAL  FUNC   112      ath_get_noisefloor\n56  0x00006900 0x08006900 LOCAL  FUNC   80       ath_get_chainnoisefloor\n57  0x00006950 0x08006950 LOCAL  FUNC   72       ath_get_rx_nf_offset\n58  0x00006998 0x08006998 LOCAL  FUNC   396      ath_get_rx_signal_dbm\n59  0x00006b24 0x08006b24 LOCAL  FUNC   32       ath_disable_dcsim\n60  0x00006b44 0x08006b44 LOCAL  FUNC   80       ath_ibss_beacon_update_start\n61  0x00006f68 0x08006f68 LOCAL  FUNC   80       ath_getmfpsupport\n62  0x00006fb8 0x08006fb8 LOCAL  FUNC   28       ath_get_tx_hw_retries\n63  0x00006fd4 0x08006fd4 LOCAL  FUNC   28       ath_get_tx_hw_success\n64  0x00006ff0 0x08006ff0 LOCAL  FUNC   36       ath_spectral_get_tsf64\n65  0x00007014 0x08007014 LOCAL  FUNC   60       ath_spectral_get_capability\n66  0x00007050 0x08007050 LOCAL  FUNC   44       ath_spectral_set_rxfilter\n67  0x0000707c 0x0800707c LOCAL  FUNC   36       ath_spectral_get_rxfilter\n68  0x000070a0 0x080070a0 LOCAL  FUNC   36       ath_spectral_is_spectral_active\n69  0x000070c4 0x080070c4 LOCAL  FUNC   36       ath_spectral_is_spectral_enabled\n70  0x000070e8 0x080070e8 LOCAL  FUNC   44       ath_spectral_start_spectral_scan\n71  0x00007114 0x08007114 LOCAL  FUNC   44       ath_spectral_stop_spectral_scan\n72  0x00007140 0x08007140 LOCAL  FUNC   44       ath_spectral_get_extension_channel\n73  0x0000716c 0x0800716c LOCAL  FUNC   92       ath_spectral_reset_hw\n74  0x000071c8 0x080071c8 LOCAL  FUNC   60       ath_spectral_get_chain_noise_floor\n75  0x00007204 0x08007204 LOCAL  FUNC   28       ath_spectral_get_current_channel\n76  0x00007220 0x08007220 LOCAL  FUNC   40       ath_spectral_get_ctl_noisefloor\n77  0x00007248 0x08007248 LOCAL  FUNC   40       ath_spectral_get_ext_noisefloor\n78  0x00007270 0x08007270 LOCAL  FUNC   36       ath_spectral_get_nominal_noisefloor\n79  0x00007294 0x08007294 LOCAL  FUNC   44       ath_spectral_configure_params\n80  0x000072c0 0x080072c0 LOCAL  FUNC   32       ath_spectral_get_ent_mask\n81  0x000072e0 0x080072e0 LOCAL  FUNC   32       ath_spectral_set_icm_active\n82  0x000073a4 0x080073a4 LOCAL  FUNC   32       ath_cdd_control\n83  0x000073c4 0x080073c4 LOCAL  FUNC   32       ath_set_rifs\n84  0x000073e4 0x080073e4 LOCAL  FUNC   24       ath_get_txbuf_free\n85  0x00007424 0x08007424 LOCAL  FUNC   48       ath_get_tpc_tables\n86  0x00007454 0x08007454 LOCAL  FUNC   60       ath_set_node_tx_chainmask\n87  0x00007490 0x08007490 LOCAL  FUNC   20       ath_detach_dfs\n88  0x000074a4 0x080074a4 LOCAL  FUNC   36       ath_get_mib_cycle_counts_pct\n89  0x000074c8 0x080074c8 LOCAL  FUNC   40       ath_get_radar_thresholds\n90  0x000074f0 0x080074f0 LOCAL  FUNC   72       ath_smart_ant_set_tx_antenna\n91  0x00007538 0x08007538 LOCAL  FUNC   24       ath_smart_ant_set_tx_defaultantenna\n92  0x00007550 0x08007550 LOCAL  FUNC   24       ath_set_beacon_interval\n93  0x00007568 0x08007568 LOCAL  FUNC   56       ath_txbf_loforceon_update\n94  0x000075a0 0x080075a0 LOCAL  FUNC   24       ath_node_pspoll\n95  0x000075b8 0x080075b8 LOCAL  FUNC   92       ath_traffic_fast_recover\n96  0x00007640 0x08007640 LOCAL  FUNC   220      ath_spectral_get_params\n97  0x000079a8 0x080079a8 LOCAL  FUNC   212      ath_dev_noisefloor\n98  0x00007a7c 0x08007a7c LOCAL  FUNC   244      ath_printreg\n99  0x00007b70 0x08007b70 LOCAL  FUNC   228      ath_disable_dfs\n100 0x00007c54 0x08007c54 LOCAL  FUNC   252      ath_set_quiet\n101 0x00007d50 0x08007d50 LOCAL  FUNC   72       ath_set_ps_state\n102 0x00007d98 0x08007d98 LOCAL  FUNC   264      ath_key_reset\n103 0x00007ea0 0x08007ea0 LOCAL  FUNC   316      ath_set_mcastlist\n104 0x000082cc 0x080082cc LOCAL  FUNC   36       ath_get_mac_address\n105 0x000082f0 0x080082f0 LOCAL  FUNC   36       ath_get_hw_mac_address\n106 0x00008314 0x08008314 LOCAL  FUNC   64       ath_set_mac_address\n107 0x00008354 0x08008354 LOCAL  FUNC   64       ath_set_bssid_mask\n108 0x00008394 0x08008394 LOCAL  FUNC   108      ath_key_save_halkey\n109 0x00008400 0x08008400 LOCAL  FUNC   44       ath_spectral_get_mac_address\n110 0x0000842c 0x0800842c LOCAL  FUNC   120      ath_smart_ant_set_training_info\n111 0x00040190 0x08040190 LOCAL  NOTYPE 0        .LC2\n112 0x000401c0 0x080401c0 LOCAL  NOTYPE 0        .LC3\n113 0x00008608 0x08008608 LOCAL  FUNC   140      ath_set_noise_detection_param\n114 0x00008694 0x08008694 LOCAL  FUNC   228      ath_smart_ant_enable\n115 0x00008778 0x08008778 LOCAL  FUNC   512      ath_getiqueconfig\n116 0x00040278 0x08040278 LOCAL  NOTYPE 0        .LC8\n117 0x00040274 0x08040274 LOCAL  NOTYPE 0        .LC7\n118 0x00008df8 0x08008df8 LOCAL  FUNC   20       ath_get_ps_state\n119 0x0000930c 0x0800930c LOCAL  FUNC   36       athop_rate_newstate\n120 0x000094f8 0x080094f8 LOCAL  FUNC   20       ath_set_ps_awake\n121 0x0000950c 0x0800950c LOCAL  FUNC   216      ath_set_rxfilter\n122 0x000096a4 0x080096a4 LOCAL  FUNC   64       ath_detach_spectral\n123 0x000096e4 0x080096e4 LOCAL  FUNC   24       ath_find_countrycode\n124 0x000096fc 0x080096fc LOCAL  FUNC   64       ath_sc_reset_lowest_txrate\n125 0x0000973c 0x0800973c LOCAL  FUNC   20       ath_set_ps_fullsleep\n126 0x00009750 0x08009750 LOCAL  FUNC   116      ath_read_pci_config_space\n127 0x000097c4 0x080097c4 LOCAL  FUNC   20       ath_smart_ant_prepare_rateset\n128 0x000097d8 0x080097d8 LOCAL  FUNC   48       ath_conf_rx_intr_mit\n129 0x00009808 0x08009808 LOCAL  FUNC   28       ath_setmfpQos\n130 0x00009824 0x08009824 LOCAL  FUNC   36       ath_node_pause_control\n131 0x00009848 0x08009848 LOCAL  FUNC   760      ath_node_update_pwrsave\n132 0x00009b40 0x08009b40 LOCAL  FUNC   24       ath_green_ap_dev_get_enable_print\n133 0x00009b58 0x08009b58 LOCAL  FUNC   24       ath_green_ap_dev_set_enable_print\n134 0x00009b70 0x08009b70 LOCAL  FUNC   24       ath_green_ap_dev_get_on_time\n135 0x00009b88 0x08009b88 LOCAL  FUNC   24       ath_green_ap_dev_set_on_time\n136 0x00009ba0 0x08009ba0 LOCAL  FUNC   24       ath_green_ap_dev_get_transition_time\n137 0x00009bb8 0x08009bb8 LOCAL  FUNC   24       ath_green_ap_dev_set_transition_time\n138 0x00009bd0 0x08009bd0 LOCAL  FUNC   24       ath_green_ap_dev_get_enable\n139 0x00009be8 0x08009be8 LOCAL  FUNC   20       ath_atf_get_unused_txtoken\n140 0x00009bfc 0x08009bfc LOCAL  FUNC   20       ath_atf_clear\n141 0x00009c10 0x08009c10 LOCAL  FUNC   20       ath_atf_set\n142 0x00009c24 0x08009c24 LOCAL  FUNC   20       ath_atf_update_node_txtoken\n143 0x00009c38 0x08009c38 LOCAL  FUNC   44       athop_rate_newassoc\n144 0x00009c64 0x08009c64 LOCAL  FUNC   20       ath_node_getmaxphyrate\n145 0x00009c78 0x08009c78 LOCAL  FUNC   20       ath_node_gettxrate\n146 0x00009c8c 0x08009c8c LOCAL  FUNC   28       ath_mhz2ieee\n147 0x00009ca8 0x08009ca8 LOCAL  FUNC   36       ath_get_ctl_by_country\n148 0x00009ccc 0x08009ccc LOCAL  FUNC   20       ath_set_ps_netsleep\n149 0x00009ce0 0x08009ce0 LOCAL  FUNC   232      ath_newassoc\n150 0x00009dc8 0x08009dc8 LOCAL  FUNC   440      ath_node_detach\n151 0x00009f80 0x08009f80 LOCAL  FUNC   1700     ath_get_caps\n152 0x0000a624 0x0800a624 LOCAL  FUNC   32       ath_clear_stats\n153 0x0000a644 0x0800a644 LOCAL  FUNC   180      ath_radar_get_info\n154 0x0000a6f8 0x0800a6f8 LOCAL  FUNC   768      ath_set_country\n155 0x0000ac24 0x0800ac24 LOCAL  FUNC   116      ath_print\n156 0x0000adf0 0x0800adf0 LOCAL  FUNC   280      ath_keyset\n157 0x0000af08 0x0800af08 LOCAL  FUNC   276      ath_set_sel_evm\n158 0x0000b01c 0x0800b01c LOCAL  FUNC   232      ath_set_macmode\n159 0x0000b104 0x0800b104 LOCAL  FUNC   76       ath_ibss_beacon_update_stop\n160 0x0000b150 0x0800b150 LOCAL  FUNC   148      ath_get_noise_detection_param\n161 0x0000b1e4 0x0800b1e4 LOCAL  FUNC   116      ath_vap_config\n162 0x0000b518 0x0800b518 LOCAL  FUNC   104      ath_green_ap_dev_set_enable\n163 0x0000b580 0x0800b580 LOCAL  FUNC   80       ath_get_dfsdomain\n164 0x0000b5d0 0x0800b5d0 LOCAL  FUNC   80       ath_get_regdomain\n165 0x0000b620 0x0800b620 LOCAL  FUNC   80       ath_get_currentCountry\n166 0x0000b670 0x0800b670 LOCAL  FUNC   424      ath_attach_spectral\n167 0x0000b9a0 0x0800b9a0 LOCAL  FUNC   196      ath_set_regdomain\n168 0x0000bc98 0x0800bc98 LOCAL  FUNC   108      ath_vap_pause_control\n169 0x0000bd04 0x0800bd04 LOCAL  FUNC   260      ath_update_sm_pwrsave\n170 0x0000be08 0x0800be08 LOCAL  FUNC   680      ath_enable_dfs\n171 0x0000c0b0 0x0800c0b0 LOCAL  FUNC   460      ath_attach_dfs\n172 0x0000c27c 0x0800c27c LOCAL  FUNC   316      ath_set_tx_antenna_select\n173 0x0000c3b8 0x0800c3b8 LOCAL  FUNC   172      ath_key_alloc_single\n174 0x0000c464 0x0800c464 LOCAL  FUNC   248      ath_key_alloc_pair\n175 0x0000c55c 0x0800c55c LOCAL  FUNC   360      ath_key_alloc_2pair\n176 0x0000c6c4 0x0800c6c4 LOCAL  FUNC   384      ath_scan_end\n177 0x0000c844 0x0800c844 LOCAL  FUNC   356      ath_scan_start\n178 0x0000c9a8 0x0800c9a8 LOCAL  FUNC   112      ath_switch_opmode\n179 0x0000ca18 0x0800ca18 LOCAL  FUNC   1948     ath_handle_intr\n180 0x0000d1b4 0x0800d1b4 LOCAL  FUNC   1364     ath_mesg_intr\n181 0x0000d708 0x0800d708 LOCAL  FUNC   1436     ath_intr\n182 0x0000dca4 0x0800dca4 LOCAL  FUNC   1012     ath_node_attach\n183 0x0000e098 0x0800e098 LOCAL  FUNC   636      ath_vap_stopping\n184 0x0000e314 0x0800e314 LOCAL  FUNC   1644     ath_vap_up\n185 0x0000e980 0x0800e980 LOCAL  FUNC   968      ath_vap_join\n186 0x0000ed48 0x0800ed48 LOCAL  FUNC   692      ath_vap_listen\n187 0x0000effc 0x0800effc LOCAL  FUNC   752      ath_vap_down\n188 0x0000f2ec 0x0800f2ec LOCAL  FUNC   632      ath_vap_detach\n189 0x0000f564 0x0800f564 LOCAL  FUNC   768      ath_vap_attach\n190 0x0000f864 0x0800f864 LOCAL  FUNC   200      ath_get_device_info\n191 0x0000fb00 0x0800fb00 LOCAL  FUNC   476      ath_txq_stuck_checker\n192 0x0000fcdc 0x0800fcdc LOCAL  FUNC   332      ath_rx_hwreg_checker\n193 0x0000fe28 0x0800fe28 LOCAL  FUNC   480      ath_rx_stuck_checker\n194 0x00010008 0x08010008 LOCAL  FUNC   4512     ath_calibrate\n195 0x00011afc 0x08011afc LOCAL  FUNC   260      ath_updateslot\n196 0x00011fd0 0x08011fd0 LOCAL  FUNC   508      ath_vap_reap_txqs\n197 0x000121cc 0x080121cc LOCAL  FUNC   192      ath_set_proxysta\n198 0x000131b8 0x080131b8 LOCAL  FUNC   256      ath_suspend\n199 0x000132b8 0x080132b8 LOCAL  FUNC   1140     ath_open\n200 0x00045d38 0x08045d38 LOCAL  NOTYPE 0        .LANCHOR0\n201 0x00015500 0x08015500 LOCAL  FUNC   800      ath_node_cleanup\n202 0x0001920c 0x0801920c LOCAL  FUNC   968      ath_rx_timer\n203 0x0001ad90 0x0801ad90 LOCAL  FUNC   116      _ath_internal_timer_handler\n204 0x00042308 0x08042308 LOCAL  NOTYPE 0        .LC1\n205 0x0003d014 0x0803d014 LOCAL  NOTYPE 0        .LANCHOR0\n206 0x00045d74 0x08045d74 LOCAL  NOTYPE 0        .LANCHOR1\n207 0x000425cc 0x080425cc LOCAL  NOTYPE 0        .LC23\n208 0x000425d4 0x080425d4 LOCAL  NOTYPE 0        .LC24\n209 0x000429bc 0x080429bc LOCAL  NOTYPE 0        .LC45\n210 0x00042ae0 0x08042ae0 LOCAL  NOTYPE 0        .LC54\n211 0x00042c1c 0x08042c1c LOCAL  NOTYPE 0        .LC0\n212 0x00026c50 0x08026c50 LOCAL  FUNC   588      ath_addba_timer\n213 0x00045d94 0x08045d94 LOCAL  NOTYPE 0        .LANCHOR1\n214 0x00045db4 0x08045db4 LOCAL  NOTYPE 0        .LANCHOR1\n215 0x00045db8 0x08045db8 LOCAL  NOTYPE 0        .LANCHOR1\n216 0x0003d6a0 0x0803d6a0 LOCAL  NOTYPE 0        .LANCHOR0\n217 0x00044a40 0x08044a40 LOCAL  NOTYPE 0        .LC0\n218 0x00044a64 0x08044a64 LOCAL  NOTYPE 0        .LC1\n219 0x00038ff8 0x08038ff8 LOCAL  FUNC   40       null_get_current_channel_flags\n220 0x00044a70 0x08044a70 LOCAL  NOTYPE 0        .LC2\n221 0x00039020 0x08039020 LOCAL  FUNC   40       null_get_current_channel\n222 0x00044a8c 0x08044a8c LOCAL  NOTYPE 0        .LC3\n223 0x00039048 0x08039048 LOCAL  FUNC   40       null_is_vap_active\n224 0x00044aa0 0x08044aa0 LOCAL  NOTYPE 0        .LC4\n225 0x00039070 0x08039070 LOCAL  FUNC   40       null_ap_ps_on_off\n226 0x00044ab0 0x08044ab0 LOCAL  NOTYPE 0        .LC5\n227 0x00039808 0x08039808 LOCAL  FUNC   36       ath_green_ap_ant_ps_mode_on_tmr_fun\n228 0x00044e44 0x08044e44 LOCAL  NOTYPE 0        .LC6\n229 0x00044e4c 0x08044e4c LOCAL  NOTYPE 0        .LC7\n230 0x00044e50 0x08044e50 LOCAL  NOTYPE 0        .LC8\n231 0x00044e6c 0x08044e6c LOCAL  NOTYPE 0        .LC9\n232 0x0003a698 0x0803a698 LOCAL  FUNC   68       ath_iw_setcountry\n233 0x0003a6dc 0x0803a6dc LOCAL  FUNC   104      ath_iw_getcountry\n234 0x0003a744 0x0803a744 LOCAL  FUNC   52       ath_iw_set_dscp_tid_map\n235 0x0003a778 0x0803a778 LOCAL  FUNC   56       ath_iw_get_dscp_tid_map\n236 0x0003a7b0 0x0803a7b0 LOCAL  FUNC   140      ath_iw_gethwaddr\n237 0x0003a83c 0x0803a83c LOCAL  FUNC   44       ath_iw_set_saparam\n238 0x0003a868 0x0803a868 LOCAL  FUNC   44       ath_iw_get_saparam\n239 0x00045be4 0x08045be4 LOCAL  NOTYPE 0        .LANCHOR0\n240 0x0003bb8c 0x0803bb8c LOCAL  FUNC   140      find_ath_ioctl_name\n241 0x0003a8b0 0x0803a8b0 LOCAL  FUNC   348      ath_iw_getparam\n242 0x0003aa0c 0x0803aa0c LOCAL  FUNC   436      ath_iw_setparam\n243 0x0003ac00 0x0803ac00 LOCAL  FUNC   188      ath_iw_sethwaddr\n244 0x0003acbc 0x0803acbc LOCAL  FUNC   48       __wbuf_map_single\n245 0x0003acec 0x0803acec LOCAL  FUNC   40       __wbuf_unmap_single\n246 0x0003b0b0 0x0803b0b0 LOCAL  FUNC   100      ath_adhoc_netlink_receive\n247 0x00033004 0x08033004 LOCAL  FUNC   1484     ath_node_pwrsaveq_send\n248 0x00039bac 0x08039bac LOCAL  FUNC   628      ath_ald_collect_ni_data\n249 0x0002d658 0x0802d658 LOCAL  FUNC   156      ath_rx_process_uapsd\n250 0x0001f464 0x0801f464 LOCAL  FUNC   408      ath_tx_flush\n251 0x00022f5c 0x08022f5c LOCAL  FUNC   84       ath_tx_pause_tid_nolock\n252 0x0001b020 0x0801b020 LOCAL  FUNC   344      ath_tx_cleanup\n253 0x0001ae88 0x0801ae88 LOCAL  FUNC   20       ath_set_timer_period\n254 0x00008bac 0x08008bac LOCAL  FUNC   588      ath_reset\n255 0x0001af88 0x0801af88 LOCAL  FUNC   36       ath_ratecode_to_ratekbps\n256 0x0000623c 0x0800623c LOCAL  FUNC   32       ath_get_channel_busy_info\n257 0x00038f98 0x08038f98 LOCAL  FUNC   56       green_ap_register_funcs\n258 0x0001bd1c 0x0801bd1c LOCAL  FUNC   172      ath_cabq_update\n259 0x0002fb34 0x0802fb34 LOCAL  FUNC   128      ath_tx_edma_init\n260 0x000361c0 0x080361c0 LOCAL  FUNC   88       ath_check_swretry_req\n261 0x00045e20 0x08045e20 LOCAL  OBJ    4        num_global_scn\n262 0x0001bde0 0x0801bde0 LOCAL  FUNC   228      ath_tx_mcast_draintxq\n263 0x00007fdc 0x08007fdc LOCAL  FUNC   212      ath_wnm_beacon_config\n264 0x0001ee90 0x0801ee90 LOCAL  FUNC   64       ath_tx_abortalldma\n265 0x000084a4 0x080084a4 LOCAL  FUNC   96       ath_set_tx_chainmask\n266 0x00015f30 0x08015f30 LOCAL  FUNC   100      ath_pwrsave_awake\n267 0x0003b114 0x0803b114 LOCAL  FUNC   220      ath_adhoc_netlink_send\n268 0x0000771c 0x0800771c LOCAL  FUNC   212      ath_update_mib_macstats\n269 0x0003a364 0x0803a364 LOCAL  FUNC   40       ath_proc_read_rtscts\n270 0x0002aa48 0x0802aa48 LOCAL  FUNC   584      ath_tx_node_cleanup\n271 0x000091bc 0x080091bc LOCAL  FUNC   296      ath_spectral_control\n272 0x00009330 0x08009330 LOCAL  FUNC   104      ath_pkt_log_text\n273 0x00031ce0 0x08031ce0 LOCAL  FUNC   232      ath_node_leftovercleanup\n274 0x0002fc40 0x0802fc40 LOCAL  FUNC   320      ath_txbf_alloc_key\n275 0x0001164c 0x0801164c LOCAL  FUNC   660      ath_update_txpow\n276 0x0003b898 0x0803b898 LOCAL  FUNC   148      bus_free_consistent\n277 0x0002fe34 0x0802fe34 LOCAL  FUNC   72       ath_txbf_chk_rpt_frm\n278 0x00001c08 0x08001c08 LOCAL  FUNC   164      ath_beacon_return\n279 0x00021718 0x08021718 LOCAL  FUNC   40       ath_txto_tasklet\n280 0x000137b0 0x080137b0 LOCAL  FUNC   148      ath_gpio_register_callback\n281 0x0001aa50 0x0801aa50 LOCAL  FUNC   52       ath_delba_process\n282 0x00015224 0x08015224 LOCAL  FUNC   584      ath_dev_free\n283 0x00016eec 0x08016eec LOCAL  FUNC   160      ath_rx_requeue\n284 0x000078d0 0x080078d0 LOCAL  FUNC   216      ath_gettsf32\n285 0x0003b068 0x0803b068 LOCAL  FUNC   16       __wbuf_uapsd_update\n286 0x0001f5fc 0x0801f5fc LOCAL  FUNC   32       ath_txq_depth\n287 0x00019988 0x08019988 LOCAL  FUNC   1164     ath_bar_rx\n288 0x00018d14 0x08018d14 LOCAL  FUNC   104      ath_rx_node_free\n289 0x00039b3c 0x08039b3c LOCAL  FUNC   32       ath_green_ap_suspend\n290 0x000195d4 0x080195d4 LOCAL  FUNC   32       ath_set_addbaresponse\n291 0x0003a124 0x0803a124 LOCAL  FUNC   48       ath_proc_write\n292 0x00003b08 0x08003b08 LOCAL  FUNC   32       ath_hw_beacon_rssi_reset\n293 0x00033e6c 0x08033e6c LOCAL  FUNC   1324     ath_node_pwrsaveq_age\n294 0x000115a8 0x080115a8 LOCAL  FUNC   164      ath_update_tpscale\n295 0x0001aa84 0x0801aa84 LOCAL  FUNC   292      ath_rx_node_init\n296 0x00045e40 0x08045e40 LOCAL  OBJ    4        ath_ignoredfs_enable\n297 0x0002cea0 0x0802cea0 LOCAL  FUNC   560      ath_rx_edma_init\n298 0x0003a4f8 0x0803a4f8 LOCAL  FUNC   36       ath_handle_tx_intr\n299 0x00025864 0x08025864 LOCAL  FUNC   2476     ath_tx_send_ampdu\n300 0x000114a0 0x080114a0 LOCAL  FUNC   264      ath_extend_tsf\n301 0x000170bc 0x080170bc LOCAL  FUNC   588      ath_startrecv\n302 0x0002fbf8 0x0802fbf8 LOCAL  FUNC   72       ath_get_txbfcaps\n303 0x00029468 0x08029468 LOCAL  FUNC   560      ath_addba_responseprocess\n304 0x00003ed4 0x08003ed4 LOCAL  FUNC   296      ath_timbcast_return\n305 0x00045e44 0x08045e44 LOCAL  OBJ    4        UAPSDMinfree\n306 0x00005df8 0x08005df8 LOCAL  FUNC   152      ath_tx_uapsd_node_stageq_cleanup\n307 0x00006018 0x08006018 LOCAL  FUNC   124      ath_tx_uapsd_pause_begin\n308 0x00027130 0x08027130 LOCAL  FUNC   136      ath_bar_tx\n309 0x0003afa8 0x0803afa8 LOCAL  FUNC   152      __wbuf_map_sg\n310 0x0003addc 0x0803addc LOCAL  FUNC   416      ath_rxbuf_alloc\n311 0x00031dc8 0x08031dc8 LOCAL  FUNC   84       _modify_sw_retry_limit\n312 0x0002ad40 0x0802ad40 LOCAL  FUNC   256      ath_tx_node_resume\n313 0x0003bb0c 0x0803bb0c LOCAL  FUNC   128      cleanup_module\n314 0x00016584 0x08016584 LOCAL  FUNC   108      ath_pwrsave_proc_intdone\n315 0x00015f94 0x08015f94 LOCAL  FUNC   656      ath_radio_enable\n316 0x00030034 0x08030034 LOCAL  FUNC   920      ath_tx_paprd_init\n317 0x0002aee8 0x0802aee8 LOCAL  FUNC   3808     ath_set_config\n318 0x00035aac 0x08035aac LOCAL  FUNC   156      ath_set_swretrystate\n319 0x0002037c 0x0802037c LOCAL  FUNC   5020     ath_tx_start_dma\n320 0x0001af18 0x0801af18 LOCAL  FUNC   40       ath_timer_is_initialized\n321 0x0003c540 0x0803c540 LOCAL  OBJ    6        ath_bcast_mac\n322 0x00038f38 0x08038f38 LOCAL  FUNC   32       ath_green_ap_sc_get_transition_time\n323 0x0001aedc 0x0801aedc LOCAL  FUNC   40       ath_cancel_timer\n324 0x00039458 0x08039458 LOCAL  FUNC   944      ath_green_ap_state_mc\n325 0x00022b0c 0x08022b0c LOCAL  FUNC   104      ath_addba_cancel_timers\n326 0x0002cc80 0x0802cc80 LOCAL  FUNC   380      ath_rx_edma_cleanup\n327 0x0001eed0 0x0801eed0 LOCAL  FUNC   1024     ath_reset_draintxq\n328 0x0001594c 0x0801594c LOCAL  FUNC   80       ath_init_green_ap_ops\n329 0x000360f4 0x080360f4 LOCAL  FUNC   108      ath_exist_pendingfrm_tidq\n330 0x00013948 0x08013948 LOCAL  FUNC   6364     ath_dev_attach\n331 0x0001b2e8 0x0801b2e8 LOCAL  FUNC   572      ath_txq_setup\n332 0x0002d29c 0x0802d29c LOCAL  FUNC   320      ath_edmaAllocRxbufsForFreeList\n333 0x00023fe0 0x08023fe0 LOCAL  FUNC   6276     ath_txq_schedule\n334 0x0003af7c 0x0803af7c LOCAL  FUNC   24       wbuf_release\n335 0x0002297c 0x0802297c LOCAL  FUNC   200      ath_aggr_check\n336 0x00015b4c 0x08015b4c LOCAL  FUNC   28       ath_get_sw_phystate\n337 0x0003a38c 0x0803a38c LOCAL  FUNC   40       ath_proc_read_version\n338 0x0002bdc8 0x0802bdc8 LOCAL  FUNC   3136     ath_get_config\n339 0x0000b494 0x0800b494 LOCAL  FUNC   132      ath_scan_enable_txq\n340 0x0000736c 0x0800736c LOCAL  FUNC   28       ath_green_ap_get_current_channel\n341 0x000080b0 0x080080b0 LOCAL  FUNC   540      ath_get_noderssi\n342 0x00022fe8 0x08022fe8 LOCAL  FUNC   3088     ath_tx_sched_normal\n343 0x0000ad44 0x0800ad44 LOCAL  FUNC   52       ath_ant_swcom_sel\n344 0x00017ad4 0x08017ad4 LOCAL  FUNC   2100     ath_rx_process\n345 0x00032258 0x08032258 LOCAL  FUNC   192      _pktlog_update_txcomp\n346 0x00045bd0 0x08045bd0 LOCAL  OBJ    4        min_buf_resv\n347 0x00015820 0x08015820 LOCAL  FUNC   40       ath_spectral_indicate\n348 0x000111a8 0x080111a8 LOCAL  FUNC   640      ath_reset_start\n349 0x00045bd8 0x08045bd8 LOCAL  OBJ    4        ACVIMinfree\n350 0x0001f63c 0x0801f63c LOCAL  FUNC   32       ath_txq_aggr_depth\n351 0x00033a1c 0x08033a1c LOCAL  FUNC   1104     ath_node_pwrsaveq_drain\n352 0x0000452c 0x0800452c LOCAL  FUNC   16       ath_desc_swap\n353 0x0003a4d0 0x0803a4d0 LOCAL  FUNC   40       ath_hw_phystate_change\n354 0x0001ae18 0x0801ae18 LOCAL  FUNC   112      ath_initialize_timer_int\n355 0x000095e4 0x080095e4 LOCAL  FUNC   20       ath_get_common_power\n356 0x00015b84 0x08015b84 LOCAL  FUNC   32       ath_set_sw_phystate\n357 0x0003b964 0x0803b964 LOCAL  FUNC   424      init_module\n358 0x0002d0d0 0x0802d0d0 LOCAL  FUNC   244      ath_rx_edma_requeue\n359 0x00012850 0x08012850 LOCAL  FUNC   1432     ath_lean_chan_set\n360 0x0002d1c4 0x0802d1c4 LOCAL  FUNC   216      ath_edma_attach\n361 0x00005e90 0x08005e90 LOCAL  FUNC   392      ath_tx_prepend_uapsd_stage_queue\n362 0x0000537c 0x0800537c LOCAL  FUNC   1740     ath_process_uapsd_trigger\n363 0x000061e0 0x080061e0 LOCAL  FUNC   92       ath_setdefantenna\n364 0x0001b8d8 0x0801b8d8 LOCAL  FUNC   1016     ath_txq_update\n365 0x00038b2c 0x08038b2c LOCAL  FUNC   128      ath_get_retries_num\n366 0x0001f9f8 0x0801f9f8 LOCAL  FUNC   2436     ath_buf_set_rate\n367 0x00018308 0x08018308 LOCAL  FUNC   2384     ath_rx_tasklet\n368 0x00001cac 0x08001cac LOCAL  FUNC   136      ath_beacon_free\n369 0x0000453c 0x0800453c LOCAL  FUNC   20       ath_tx_uapsd_depth\n370 0x00006e58 0x08006e58 LOCAL  FUNC   44       ath_get_maxtxpower\n371 0x0003a0b0 0x0803a0b0 LOCAL  FUNC   20       ath_proc_write_version\n372 0x0002ac90 0x0802ac90 LOCAL  FUNC   64       ath_tx_node_free\n373 0x000335d0 0x080335d0 LOCAL  FUNC   1100     ath_node_pwrsaveq_flush\n374 0x00016504 0x08016504 LOCAL  FUNC   128      ath_pwrsave_netsleep\n375 0x0001f8d0 0x0801f8d0 LOCAL  FUNC   184      ath_pkt_duration\n376 0x000119b4 0x080119b4 LOCAL  FUNC   84       ath_setTxPwrAdjust\n377 0x0000bb44 0x0800bb44 LOCAL  FUNC   340      ath_checkandplumb_key\n378 0x0001bdc8 0x0801bdc8 LOCAL  FUNC   24       ath_set_protmode\n379 0x000039e0 0x080039e0 LOCAL  FUNC   264      ath_hw_beacon_rssi_threshold_disable\n380 0x00013864 0x08013864 LOCAL  FUNC   228      ath_gpio_set_intr\n381 0x0003ad14 0x0803ad14 LOCAL  FUNC   48       __wbuf_map_single_tx\n382 0x0001c330 0x0801c330 LOCAL  FUNC   4324     ath_tx_txqaddbuf\n383 0x00006da4 0x08006da4 LOCAL  FUNC   84       ath_set_diversity\n384 0x00036218 0x08036218 LOCAL  FUNC   624      ath_form_swretry_frm\n385 0x000346c8 0x080346c8 LOCAL  FUNC   44       ath_node_pwrsaveq_set_param\n386 0x00007330 0x08007330 LOCAL  FUNC   60       ath_green_ap_is_vap_active\n387 0x00018f68 0x08018f68 LOCAL  FUNC   360      ath_rx_duration\n388 0x00015adc 0x08015adc LOCAL  FUNC   32       ath_pcie_pwrsave_enable_on_phystate_change\n389 0x0003a51c 0x0803a51c LOCAL  FUNC   48       ath_handle_rx_intr\n390 0x00011428 0x08011428 LOCAL  FUNC   120      ath_wait_sc_inuse_cnt\n391 0x00045e48 0x08045e48 LOCAL  OBJ    4        ACVOMinfree\n392 0x00027d88 0x08027d88 LOCAL  FUNC   5856     ath_txq_schedule_before_eapol\n393 0x0003b318 0x0803b318 LOCAL  FUNC   72       ahb_free_consistent\n394 0x00005a48 0x08005a48 LOCAL  FUNC   944      ath_tx_stage_queue_uapsd\n395 0x00006df8 0x08006df8 LOCAL  FUNC   48       ath_set_rx_chainmasklegacy\n396 0x000312ec 0x080312ec LOCAL  FUNC   200      ath_paprd_send\n397 0x00045e4c 0x08045e4c LOCAL  OBJ    4        adhoc_nl_sock\n398 0x00039afc 0x08039afc LOCAL  FUNC   64       ath_green_ap_is_powersave_on\n399 0x00016bd8 0x08016bd8 LOCAL  FUNC   448      ath_opmode_init\n400 0x0003a3b4 0x0803a3b4 LOCAL  FUNC   40       ath_proc_read\n401 0x00034678 0x08034678 LOCAL  FUNC   80       ath_node_pwrsaveq_detach\n402 0x00045be0 0x08045be0 LOCAL  OBJ    4        ACBKMinfree\n403 0x000352a4 0x080352a4 LOCAL  FUNC   1796     ath_tx_vap_pause_control\n404 0x0003a314 0x0803a314 LOCAL  FUNC   40       ath_proc_read_ignoredfs\n405 0x00019e14 0x08019e14 LOCAL  FUNC   2704     ath_ampdu_input\n406 0x0001bec4 0x0801bec4 LOCAL  FUNC   284      ath_tx_drain_backlogq\n407 0x000037a4 0x080037a4 LOCAL  FUNC   132      ath_get_hwbeaconproc_active\n408 0x00006840 0x08006840 LOCAL  FUNC   32       ath_keycache_print\n409 0x000303cc 0x080303cc LOCAL  FUNC   1124     ath_tx_paprd_complete\n410 0x0003001c 0x0803001c LOCAL  FUNC   24       ath_paprd_getrate\n411 0x00003760 0x08003760 LOCAL  FUNC   68       ath_bmiss_tasklet\n412 0x0003a154 0x0803a154 LOCAL  FUNC   448      ath_proc_write_nodefixedrate\n413 0x0001b7fc 0x0801b7fc LOCAL  FUNC   220      ath_tx_get_qnum\n414 0x00035b48 0x08035b48 LOCAL  FUNC   1452     ath_handlepspoll\n415 0x0002ad08 0x0802ad08 LOCAL  FUNC   56       ath_tx_node_pause_nolock\n416 0x00001a14 0x08001a14 LOCAL  FUNC   500      ath_beacon_alloc\n417 0x00019940 0x08019940 LOCAL  FUNC   72       ath_addba_responsesetup\n418 0x0001d460 0x0801d460 LOCAL  FUNC   2288     ath_tx_start\n419 0x0002710c 0x0802710c LOCAL  FUNC   36       ath_aggr_teardown\n420 0x0003b274 0x0803b274 LOCAL  FUNC   16       ath_adhoc_netlink_reply\n421 0x00006c1c 0x08006c1c LOCAL  FUNC   32       ath_clear_mib_counters\n422 0x000095f8 0x080095f8 LOCAL  FUNC   172      ath_resched_txq\n423 0x000313b4 0x080313b4 LOCAL  FUNC   480      ath_tx_paprd_cleanup\n424 0x00036ce8 0x08036ce8 LOCAL  FUNC   1008     ath_tx_dec_eligible_frms\n425 0x00022a7c 0x08022a7c LOCAL  FUNC   144      ath_addba_clear\n426 0x00004814 0x08004814 LOCAL  FUNC   232      ath_tx_uapsd_node_cleanup\n427 0x00022dd0 0x08022dd0 LOCAL  FUNC   140      ath_tx_pause_tid\n428 0x00038f18 0x08038f18 LOCAL  FUNC   32       ath_green_ap_sc_set_transition_time\n429 0x0003ad44 0x0803ad44 LOCAL  FUNC   152      wbuf_alloc\n430 0x00003b6c 0x08003b6c LOCAL  FUNC   28       ath_beacon_attach\n431 0x0000ba64 0x0800ba64 LOCAL  FUNC   56       ath_dprintf\n432 0x00031ad0 0x08031ad0 LOCAL  FUNC   528      ath_tx_complete_buf\n433 0x00023ddc 0x08023ddc LOCAL  FUNC   516      ath_insertq_inorder\n434 0x000019a0 0x080019a0 LOCAL  FUNC   116      ath_beaconq_setup\n435 0x00011a08 0x08011a08 LOCAL  FUNC   244      ath_setslottime\n436 0x00038114 0x08038114 LOCAL  FUNC   32       ath_atf_sc_set\n437 0x00011c00 0x08011c00 LOCAL  FUNC   440      ath_chan_change\n438 0x00015bbc 0x08015bbc LOCAL  FUNC   884      ath_pwrsave_set_state\n439 0x0003b92c 0x0803b92c LOCAL  FUNC   56       bus_read_cachesize\n440 0x0003b040 0x0803b040 LOCAL  FUNC   40       __wbuf_unmap_sg\n441 0x0000625c 0x0800625c LOCAL  FUNC   32       ath_disable_hwq\n442 0x0001b178 0x0801b178 LOCAL  FUNC   368      ath_tx_init\n443 0x0002a6e0 0x0802a6e0 LOCAL  FUNC   308      ath_txq_drain_pending_buffers\n444 0x00023bf8 0x08023bf8 LOCAL  FUNC   340      ath_tx_num_badfrms\n445 0x00006094 0x08006094 LOCAL  FUNC   68       ath_tx_uapsd_pause_end\n446 0x0000ba9c 0x0800ba9c LOCAL  FUNC   168      ath_process_phyerr\n447 0x000345f0 0x080345f0 LOCAL  FUNC   136      ath_node_pwrsaveq_attach\n448 0x00006b94 0x08006b94 LOCAL  FUNC   32       ath_gettsftstamp\n449 0x0000b3a0 0x0800b3a0 LOCAL  FUNC   192      ath_set_tx_chainmaskopt\n450 0x0002acd0 0x0802acd0 LOCAL  FUNC   56       ath_tx_node_pause\n451 0x00003630 0x08003630 LOCAL  FUNC   304      ath_beacon_sync\n452 0x0001af04 0x0801af04 LOCAL  FUNC   20       ath_timer_is_active\n453 0x0001e094 0x0801e094 LOCAL  FUNC   1456     ath_tx_update_stats\n454 0x000317ac 0x080317ac LOCAL  FUNC   804      ath_edma_free_complete_buf\n455 0x0001f988 0x0801f988 LOCAL  FUNC   112      ath_txchainmask_reduction\n456 0x00032318 0x08032318 LOCAL  FUNC   1536     ath_tx_complete_aggr_compact\n457 0x00002880 0x08002880 LOCAL  FUNC   3504     ath_beacon_config\n458 0x00039254 0x08039254 LOCAL  FUNC   444      ath_green_ap_detach\n459 0x0003a54c 0x0803a54c LOCAL  FUNC   332      ath_rx_indicate\n460 0x00006be8 0x08006be8 LOCAL  FUNC   52       ath_get_mib_macstats\n461 0x0001c028 0x0801c028 LOCAL  FUNC   776      ath_tx_mcastqaddbuf\n462 0x0001b524 0x0801b524 LOCAL  FUNC   84       ath_tx_cleanupq\n463 0x000167a8 0x080167a8 LOCAL  FUNC   100      ath_rx_cleanup\n464 0x0002a814 0x0802a814 LOCAL  FUNC   564      ath_tx_node_init\n465 0x00031594 0x08031594 LOCAL  FUNC   536      ath_tx_paprd_draintxq\n466 0x00038154 0x08038154 LOCAL  FUNC   28       ath_atf_sc_get_unused_txtoken\n467 0x0001694c 0x0801694c LOCAL  FUNC   652      ath_calcrxfilter\n468 0x0002fa38 0x0802fa38 LOCAL  FUNC   252      ath_tx_edma_tasklet\n469 0x0003982c 0x0803982c LOCAL  FUNC   392      ath_green_ap_stop\n470 0x00036488 0x08036488 LOCAL  FUNC   976      ath_tx_drain_sxmitq\n471 0x00018f2c 0x08018f2c LOCAL  FUNC   60       ath_fill_radiotap_hdr\n472 0x00003b88 0x08003b88 LOCAL  FUNC   16       ath_beacon_detach\n473 0x00009010 0x08009010 LOCAL  FUNC   428      ath_dev_start_spectral_scan\n474 0x00015afc 0x08015afc LOCAL  FUNC   48       ath_notify_device_removal\n475 0x0001bcd0 0x0801bcd0 LOCAL  FUNC   76       ath_txq_burst_update\n476 0x0002d538 0x0802d538 LOCAL  FUNC   288      ath_edma_stoprecv\n477 0x00038170 0x08038170 LOCAL  FUNC   688      ath_atf_sc_update_node_txtoken\n478 0x00019630 0x08019630 LOCAL  FUNC   784      ath_addba_requestprocess\n479 0x0003a0f4 0x0803a0f4 LOCAL  FUNC   48       ath_proc_write_rtscts\n480 0x00003b28 0x08003b28 LOCAL  FUNC   68       ath_brssi_tasklet\n481 0x0003b3c8 0x0803b3c8 LOCAL  FUNC   352      bus_dma_sync_single\n482 0x0003b3a4 0x0803b3a4 LOCAL  FUNC   20       bus_alloc_nonconsistent\n483 0x00045df8 0x08045df8 LOCAL  OBJ    40       global_scn\n484 0x00008564 0x08008564 LOCAL  FUNC   164      ath_node_set_fixedrate\n485 0x00015b68 0x08015b68 LOCAL  FUNC   28       ath_get_hw_phystate\n486 0x000222cc 0x080222cc LOCAL  FUNC   400      ath_tx_tasklet\n487 0x00015b2c 0x08015b2c LOCAL  FUNC   32       ath_detect_card_present\n488 0x00006bb4 0x08006bb4 LOCAL  FUNC   52       ath_get_mib_cyclecounts\n489 0x000038d4 0x080038d4 LOCAL  FUNC   268      ath_hw_beacon_rssi_threshold_enable\n490 0x00032918 0x08032918 LOCAL  FUNC   132      ath_tx_mark_aggr_rifs_done\n491 0x0002d6f4 0x0802d6f4 LOCAL  FUNC   544      ath_rx_intr\n492 0x000399b4 0x080399b4 LOCAL  FUNC   88       ath_green_ap_sc_set_enable\n493 0x0003d130 0x0803d130 LOCAL  OBJ    256      bits_per_symbol\n494 0x00030004 0x08030004 LOCAL  FUNC   24       ath_paprd_setrate\n495 0x00022b74 0x08022b74 LOCAL  FUNC   184      ath_tx_update_baw\n496 0x00012de8 0x08012de8 LOCAL  FUNC   272      ath_lean_set_channel\n497 0x000048fc 0x080048fc LOCAL  FUNC   384      ath_tx_queue_uapsd\n498 0x0002e7e8 0x0802e7e8 LOCAL  FUNC   320      ath_rx_edma_intr\n499 0x00004508 0x08004508 LOCAL  FUNC   36       ath_txstatus_cleanup\n500 0x0002e928 0x0802e928 LOCAL  FUNC   4368     ath_tx_edma_process\n501 0x00015ba4 0x08015ba4 LOCAL  FUNC   24       ath_pwrsave_get_state\n502 0x000043e4 0x080043e4 LOCAL  FUNC   176      ath_txstatus_setup\n503 0x0001680c 0x0801680c LOCAL  FUNC   320      ath_rx_init\n504 0x0002ae58 0x0802ae58 LOCAL  FUNC   84       ath_set_weptkip_rxdelim\n505 0x0001f65c 0x0801f65c LOCAL  FUNC   88       ath_txq_set_minfree\n506 0x00038f58 0x08038f58 LOCAL  FUNC   32       ath_green_ap_sc_set_on_time\n507 0x00045bdc 0x08045bdc LOCAL  OBJ    4        ACBEMinfree\n508 0x00038420 0x08038420 LOCAL  FUNC   200      ath_calc_ack_duration\n509 0x00038fd0 0x08038fd0 LOCAL  FUNC   40       null_reset_dev\n510 0x00004550 0x08004550 LOCAL  FUNC   128      ath_tx_uapsd_cleanup\n511 0x00015848 0x08015848 LOCAL  FUNC   260      ath_init_spectral_ops\n512 0x0002d3dc 0x0802d3dc LOCAL  FUNC   348      ath_edma_startrecv\n513 0x0001a8a4 0x0801a8a4 LOCAL  FUNC   428      ath_rx_aggr_teardown\n514 0x00022a44 0x08022a44 LOCAL  FUNC   56       ath_addba_status\n515 0x00006c98 0x08006c98 LOCAL  FUNC   116      ath_set_txqproperty\n516 0x0003a894 0x0803a894 LOCAL  FUNC   28       ath_iw_attach\n517 0x0001b578 0x0801b578 LOCAL  FUNC   100      ath_tx_setup\n518 0x00017308 0x08017308 LOCAL  FUNC   1292     ath_rx_input\n519 0x000329f8 0x080329f8 LOCAL  FUNC   1548     ath_node_pwrsaveq_queue\n520 0x00003b98 0x08003b98 LOCAL  FUNC   828      ath_timbcast_alloc\n521 0x0002fe0c 0x0802fe0c LOCAL  FUNC   40       ath_txbf_set_rpt_received\n522 0x00029698 0x08029698 LOCAL  FUNC   4168     ath_tx_complete_aggr_rifs\n523 0x0001ae9c 0x0801ae9c LOCAL  FUNC   64       ath_start_timer\n524 0x00026b0c 0x08026b0c LOCAL  FUNC   324      ath_tx_resume_tid\n525 0x0001e644 0x0801e644 LOCAL  FUNC   1456     ath_tx_draintxq\n526 0x00026e9c 0x08026e9c LOCAL  FUNC   624      ath_tx_aggr_teardown\n527 0x0001ae04 0x0801ae04 LOCAL  FUNC   20       ath_initialize_timer_module\n528 0x00011f90 0x08011f90 LOCAL  FUNC   64       ath_green_ap_reset_dev\n529 0x0003a0c4 0x0803a0c4 LOCAL  FUNC   48       ath_proc_write_ignoredfs\n530 0x00003ae8 0x08003ae8 LOCAL  FUNC   32       ath_hw_beacon_rssi\n531 0x0000ad78 0x0800ad78 LOCAL  FUNC   120      ath_set_ctl_pwr\n532 0x0001228c 0x0801228c LOCAL  FUNC   1476     ath_set_channel\n533 0x0001aba8 0x0801aba8 LOCAL  FUNC   488      ath_rx_node_cleanup\n534 0x00006e84 0x08006e84 LOCAL  FUNC   76       ath_read_from_eeprom\n535 0x0001dd50 0x0801dd50 LOCAL  FUNC   708      _ath_tx_complete_buf\n536 0x00004a7c 0x08004a7c LOCAL  FUNC   316      ath_tx_uapsdqnulbf_complete\n537 0x00004df8 0x08004df8 LOCAL  FUNC   1412     ath_tx_uapsd_draintxq\n538 0x0001546c 0x0801546c LOCAL  FUNC   148      ath_tx_frag_cleanup\n539 0x00036160 0x08036160 LOCAL  FUNC   96       ath_reset_paused_tid\n540 0x00006ed0 0x08006ed0 LOCAL  FUNC   48       ath_fixed_log_text\n541 0x00003ffc 0x08003ffc LOCAL  FUNC   1000     ath_descdma_setup\n542 0x00039a0c 0x08039a0c LOCAL  FUNC   240      ath_green_ap_attach\n543 0x0001f2d0 0x0801f2d0 LOCAL  FUNC   404      ath_draintxq\n544 0x00006d94 0x08006d94 LOCAL  FUNC   16       ath_get_hwrevs\n545 0x00022fb0 0x08022fb0 LOCAL  FUNC   56       ath_smart_ant_select_train_packet\n546 0x0002fd80 0x0802fd80 LOCAL  FUNC   52       ath_txbf_set_key\n547 0x000073fc 0x080073fc LOCAL  FUNC   40       ath_get_pwrsaveq_len\n548 0x000045d0 0x080045d0 LOCAL  FUNC   580      ath_tx_uapsd_init\n549 0x00039b80 0x08039b80 LOCAL  FUNC   44       ath_green_ap_sc_set_enable_print\n550 0x00045d38 0x08045d38 LOCAL  OBJ    4        g_pktlog_funcs\n551 0x000320a8 0x080320a8 LOCAL  FUNC   432      _ath_swretry_comp_aggr_dec_eligible_frms\n552 0x00001d34 0x08001d34 LOCAL  FUNC   352      ath_hw_hang_check\n553 0x0003b078 0x0803b078 LOCAL  FUNC   56       ath_adhoc_netlink_delete\n554 0x0002fe7c 0x0802fe7c LOCAL  FUNC   336      ath_apply_paprd_table\n555 0x000092e4 0x080092e4 LOCAL  FUNC   40       ath_rate_newstate_set\n556 0x00039e20 0x08039e20 LOCAL  FUNC   572      ath_ald_collect_data\n557 0x0003b7c4 0x0803b7c4 LOCAL  FUNC   212      bus_alloc_consistent\n558 0x00001e94 0x08001e94 LOCAL  FUNC   2304     ath_beacon_tasklet\n559 0x0002ae40 0x0802ae40 LOCAL  FUNC   24       ath_set_ampduparams\n560 0x000359a8 0x080359a8 LOCAL  FUNC   260      dumpTxQueue\n561 0x00036858 0x08036858 LOCAL  FUNC   888      ath_tx_flush_node_sxmitq\n562 0x00004494 0x08004494 LOCAL  FUNC   116      ath_descdma_cleanup\n563 0x00016288 0x08016288 LOCAL  FUNC   636      ath_radio_disable\n564 0x0003b3b8 0x0803b3b8 LOCAL  FUNC   16       bus_free_nonconsistent\n565 0x00038134 0x08038134 LOCAL  FUNC   32       ath_atf_sc_clear\n566 0x0001af40 0x0801af40 LOCAL  FUNC   72       ath_free_timer_int\n567 0x00016f8c 0x08016f8c LOCAL  FUNC   304      ath_allocRxbufsForFreeList\n568 0x000093ac 0x080093ac LOCAL  FUNC   20       ath_rc_rate_maprix\n569 0x00038f78 0x08038f78 LOCAL  FUNC   32       ath_green_ap_sc_get_on_time\n570 0x0001e014 0x0801e014 LOCAL  FUNC   128      ath_tx_update_hwretries_estimate\n571 0x00016d98 0x08016d98 LOCAL  FUNC   340      ath_stoprecv\n572 0x00021774 0x08021774 LOCAL  FUNC   2904     ath_tx_processq\n573 0x00007614 0x08007614 LOCAL  FUNC   44       ath_tx99_ops\n574 0x0001599c 0x0801599c LOCAL  FUNC   320      ath_pcie_pwrsave_enable\n575 0x0002fdb4 0x0802fdb4 LOCAL  FUNC   40       ath_txbf_set_hw_cvtimeout\n576 0x00031e1c 0x08031e1c LOCAL  FUNC   180      _txcomp_handle_subframe_retry\n577 0x0001f61c 0x0801f61c LOCAL  FUNC   32       ath_txq_num_buf_used\n578 0x00031ed0 0x08031ed0 LOCAL  FUNC   472      _ath_swretry_comp_handle_tim\n579 0x0003b6fc 0x0803b6fc LOCAL  FUNC   200      bus_unmap_single\n580 0x00039b5c 0x08039b5c LOCAL  FUNC   36       ath_green_ap_sc_get_enable_print\n581 0x00045e28 0x08045e28 LOCAL  OBJ    4        ath_ioctl_debug\n582 0x00007300 0x08007300 LOCAL  FUNC   48       ath_green_ap_ps_on_off\n583 0x00018c58 0x08018c58 LOCAL  FUNC   188      ath_flushrecv\n584 0x0002e798 0x0802e798 LOCAL  FUNC   80       ath_rx_edma_tasklet\n585 0x00006e28 0x08006e28 LOCAL  FUNC   48       ath_set_tx_chainmasklegacy\n586 0x00030830 0x08030830 LOCAL  FUNC   1628     ath_sendpaprd_single\n587 0x00016224 0x08016224 LOCAL  FUNC   100      ath_pwrsave_fullsleep\n588 0x00012ef8 0x08012ef8 LOCAL  FUNC   612      ath_stop_locked\n589 0x0001d414 0x0801d414 LOCAL  FUNC   76       ath_rate_findrix\n590 0x00045e34 0x08045e34 LOCAL  OBJ    4        ath_rtscts_enable\n591 0x0001b5dc 0x0801b5dc LOCAL  FUNC   544      ath_set_tx\n592 0x00038bac 0x08038bac LOCAL  FUNC   844      ath_atf_node_airtime_consumed\n593 0x00006f00 0x08006f00 LOCAL  FUNC   104      ath_rate_findrc\n594 0x0002aeac 0x0802aeac LOCAL  FUNC   60       ath_get_amsdusupported\n595 0x0002ffcc 0x0802ffcc LOCAL  FUNC   32       ath_paprd_set_enable\n596 0x00022e5c 0x08022e5c LOCAL  FUNC   256      ath_addba_requestsetup\n597 0x00030e8c 0x08030e8c LOCAL  FUNC   1120     ath_paprd_cal\n598 0x00008e0c 0x08008e0c LOCAL  FUNC   516      ath_dev_stop_spectral_scan\n599 0x00007388 0x08007388 LOCAL  FUNC   28       ath_green_ap_get_current_channel_flags\n600 0x00008504 0x08008504 LOCAL  FUNC   96       ath_set_rx_chainmask\n601 0x00045bd4 0x08045bd4 LOCAL  OBJ    4        CABMinfree\n602 0x00023d4c 0x08023d4c LOCAL  FUNC   144      ath_check_seq_order\n603 0x0002245c 0x0802245c LOCAL  FUNC   340      ath_print_tbf_usage\n604 0x00018d7c 0x08018d7c LOCAL  FUNC   432      ath_rx_proc_descfast\n605 0x0003b1f0 0x0803b1f0 LOCAL  FUNC   132      ath_adhoc_netlink_init\n606 0x0003a33c 0x0803a33c LOCAL  FUNC   40       ath_proc_read_nodefixedrate\n607 0x00038ef8 0x08038ef8 LOCAL  FUNC   32       ath_green_ap_sc_get_enable\n608 0x0003b360 0x0803b360 LOCAL  FUNC   68       pci_read_cachesize\n609 0x00003884 0x08003884 LOCAL  FUNC   80       ath_hwbeaconproc_disable\n610 0x0001372c 0x0801372c LOCAL  FUNC   132      ath_gpio_config\n611 0x0003a05c 0x0803a05c LOCAL  FUNC   84       ath_ald_update_frame_stats\n612 0x00037c60 0x08037c60 LOCAL  FUNC   1204     ath_tx_mpdu_resend\n613 0x000093c0 0x080093c0 LOCAL  FUNC   312      ath_do_pwrworkaround\n614 0x0003b284 0x0803b284 LOCAL  FUNC   24       ahb_read_cachesize\n615 0x00009398 0x08009398 LOCAL  FUNC   20       ath_rc_rate_set_mcast_rate\n616 0x00008978 0x08008978 LOCAL  FUNC   564      ath_dev_record_chan_info\n617 0x00026210 0x08026210 LOCAL  FUNC   2300     ath_tx_send_normal\n618 0x00034398 0x08034398 LOCAL  FUNC   600      ath_node_pwrsaveq_get_info\n619 0x0002fddc 0x0802fddc LOCAL  FUNC   16       ath_txbf_print_cv_cache\n620 0x0001bfe0 0x0801bfe0 LOCAL  FUNC   72       ath_tx_node_queue_depth\n621 0x0002fbb4 0x0802fbb4 LOCAL  FUNC   68       ath_tx_edma_cleanup\n622 0x00013844 0x08013844 LOCAL  FUNC   32       ath_gpio_get_intr\n623 0x00036bd0 0x08036bd0 LOCAL  FUNC   280      ath_tx_modify_rateseries\n624 0x000370d8 0x080370d8 LOCAL  FUNC   2952     ath_tx_mpdu_requeue\n625 0x0002fdec 0x0802fdec LOCAL  FUNC   32       ath_txbf_get_cvcache_nr\n626 0x00003828 0x08003828 LOCAL  FUNC   92       ath_hwbeaconproc_enable\n627 0x0003af94 0x0803af94 LOCAL  FUNC   20       wbuf_start_dma\n628 0x00006d0c 0x08006d0c LOCAL  FUNC   136      ath_update_txqproperty\n629 0x0000ac98 0x0800ac98 LOCAL  FUNC   172      ath_get_noderate\n630 0x000077f0 0x080077f0 LOCAL  FUNC   224      ath_gettsf64\n631 0x00039098 0x08039098 LOCAL  FUNC   444      ath_green_ap_start\n632 0x00011db8 0x08011db8 LOCAL  FUNC   472      ath_reset_end\n633 0x00004bb8 0x08004bb8 LOCAL  FUNC   576      ath_tx_uapsd_complete\n634 0x00021740 0x08021740 LOCAL  FUNC   52       ath_tx_get_rts_retrylimit\n635 0x000195f4 0x080195f4 LOCAL  FUNC   60       ath_clear_addbaresponsestatus\n636 0x0002d914 0x0802d914 LOCAL  FUNC   1532     ath_rx_bf_handler\n637 0x0003b29c 0x0803b29c LOCAL  FUNC   124      ahb_alloc_consistent\n638 0x0002ffec 0x0802ffec LOCAL  FUNC   24       ath_paprd_get_enable\n639 0x000384e8 0x080384e8 LOCAL  FUNC   1604     ath_atf_check_txtokens\n640 0x000118e0 0x080118e0 LOCAL  FUNC   212      ath_setTxPwrLimit\n641 0x0003a3dc 0x0803a3dc LOCAL  FUNC   244      ath_internal_reset\n642 0x0003b528 0x0803b528 LOCAL  FUNC   468      bus_map_single\n643 0x00017814 0x08017814 LOCAL  FUNC   704      ath_rx_bf_process\n644 0x00002794 0x08002794 LOCAL  FUNC   236      ath_bstuck_tasklet\n645 0x00006c3c 0x08006c3c LOCAL  FUNC   92       ath_get_txqproperty\n646 0x0001f6b4 0x0801f6b4 LOCAL  FUNC   540      ath_tx_drop_policy\n647 0x000165f0 0x080165f0 LOCAL  FUNC   108      ath_pwrsave_init\n648 0x0000b460 0x0800b460 LOCAL  FUNC   52       ath_setrxfilter\n649 0x0003b964 0x0803b964 LOCAL  SECT   0        .init.text\n650 0x0003bb0c 0x0803bb0c LOCAL  SECT   0        .exit.text\n651 0x0003bb8c 0x0803bb8c LOCAL  SECT   0        .text.unlikely\n652 0x0003bc18 0x0803bc18 LOCAL  SECT   0        __ksymtab\n653 0x0003f028 0x0803f028 LOCAL  SECT   0        .alt.smp.init\n654 0x00045190 0x08045190 LOCAL  SECT   0        .modinfo\n655 0x00045b48 0x08045b48 LOCAL  SECT   0        __param\n656 0x00045bfc 0x08045bfc LOCAL  SECT   0        .gnu.linkonce.this_module\n657 0x00045d38 0x08045d38 LOCAL  SECT   0        .note.GNU-stack\n658 0x00045d38 0x08045d38 LOCAL  SECT   0        .ARM.attributes\n668 0x00045bfc 0x08045bfc GLOBAL OBJ    316      __this_module\n659 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_rate_table_init\n660 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_rate_tx_complete\n661 ---------- ---------- GLOBAL NOTYPE 16       imp.asf_print_mask_set\n662 ---------- ---------- GLOBAL NOTYPE 16       imp.start_spectral_scan\n663 ---------- ---------- GLOBAL NOTYPE 16       imp._ath_hal_attach\n664 ---------- ---------- GLOBAL NOTYPE 16       imp.spectral_send_intf_found_msg\n665 ---------- ---------- GLOBAL NOTYPE 16       imp.skb_put\n666 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_hal_display_tpctables\n667 ---------- ---------- GLOBAL NOTYPE 16       imp.consume_skb\n669 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_hal_set_config_param\n670 ---------- ---------- GLOBAL NOTYPE 16       imp.snprintf\n671 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_rate_attach\n672 ---------- ---------- GLOBAL NOTYPE 16       imp.stop_current_scan\n673 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_rate_set_mcast_rate\n674 ---------- ---------- GLOBAL NOTYPE 16       imp.amalloc_private\n675 ---------- ---------- GLOBAL NOTYPE 16       imp.findCountryCode\n676 ---------- ---------- GLOBAL NOTYPE 16       imp.memcpy\n677 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_smart_ant_set_fixedrate\n678 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_rate_newassoc\n679 ---------- ---------- GLOBAL NOTYPE 16       imp.spectral_control\n680 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_process_spectraldata\n681 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_hal_computetxtime\n682 ---------- ---------- GLOBAL NOTYPE 16       imp.pci_bus_write_config_byte\n683 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_rate_node_free\n684 ---------- ---------- GLOBAL NOTYPE 16       imp.vsnprintf\n685 ---------- ---------- GLOBAL NOTYPE 16       imp.spectral_record_chan_info\n686 ---------- ---------- GLOBAL NOTYPE 16       imp._raw_spin_lock_irqsave\n687 ---------- ---------- GLOBAL NOTYPE 16       imp.membank0_size\n688 ---------- ---------- GLOBAL NOTYPE 16       imp._raw_spin_lock\n689 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_rate_free_vap\n690 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_hal_get_antenna_gain\n691 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_hal_get_config_param\n692 ---------- ---------- GLOBAL NOTYPE 16       imp.create_proc_entry\n693 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_rate_node_alloc\n694 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_hal_mhz2ieee\n695 ---------- ---------- GLOBAL NOTYPE 16       imp.dump_stack\n696 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_rate_node_update\n697 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_rate_node_gettxrate\n698 ---------- ---------- GLOBAL NOTYPE 16       imp.msecs_to_jiffies\n699 ---------- ---------- GLOBAL NOTYPE 16       imp._raw_spin_unlock_bh\n700 ---------- ---------- GLOBAL NOTYPE 16       imp.pci_bus_read_config_dword\n701 ---------- ---------- GLOBAL NOTYPE 16       imp.netlink_broadcast\n702 ---------- ---------- GLOBAL NOTYPE 16       imp.pci_bus_read_config_word\n703 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_hal_detach\n704 ---------- ---------- GLOBAL NOTYPE 16       imp.__alloc_skb\n705 ---------- ---------- GLOBAL NOTYPE 16       imp.spectral_detach\n706 ---------- ---------- GLOBAL NOTYPE 16       imp.spectral_scan_enable_params\n707 ---------- ---------- GLOBAL NOTYPE 16       imp.dev_kfree_skb_any\n708 ---------- ---------- GLOBAL NOTYPE 16       imp.__aeabi_idiv\n709 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_hal_set_antenna_gain\n710 ---------- ---------- GLOBAL NOTYPE 16       imp.init_net\n711 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_hal_getCurrentCountry\n712 ---------- ---------- GLOBAL NOTYPE 16       imp.skb_pull\n713 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_hal_enabledANI\n714 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_smart_ant_rate_prepare_rateset\n715 ---------- ---------- GLOBAL NOTYPE 16       imp.mod_timer\n716 ---------- ---------- GLOBAL NOTYPE 16       imp.tx99_detach\n717 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_rate_create_vap\n718 ---------- ---------- GLOBAL NOTYPE 16       imp.mem_section\n719 ---------- ---------- GLOBAL NOTYPE 16       imp.warn_slowpath_null\n720 ---------- ---------- GLOBAL NOTYPE 16       imp.vprintk\n721 ---------- ---------- GLOBAL NOTYPE 16       imp.spectral_scan_enable\n722 ---------- ---------- GLOBAL NOTYPE 16       imp.spectral_check_hw_capability\n723 ---------- ---------- GLOBAL NOTYPE 16       imp.panic\n724 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_hal_set_mfp_qos\n725 ---------- ---------- GLOBAL NOTYPE 16       imp.memcmp\n726 ---------- ---------- GLOBAL NOTYPE 16       imp._raw_spin_trylock\n727 ---------- ---------- GLOBAL NOTYPE 16       imp.sscanf\n728 ---------- ---------- GLOBAL NOTYPE 16       imp.printk\n729 ---------- ---------- GLOBAL NOTYPE 16       imp.jiffies_to_msecs\n730 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_hal_readRegister\n731 ---------- ---------- GLOBAL NOTYPE 16       imp._raw_spin_unlock_irqrestore\n732 ---------- ---------- GLOBAL NOTYPE 16       imp._raw_spin_trylock_bh\n733 ---------- ---------- GLOBAL NOTYPE 16       imp.asf_print_ctrl_register_private\n734 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_hal_keysearch_always_war_enable\n735 ---------- ---------- GLOBAL NOTYPE 16       imp.memset\n736 ---------- ---------- GLOBAL NOTYPE 16       imp.netlink_kernel_create\n737 ---------- ---------- GLOBAL NOTYPE 16       imp.del_timer_sync\n738 ---------- ---------- GLOBAL NOTYPE 16       imp.__memzero\n739 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_rate_node_cleanup\n740 ---------- ---------- GLOBAL NOTYPE 16       imp.param_ops_charp\n741 ---------- ---------- GLOBAL NOTYPE 16       imp.__aeabi_uidiv\n742 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_rate_detach\n743 ---------- ---------- GLOBAL NOTYPE 16       imp.afree_private\n744 ---------- ---------- GLOBAL NOTYPE 16       imp.skb_trim\n745 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_rate_max_tx_chains\n746 ---------- ---------- GLOBAL NOTYPE 16       imp.jiffies\n747 ---------- ---------- GLOBAL NOTYPE 16       imp.spectral_register_funcs\n748 ---------- ---------- GLOBAL NOTYPE 16       imp.asf_vprint_category_private\n749 ---------- ---------- GLOBAL NOTYPE 16       imp.__adf_nbuf_alloc\n750 ---------- ---------- GLOBAL NOTYPE 16       imp.__adf_nbuf_free\n751 ---------- ---------- GLOBAL NOTYPE 16       imp.init_timer_key\n752 ---------- ---------- GLOBAL NOTYPE 16       imp.__const_udelay\n753 ---------- ---------- GLOBAL NOTYPE 16       imp.remove_proc_entry\n754 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_rate_tx_complete_11n\n755 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_hal_get_device_info\n756 ---------- ---------- GLOBAL NOTYPE 16       imp.__aeabi_uidivmod\n757 ---------- ---------- GLOBAL NOTYPE 16       imp.simple_strtoul\n758 ---------- ---------- GLOBAL NOTYPE 16       imp._raw_spin_lock_bh\n759 ---------- ---------- GLOBAL NOTYPE 16       imp.sock_release\n760 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_rate_node_init\n761 ---------- ---------- GLOBAL NOTYPE 16       imp.arm_dma_ops\n762 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_rate_findrate\n763 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_hal_init_channels\n764 ---------- ---------- GLOBAL NOTYPE 16       imp.findCTLByCountryCode\n765 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_get_tx_chainmask\n766 ---------- ---------- GLOBAL NOTYPE 16       imp.spectral_attach\n767 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_rate_maprix\n768 ---------- ---------- GLOBAL NOTYPE 16       imp.getCommonPower\n769 ---------- ---------- GLOBAL NOTYPE 16       imp.is_spectral_phyerr\n770 ---------- ---------- GLOBAL NOTYPE 16       imp.del_timer\n771 ---------- ---------- GLOBAL NOTYPE 16       imp.param_ops_int\n772 ---------- ---------- GLOBAL NOTYPE 16       imp.membank1_start\n773 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_rate_getmaxphyrate\n774 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_rate_newstate\n775 ---------- ---------- GLOBAL NOTYPE 16       imp.__aeabi_idivmod\n776 ---------- ---------- GLOBAL NOTYPE 16       imp.tx99_attach\n777 ---------- ---------- GLOBAL NOTYPE 16       imp.tx99_ioctl\n778 ---------- ---------- GLOBAL NOTYPE 16       imp.pci_bus_read_config_byte\n779 ---------- ---------- GLOBAL NOTYPE 16       imp.asf_print_ctrl_unregister_private\n780 ---------- ---------- GLOBAL NOTYPE 16       imp.ath_hal_getwirelessmodes", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"我已经找到了函数 'ath_iw_getparam' 的地址（0x3a8b0）。现在，我将使用 Radare2 反编译这个函数以分析其代码结构。目标是识别输入点（如函数参数、全局变量）和数据流路径。如果发现子函数调用或复杂数据流，我可能需要使用 FunctionDelegator 进行深入追踪。\",\n  \"action\": \"r2\",\n  \"action_input\": {\n    \"command\": \"s 0x3a8b0; pdg\"\n  },\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：r2\n参数：{\"command\": \"s 0x3a8b0; pdg\"}\n结果：\n [s 0x3a8b0; pdg 命令无输出]", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"Radare2 的 'pdg' 命令无输出，可能由于反编译插件问题或函数代码不可反编译。我将尝试使用 'pdf' 命令反汇编函数 'ath_iw_getparam' 以分析其汇编代码。如果成功，我将识别输入点（如函数参数、寄存器使用）和数据流路径。如果反汇编显示复杂调用链，我可能需要使用 FunctionDelegator 进行深入追踪。\",\n  \"action\": \"r2\",\n  \"action_input\": {\n    \"command\": \"s 0x3a8b0; pdf\"\n  },\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：r2\n参数：{\"command\": \"s 0x3a8b0; pdf\"}\n结果：\n [s 0x3a8b0; pdf 命令无输出]", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"Radare2 命令 's 0x3a8b0; pdf' 无输出，可能由于会话状态问题或函数地址不可访问。我将尝试使用 'afl' 命令列出所有函数以确认 'ath_iw_getparam' 是否存在，然后重新尝试反汇编。如果仍然失败，我将使用 'execute_shell' 工具通过 'readelf' 或 'objdump' 来反汇编函数。目标是识别输入点和数据流。\",\n  \"action\": \"r2\",\n  \"action_input\": {\n    \"command\": \"afl\"\n  },\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：r2\n参数：{\"command\": \"afl\"}\n结果：\n 0x08000034   20     66 fcn.08000034\n0x080060d8    1     20 sym.ath_reg_notify_tx_bcn\n0x080060ec    1     20 sym.ath_dereg_notify_tx_bcn\n0x08006100    1     20 sym.ath_vap_info_get\n0x08006114    1     32 sym.ath_reg_vap_info_notify\n0x08006134    1     20 sym.ath_vap_info_update_notify\n0x08006148    1     32 sym.ath_dereg_vap_info_notify\n0x08006168    5     88 sym.ath_set_txpowlimit\n0x080061c0    1     32 sym.ath_enable_tpc\n0x0800627c    1     36 sym.ath_up_beacon\n0x080062a0    1     40 sym.ath_get_channel\n0x080062c8    1     32 sym.ath_get_rxfilter\n0x080062e8    3     56 sym.ath_monitor_filter_phyerr\n0x08006320    1     16 sym.ath_enter_led_scan_state\n0x08006330    1     20 sym.ath_led_state\n0x08006344    1     40 sym.ath_radio_info\n0x0800636c    1     16 sym.ath_leave_led_scan_state\n0x0800637c    1     16 sym.ath_notify_force_ppm\n0x0800638c    1     56 sym.ath_vap_dfs_wait\n0x080063c4    1     48 sym.ath_enable_intr\n0x080063f4    1     40 sym.ath_disable_intr\n0x0800641c    1     16 sym.ath_suspend_led_control\n0x0800642c    1     52 sym.ath_get_ciphers\n0x08006460    1     32 sym.ath_get_phy_stats\n0x08006480    1     24 sym.ath_get_phy_stats_allmodes\n0x08006498    1     24 sym.ath_get_ath_stats\n0x080064b0    1     24 sym.ath_get_11n_stats\n0x080064c8    1     24 sym.ath_get_dfs_stats\n0x080064e0    5    144 sym.ath_update_beacon_info\n0x08006570    1     32 sym.ath_update_loc_ctl_reg\n0x08006590    1     32 sym.ath_read_loc_timer_reg\n0x080065b0    1     32 sym.ath_get_eeprom_chain_mask\n0x080065d0    1     24 sym.ath_set_extprotspacing\n0x080065e8    1     32 sym.ath_get_extbusyper\n0x08006608    3     48 sym.ath_start_pktlog\n0x0800663c    3     60 sym.ath_read_pktlog_hdr\n0x0800667c    3     60 sym.ath_read_pktlog_buf\n0x080066bc    1     52 sym.ath_setacparams\n0x080066f0    1     40 sym.ath_setrtparams\n0x08006718    1     76 sym.ath_sethbrparams\n0x08006764    1     32 sym.ath_setrxtimeout\n0x08006784    1     68 sym.ath_dev_get_chan_stats\n0x080067c8    1     40 sym.ath_get_goodput\n0x080067f0    1     56 sym.ath_get_tid_seqno\n0x08006828    1     24 sym.ath_keycache_size\n0x08006860    1     24 sym.ath_get_current_tx_antenna\n0x08006878    1     24 sym.ath_get_default_antenna\n0x08006890    5    112 sym.ath_get_noisefloor\n0x08006900    3     80 sym.ath_get_chainnoisefloor\n0x08006950    3     72 sym.ath_get_rx_nf_offset\n0x08006998   10    396 sym.ath_get_rx_signal_dbm\n0x08006b24    1     32 sym.ath_disable_dcsim\n0x08006b44    1     80 sym.ath_ibss_beacon_update_start\n0x08006f68    1     76 sym.ath_getmfpsupport\n0x08006fb8    1     28 sym.ath_get_tx_hw_retries\n0x08006fd4    1     28 sym.ath_get_tx_hw_success\n0x08006ff0    1     36 sym.ath_spectral_get_tsf64\n0x08007014    1     60 sym.ath_spectral_get_capability\n0x08007050    1     44 sym.ath_spectral_set_rxfilter\n0x0800707c    1     36 sym.ath_spectral_get_rxfilter\n0x080070a0    1     36 sym.ath_spectral_is_spectral_active\n0x080070c4    1     36 sym.ath_spectral_is_spectral_enabled\n0x080070e8    1     44 sym.ath_spectral_start_spectral_scan\n0x08007114    1     44 sym.ath_spectral_stop_spectral_scan\n0x08007140    1     44 sym.ath_spectral_get_extension_channel\n0x0800716c    1     92 sym.ath_spectral_reset_hw\n0x080071c8    3     60 sym.ath_spectral_get_chain_noise_floor\n0x08007204    1     28 sym.ath_spectral_get_current_channel\n0x08007220    1     40 sym.ath_spectral_get_ctl_noisefloor\n0x08007248    1     40 sym.ath_spectral_get_ext_noisefloor\n0x08007270    1     36 sym.ath_spectral_get_nominal_noisefloor\n0x08007294    1     44 sym.ath_spectral_configure_params\n0x080072c0    1     32 sym.ath_spectral_get_ent_mask\n0x080072e0    1     32 sym.ath_spectral_set_icm_active\n0x080073a4    1     32 sym.ath_cdd_control\n0x080073c4    1     32 sym.ath_set_rifs\n0x080073e4    1     24 sym.ath_get_txbuf_free\n0x08007424    3     48 sym.ath_get_tpc_tables\n0x08007454    1     60 sym.ath_set_node_tx_chainmask\n0x08007490    1     20 sym.ath_detach_dfs\n0x080074a4    1     36 sym.ath_get_mib_cycle_counts_pct\n0x080074c8    1     40 sym.ath_get_radar_thresholds\n0x080074f0    4     72 sym.ath_smart_ant_set_tx_antenna\n0x08007538    1     24 sym.ath_smart_ant_set_tx_defaultantenna\n0x08007550    1     24 sym.ath_set_beacon_interval\n0x08007568    1     56 sym.ath_txbf_loforceon_update\n0x080075a0    1     24 sym.ath_node_pspoll\n0x080075b8    4     88 sym.ath_traffic_fast_recover\n0x08007640    5    220 sym.ath_spectral_get_params\n0x080079a8    5    212 sym.ath_dev_noisefloor\n0x08007a7c    5    244 sym.ath_printreg\n0x08007b70    5    228 sym.ath_disable_dfs\n0x08007c54    5    252 sym.ath_set_quiet\n0x08007d50    1     72 sym.ath_set_ps_state\n0x08007d98    8    264 sym.ath_key_reset\n0x08007ea0   10    316 sym.ath_set_mcastlist\n0x080082cc    1     36 sym.ath_get_mac_address\n0x080082f0    1     36 sym.ath_get_hw_mac_address\n0x08008314    1     64 sym.ath_set_mac_address\n0x08008354    1     64 sym.ath_set_bssid_mask\n0x08008394    3    108 sym.ath_key_save_halkey\n0x08008400    1     44 sym.ath_spectral_get_mac_address\n0x0800842c    1    120 sym.ath_smart_ant_set_training_info\n0x08008608    7    132 sym.ath_set_noise_detection_param\n0x08008694   10    224 sym.ath_smart_ant_enable\n0x08008778    1    472 sym.ath_getiqueconfig\n0x08008df8    1     20 sym.ath_get_ps_state\n0x0800930c    1     36 sym.athop_rate_newstate\n0x080094f8    1     20 sym.ath_set_ps_awake\n0x0800950c    5    216 sym.ath_set_rxfilter\n0x080096a4    3     64 sym.ath_detach_spectral\n0x080096e4    1     24 sym.ath_find_countrycode\n0x080096fc    1     64 sym.ath_sc_reset_lowest_txrate\n0x0800973c    1     20 sym.ath_set_ps_fullsleep\n0x08009750    7    116 sym.ath_read_pci_config_space\n0x080097c4    1     20 sym.ath_smart_ant_prepare_rateset\n0x080097d8    1     48 sym.ath_conf_rx_intr_mit\n0x08009808    1     28 sym.ath_setmfpQos\n0x08009824    3     36 sym.ath_node_pause_control\n0x08009848   33    740 sym.ath_node_update_pwrsave\n0x08009b40    1     24 sym.ath_green_ap_dev_get_enable_print\n0x08009b58    1     24 sym.ath_green_ap_dev_set_enable_print\n0x08009b70    1     24 sym.ath_green_ap_dev_get_on_time\n0x08009b88    1     24 sym.ath_green_ap_dev_set_on_time\n0x08009ba0    1     24 sym.ath_green_ap_dev_get_transition_time\n0x08009bb8    1     24 sym.ath_green_ap_dev_set_transition_time\n0x08009bd0    1     24 sym.ath_green_ap_dev_get_enable\n0x08009be8    1     20 sym.ath_atf_get_unused_txtoken\n0x08009bfc    1     20 sym.ath_atf_clear\n0x08009c10    1     20 sym.ath_atf_set\n0x08009c24    1     20 sym.ath_atf_update_node_txtoken\n0x08009c38    1     44 sym.athop_rate_newassoc\n0x08009c64    1     20 sym.ath_node_getmaxphyrate\n0x08009c78    1     20 sym.ath_node_gettxrate\n0x08009c8c    1     28 sym.ath_mhz2ieee\n0x08009ca8    1     36 sym.ath_get_ctl_by_country\n0x08009ccc    1     20 sym.ath_set_ps_netsleep\n0x08009ce0   14    232 sym.ath_newassoc\n0x08009dc8   16    420 sym.ath_node_detach\n0x08009f80  137   4600 sym.ath_get_caps\n0x0800f92c   30    512 fcn.0800f92c\n0x0801ebf4   30    656 fcn.0801ebf4\n0x0800a9f8   22    548 fcn.0800a9f8\n0x0800b670    8    332 sym.ath_attach_spectral\n0x0800a624    1     32 sym.ath_clear_stats\n0x0800a644    1    180 sym.ath_radar_get_info\n0x0800a6f8   24    760 sym.ath_set_country\n0x0800ac24    3    112 sym.ath_print\n0x0800adf0    7    280 sym.ath_keyset\n0x0800af08    9    276 sym.ath_set_sel_evm\n0x0800b01c    5    232 sym.ath_set_macmode\n0x0800b104    1     76 sym.ath_ibss_beacon_update_stop\n0x0800b150    7    140 sym.ath_get_noise_detection_param\n0x0800b1e4    5    108 sym.ath_vap_config\n0x0800b518    6    100 sym.ath_green_ap_dev_set_enable\n0x0800b580    3     76 sym.ath_get_dfsdomain\n0x0800b5d0    3     76 sym.ath_get_regdomain\n0x0800b620    1     80 sym.ath_get_currentCountry\n0x0800b9a0    6    188 sym.ath_set_regdomain\n0x0800bc98    1    100 sym.ath_vap_pause_control\n0x0800bd04   16    252 sym.ath_update_sm_pwrsave\n0x0800be08   22    656 sym.ath_enable_dfs\n0x0800c0b0    8    444 sym.ath_attach_dfs\n0x0800c27c    9    308 sym.ath_set_tx_antenna_select\n0x0800c3b8    9    160 sym.ath_key_alloc_single\n0x0800c464   12    236 sym.ath_key_alloc_pair\n0x0800c55c   14    348 sym.ath_key_alloc_2pair\n0x0800c6c4    5    372 sym.ath_scan_end\n0x0800c844    5    340 sym.ath_scan_start\n0x0800c9a8    3    104 sym.ath_switch_opmode\n0x0800ca18   70   1896 sym.ath_handle_intr\n0x0800d1b4   40   1336 sym.ath_mesg_intr\n0x0800d708   42   1404 sym.ath_intr\n0x0800dca4   24    988 sym.ath_node_attach\n0x0800e098   29    612 sym.ath_vap_stopping\n0x0800e314   62   1620 sym.ath_vap_up\n0x0800e980   21    948 sym.ath_vap_join\n0x0800ed48   15    668 sym.ath_vap_listen\n0x0800effc   27    736 sym.ath_vap_down\n0x0800f2ec   19    616 sym.ath_vap_detach\n0x0800f564    7    192 sym.ath_vap_attach\n0x0800f864   25    488 sym.ath_get_device_info\n0x0800fb00   15    456 sym.ath_txq_stuck_checker\n0x0800fcdc   10    316 sym.ath_rx_hwreg_checker\n0x0800fe28   18    460 sym.ath_rx_stuck_checker\n0x08010008  145   4420 sym.ath_calibrate\n0x08011afc    7    260 sym.ath_updateslot\n0x08011fd0   16    492 sym.ath_vap_reap_txqs\n0x080121cc    5    184 sym.ath_set_proxysta\n0x080131b8   11    256 sym.ath_suspend\n0x080132b8   25   1124 sym.ath_open\n0x08015500   33    776 sym.ath_node_cleanup\n0x0801920c   28    944 sym.ath_rx_timer\n0x0801ad90    3    104 sym._ath_internal_timer_handler\n0x08026c50   21    580 sym.ath_addba_timer\n0x08038ff8    1     40 sym.null_get_current_channel_flags\n0x08039020    1     40 sym.null_get_current_channel\n0x08039048    1     40 sym.null_is_vap_active\n0x08039070    1     40 sym.null_ap_ps_on_off\n0x08039808    1     36 sym.ath_green_ap_ant_ps_mode_on_tmr_fun\n0x0803a698    3     68 sym.ath_iw_setcountry\n0x0803a6dc    1    104 sym.ath_iw_getcountry\n0x0803a744    1     52 sym.ath_iw_set_dscp_tid_map\n0x0803a778    1     56 sym.ath_iw_get_dscp_tid_map\n0x0803a7b0    5    140 sym.ath_iw_gethwaddr\n0x0803a83c    1     44 sym.ath_iw_set_saparam\n0x0803a868    1     44 sym.ath_iw_get_saparam\n0x0803bb8c   10    124 sym.find_ath_ioctl_name\n0x0803a8b0   13    336 sym.ath_iw_getparam\n0x0803aa0c   21    424 sym.ath_iw_setparam\n0x0803ac00   11    188 sym.ath_iw_sethwaddr\n0x0803acbc    1     48 sym.__wbuf_map_single\n0x0803acec    1     40 sym.__wbuf_unmap_single\n0x0803b0b0    5     92 sym.ath_adhoc_netlink_receive\n0x08033004   62   1448 sym.ath_node_pwrsaveq_send\n0x08039bac   16    628 sym.ath_ald_collect_ni_data\n0x0802d658    5    156 sym.ath_rx_process_uapsd\n0x0801f464   13    404 sym.ath_tx_flush\n0x08022f5c    1     84 sym.ath_tx_pause_tid_nolock\n0x0801b020   11    344 sym.ath_tx_cleanup\n0x0801ae88    1     20 sym.ath_set_timer_period\n0x08008bac   16    580 sym.ath_reset\n0x0801af88    1     36 sym.ath_ratecode_to_ratekbps\n0x0800623c    1     32 sym.ath_get_channel_busy_info\n0x08038f98    1     56 sym.green_ap_register_funcs\n0x0801bd1c    3    172 sym.ath_cabq_update\n0x0802fb34    4    124 sym.ath_tx_edma_init\n0x080361c0    3     88 sym.ath_check_swretry_req\n0x0801bde0    4    228 sym.ath_tx_mcast_draintxq\n0x08007fdc    5    212 sym.ath_wnm_beacon_config\n0x0801ee90    1     60 sym.ath_tx_abortalldma\n0x080084a4    1     92 sym.ath_set_tx_chainmask\n0x08015f30    3    100 sym.ath_pwrsave_awake\n0x0803b114    5    216 sym.ath_adhoc_netlink_send\n0x0800771c    5    212 sym.ath_update_mib_macstats\n0x0803a364    1     40 sym.ath_proc_read_rtscts\n0x0802aa48   27    584 sym.ath_tx_node_cleanup\n0x080091bc   10    296 sym.ath_spectral_control\n0x08009330    3    100 sym.ath_pkt_log_text\n0x08031ce0    6    232 sym.ath_node_leftovercleanup\n0x0802fc40   18    320 sym.ath_txbf_alloc_key\n0x0801164c   19    648 sym.ath_update_txpow\n0x0803b898    7    144 sym.bus_free_consistent\n0x0802fe34    3     72 sym.ath_txbf_chk_rpt_frm\n0x08001c08   18    182 sym.ath_beacon_return\n0x08021718    1     36 sym.ath_txto_tasklet\n0x080137b0    5    140 sym.ath_gpio_register_callback\n0x0801aa50    3     52 sym.ath_delba_process\n0x08015224   23    572 sym.ath_dev_free\n0x08016eec    5    160 sym.ath_rx_requeue\n0x0801665c    8    332 fcn.0801665c\n0x080078d0    5    216 sym.ath_gettsf32\n0x0803b068    1     16 sym.__wbuf_uapsd_update\n0x0801f5fc    1     32 sym.ath_txq_depth\n0x08019988   36   1136 sym.ath_bar_rx\n0x08018d14    3    104 sym.ath_rx_node_free\n0x08039b3c    1     32 sym.ath_green_ap_suspend\n0x080195d4    1     32 sym.ath_set_addbaresponse\n0x0803a124    1     48 sym.ath_proc_write\n0x08003b08    1     32 sym.ath_hw_beacon_rssi_reset\n0x08033e6c   60   1292 sym.ath_node_pwrsaveq_age\n0x080115a8    5    164 sym.ath_update_tpscale\n0x0801aa84    8    288 sym.ath_rx_node_init\n0x0802cea0   19    552 sym.ath_rx_edma_init\n0x0803a4f8    1     36 sym.ath_handle_tx_intr\n0x08025864   95   2456 sym.ath_tx_send_ampdu\n0x080114a0    6    264 sym.ath_extend_tsf\n0x080170bc   23    576 sym.ath_startrecv\n0x0802fbf8    3     72 sym.ath_get_txbfcaps\n0x08029468   22    556 sym.ath_addba_responseprocess\n0x08003ed4    9    296 sym.ath_timbcast_return\n0x08005df8    4    152 sym.ath_tx_uapsd_node_stageq_cleanup\n0x08006018    4    124 sym.ath_tx_uapsd_pause_begin\n0x08027130    1    136 sym.ath_bar_tx\n0x0803afa8    3    152 sym.__wbuf_map_sg\n0x0803addc   13    392 sym.ath_rxbuf_alloc\n0x08031dc8    4     84 sym._modify_sw_retry_limit\n0x0802ad40   10    252 sym.ath_tx_node_resume\n0x0803bb0c    1     96 sym.cleanup_module\n0x08016584    3    108 sym.ath_pwrsave_proc_intdone\n0x08015f94   20    644 sym.ath_radio_enable\n0x08030034   27    888 sym.ath_tx_paprd_init\n0x0802aee8    4     60 sym.ath_set_config\n0x08035aac    5    140 sym.ath_set_swretrystate\n0x0802037c  154   4952 sym.ath_tx_start_dma\n0x0801af18    1     40 sym.ath_timer_is_initialized\n0x08038f38    1     32 sym.ath_green_ap_sc_get_transition_time\n0x0801aedc    1     40 sym.ath_cancel_timer\n0x08039458   41    908 sym.ath_green_ap_state_mc\n0x08022b0c    7    104 sym.ath_addba_cancel_timers\n0x0802cc80   16    380 sym.ath_rx_edma_cleanup\n0x0801eed0   22    556 sym.ath_reset_draintxq\n0x0801594c    1     80 sym.ath_init_green_ap_ops\n0x080360f4    5     96 sym.ath_exist_pendingfrm_tidq\n0x08013948   41   1692 sym.ath_dev_attach\n0x0801b2e8   51   1360 sym.ath_txq_setup\n0x0802d29c    8    304 sym.ath_edmaAllocRxbufsForFreeList\n0x08023fe0  233   6228 sym.ath_txq_schedule\n0x0803af7c    1     24 sym.wbuf_release\n0x0802297c    5    200 sym.ath_aggr_check\n0x08015b4c    1     28 sym.ath_get_sw_phystate\n0x0803a38c    1     40 sym.ath_proc_read_version\n0x0802bdc8    3     60 sym.ath_get_config\n0x0800b494    5    132 sym.ath_scan_enable_txq\n0x0800736c    1     28 sym.ath_green_ap_get_current_channel\n0x080080b0   25    540 sym.ath_get_noderssi\n0x08022fe8  111   3060 sym.ath_tx_sched_normal\n0x0800ad44    3     52 sym.ath_ant_swcom_sel\n0x08017ad4   59   2092 sym.ath_rx_process\n0x08032258    7    188 sym._pktlog_update_txcomp\n0x08015820    1     40 sym.ath_spectral_indicate\n0x080111a8   23    632 sym.ath_reset_start\n0x0801f63c    1     32 sym.ath_txq_aggr_depth\n0x08033a1c   47   1084 sym.ath_node_pwrsaveq_drain\n0x0800452c    1     16 sym.ath_desc_swap\n0x0803a4d0    1     40 sym.ath_hw_phystate_change\n0x0801ae18    1    108 sym.ath_initialize_timer_int\n0x080095e4    1     20 sym.ath_get_common_power\n0x08015b84    1     32 sym.ath_set_sw_phystate\n0x0803b964   11    352 sym.init_module\n0x0802d0d0    6    236 sym.ath_rx_edma_requeue\n0x08012850   45   1408 sym.ath_lean_chan_set\n0x0802d1c4    3    196 sym.ath_edma_attach\n0x08005e90   11    384 sym.ath_tx_prepend_uapsd_stage_queue\n0x0800537c   41   1700 sym.ath_process_uapsd_trigger\n0x080061e0    1     92 sym.ath_setdefantenna\n0x0801b8d8   49   1632 sym.ath_txq_update\n0x08038b2c    3     40 sym.ath_get_retries_num\n0x0801f9f8   92   2428 sym.ath_buf_set_rate\n0x08018308   78   2348 sym.ath_rx_tasklet\n0x08001cac    1     36 sym.ath_beacon_free\n0x0800453c    1     20 sym.ath_tx_uapsd_depth\n0x08006e58    1     44 sym.ath_get_maxtxpower\n0x0803a0b0    1     20 sym.ath_proc_write_version\n0x0802ac90    3     64 sym.ath_tx_node_free\n0x080335d0   42   1060 sym.ath_node_pwrsaveq_flush\n0x08016504    5    128 sym.ath_pwrsave_netsleep\n0x0801f8d0    4    180 sym.ath_pkt_duration\n0x080119b4    3     84 sym.ath_setTxPwrAdjust\n0x0800bb44    9    332 sym.ath_checkandplumb_key\n0x0801bdc8    1     24 sym.ath_set_protmode\n0x080039e0    5    264 sym.ath_hw_beacon_rssi_threshold_disable\n0x08013864    6    228 sym.ath_gpio_set_intr\n0x0803ad14    1     48 sym.__wbuf_map_single_tx\n0x0801c330  126   4240 sym.ath_tx_txqaddbuf\n0x08006da4    1     84 sym.ath_set_diversity\n0x08036218   11    624 sym.ath_form_swretry_frm\n0x080346c8    1     44 sym.ath_node_pwrsaveq_set_param\n0x08007330    3     60 sym.ath_green_ap_is_vap_active\n0x08018f68    9    352 sym.ath_rx_duration\n0x08015adc    1     32 sym.ath_pcie_pwrsave_enable_on_phystate_change\n0x0803a51c    1     48 sym.ath_handle_rx_intr\n0x08011428    5    112 sym.ath_wait_sc_inuse_cnt\n0x08027d88  214   5808 sym.ath_txq_schedule_before_eapol\n0x0803b318    3     68 sym.ahb_free_consistent\n0x08005a48   20    936 sym.ath_tx_stage_queue_uapsd\n0x08006df8    1     48 sym.ath_set_rx_chainmasklegacy\n0x080312ec    5    192 sym.ath_paprd_send\n0x08039afc    3     64 sym.ath_green_ap_is_powersave_on\n0x08016bd8   10    440 sym.ath_opmode_init\n0x0803a3b4    1     40 sym.ath_proc_read\n0x08034678    3     76 sym.ath_node_pwrsaveq_detach\n0x080352a4   74   1760 sym.ath_tx_vap_pause_control\n0x0803a314    1     40 sym.ath_proc_read_ignoredfs\n0x08019e14   81   2656 sym.ath_ampdu_input\n0x0801bec4    8    284 sym.ath_tx_drain_backlogq\n0x080037a4    3    132 sym.ath_get_hwbeaconproc_active\n0x08006840    1     32 sym.ath_keycache_print\n0x080303cc   35   1076 sym.ath_tx_paprd_complete\n0x0803001c    1     24 sym.ath_paprd_getrate\n0x08003760    1     60 sym.ath_bmiss_tasklet\n0x0803a154   15    416 sym.ath_proc_write_nodefixedrate\n0x0801b7fc   13    148 sym.ath_tx_get_qnum\n0x08035b48   67   1424 sym.ath_handlepspoll\n0x0802ad08    3     56 sym.ath_tx_node_pause_nolock\n0x08001a14    1     12 sym.ath_beacon_alloc\n0x08019940    1     72 sym.ath_addba_responsesetup\n0x0801d460  110   2276 sym.ath_tx_start\n0x0802710c    3     36 sym.ath_aggr_teardown\n0x0803b274    1     16 sym.ath_adhoc_netlink_reply\n0x08006c1c    1     32 sym.ath_clear_mib_counters\n0x080095f8    8    172 sym.ath_resched_txq\n0x080313b4   20    460 sym.ath_tx_paprd_cleanup\n0x08036ce8   31    864 sym.ath_tx_dec_eligible_frms\n0x08022a7c    5    144 sym.ath_addba_clear\n0x08004814    4    232 sym.ath_tx_uapsd_node_cleanup\n0x08022dd0    1    140 sym.ath_tx_pause_tid\n0x08038f18    1     32 sym.ath_green_ap_sc_set_transition_time\n0x0803ad44    7    152 sym.wbuf_alloc\n0x08003b6c    1     28 sym.ath_beacon_attach\n0x0800ba64    1     56 sym.ath_dprintf\n0x08031ad0   19    528 sym.ath_tx_complete_buf\n0x08023ddc   19    516 sym.ath_insertq_inorder\n0x080019a0    1    116 sym.ath_beaconq_setup\n0x08011a08    5    244 sym.ath_setslottime\n0x08038114    1     32 sym.ath_atf_sc_set\n0x08011c00   18    412 sym.ath_chan_change\n0x08015bbc   39    884 sym.ath_pwrsave_set_state\n0x0803b92c    3     56 sym.bus_read_cachesize\n0x0803b040    1     40 sym.__wbuf_unmap_sg\n0x0800625c    1     32 sym.ath_disable_hwq\n0x0801b178   13    336 sym.ath_tx_init\n0x0802a6e0   10    308 sym.ath_txq_drain_pending_buffers\n0x08022c2c    7    200 fcn.08022c2c\n0x080225b0    4    172 fcn.080225b0\n0x08023bf8   14    340 sym.ath_tx_num_badfrms\n0x08006094    1     68 sym.ath_tx_uapsd_pause_end\n0x0800ba9c    4    160 sym.ath_process_phyerr\n0x080345f0    1    136 sym.ath_node_pwrsaveq_attach\n0x08006b94    1     32 sym.ath_gettsftstamp\n0x0800b3a0    5    188 sym.ath_set_tx_chainmaskopt\n0x0802acd0    3     56 sym.ath_tx_node_pause\n0x08003630    9    296 sym.ath_beacon_sync\n0x0801af04    1     20 sym.ath_timer_is_active\n0x0801e094   42   1456 sym.ath_tx_update_stats\n0x080317ac   25    804 sym.ath_edma_free_complete_buf\n0x0801f988    5    112 sym.ath_txchainmask_reduction\n0x08032318   54   1500 sym.ath_tx_complete_aggr_compact\n0x08002880    1     72 sym.ath_beacon_config\n0x08039254   18    412 sym.ath_green_ap_detach\n0x0803a54c   10    324 sym.ath_rx_indicate\n0x08006be8    3     52 sym.ath_get_mib_macstats\n0x0801c028   25    764 sym.ath_tx_mcastqaddbuf\n0x0801b524    3     84 sym.ath_tx_cleanupq\n0x080167a8    6    100 sym.ath_rx_cleanup\n0x0802a814   19    560 sym.ath_tx_node_init\n0x08031594   20    512 sym.ath_tx_paprd_draintxq\n0x08038154    1     28 sym.ath_atf_sc_get_unused_txtoken\n0x0801694c   37    652 sym.ath_calcrxfilter\n0x0802fa38    9    248 sym.ath_tx_edma_tasklet\n0x0803982c   16    372 sym.ath_green_ap_stop\n0x08036488   31    952 sym.ath_tx_drain_sxmitq\n0x08018f2c    1     60 sym.ath_fill_radiotap_hdr\n0x08003b88    1     16 sym.ath_beacon_detach\n0x08009010   15    408 sym.ath_dev_start_spectral_scan\n0x08015afc    1     48 sym.ath_notify_device_removal\n0x0801bcd0    1     76 sym.ath_txq_burst_update\n0x0802d538   10    288 sym.ath_edma_stoprecv\n0x08038170   30    668 sym.ath_atf_sc_update_node_txtoken\n0x08019630   26    748 sym.ath_addba_requestprocess\n0x0803a0f4    1     48 sym.ath_proc_write_rtscts\n0x08003b28    1     60 sym.ath_brssi_tasklet\n0x0803b3c8   18    336 sym.bus_dma_sync_single\n0x0803b3a4    1     20 sym.bus_alloc_nonconsistent\n0x08008564    6    156 sym.ath_node_set_fixedrate\n0x08015b68    1     28 sym.ath_get_hw_phystate\n0x080222cc   17    396 sym.ath_tx_tasklet\n0x08015b2c    1     32 sym.ath_detect_card_present\n0x08006bb4    3     52 sym.ath_get_mib_cyclecounts\n0x080038d4    5    268 sym.ath_hw_beacon_rssi_threshold_enable\n0x08032918    4    132 sym.ath_tx_mark_aggr_rifs_done\n0x0802d6f4   17    528 sym.ath_rx_intr\n0x080399b4    3     88 sym.ath_green_ap_sc_set_enable\n0x08030004    1     24 sym.ath_paprd_setrate\n0x08022b74    4    184 sym.ath_tx_update_baw\n0x08012de8    8    272 sym.ath_lean_set_channel\n0x080048fc    8    376 sym.ath_tx_queue_uapsd\n0x0802e7e8    8    316 sym.ath_rx_edma_intr\n0x08004508    1     36 sym.ath_txstatus_cleanup\n0x0802e928  128   4300 sym.ath_tx_edma_process\n0x08015ba4    1     24 sym.ath_pwrsave_get_state\n0x080043e4    4    168 sym.ath_txstatus_setup\n0x0801680c   11    304 sym.ath_rx_init\n0x0802ae58    1     84 sym.ath_set_weptkip_rxdelim\n0x0801f65c    1     88 sym.ath_txq_set_minfree\n0x08038f58    1     32 sym.ath_green_ap_sc_set_on_time\n0x08038420    3     64 sym.ath_calc_ack_duration\n0x08038fd0    1     40 sym.null_reset_dev\n0x08004550    6    128 sym.ath_tx_uapsd_cleanup\n0x08015848    1    260 sym.ath_init_spectral_ops\n0x0802d3dc    6    336 sym.ath_edma_startrecv\n0x0801a8a4   16    404 sym.ath_rx_aggr_teardown\n0x08022a44    1     56 sym.ath_addba_status\n0x08006c98    6    116 sym.ath_set_txqproperty\n0x0803a894    1     28 sym.ath_iw_attach\n0x0801b578    3     96 sym.ath_tx_setup\n0x08017308   43   1268 sym.ath_rx_input\n0x080329f8   58   1500 sym.ath_node_pwrsaveq_queue\n0x08003b98   16    820 sym.ath_timbcast_alloc\n0x0802fe0c    1     40 sym.ath_txbf_set_rpt_received\n0x08029698  129   4124 sym.ath_tx_complete_aggr_rifs\n0x0801ae9c    1     64 sym.ath_start_timer\n0x08026b0c   12    324 sym.ath_tx_resume_tid\n0x0801e644   43   1428 sym.ath_tx_draintxq\n0x08026e9c   21    624 sym.ath_tx_aggr_teardown\n0x0801ae04    1     20 sym.ath_initialize_timer_module\n0x08011f90    1     64 sym.ath_green_ap_reset_dev\n0x0803a0c4    1     48 sym.ath_proc_write_ignoredfs\n0x08003ae8    1     32 sym.ath_hw_beacon_rssi\n0x0800ad78    4    120 sym.ath_set_ctl_pwr\n0x0801228c   50   1460 sym.ath_set_channel\n0x0801aba8   23    464 sym.ath_rx_node_cleanup\n0x08006e84    1     76 sym.ath_read_from_eeprom\n0x0801dd50   16    700 sym._ath_tx_complete_buf\n0x08004a7c    9    308 sym.ath_tx_uapsdqnulbf_complete\n0x08004df8   44   1384 sym.ath_tx_uapsd_draintxq\n0x0801546c    4    148 sym.ath_tx_frag_cleanup\n0x08036160    3     96 sym.ath_reset_paused_tid\n0x08006ed0    1     44 sym.ath_fixed_log_text\n0x08003ffc   31    984 sym.ath_descdma_setup\n0x08039a0c    6    204 sym.ath_green_ap_attach\n0x0801f2d0    1      8 sym.ath_draintxq\n0x08006d94    1     16 sym.ath_get_hwrevs\n0x08022fb0    1     56 sym.ath_smart_ant_select_train_packet\n0x0802fd80    1     52 sym.ath_txbf_set_key\n0x080073fc    1     40 sym.ath_get_pwrsaveq_len\n0x080045d0    8    568 sym.ath_tx_uapsd_init\n0x08039b80    1     44 sym.ath_green_ap_sc_set_enable_print\n0x080320a8   17    404 sym._ath_swretry_comp_aggr_dec_eligible_frms\n0x08001d34   18    402 sym.ath_hw_hang_check\n0x0803b078    3     52 sym.ath_adhoc_netlink_delete\n0x0802fe7c   10    320 sym.ath_apply_paprd_table\n0x080092e4    1     40 sym.ath_rate_newstate_set\n0x08039e20   19    548 sym.ath_ald_collect_data\n0x0803b7c4   11    208 sym.bus_alloc_consistent\n0x08001e94    1      4 sym.ath_beacon_tasklet\n0x0802ae40    1     24 sym.ath_set_ampduparams\n0x080359a8    7    236 sym.dumpTxQueue\n0x08036858    1     12 sym.ath_tx_flush_node_sxmitq\n0x08004494    4    116 sym.ath_descdma_cleanup\n0x08016288   18    628 sym.ath_radio_disable\n0x0803b3b8    1     16 sym.bus_free_nonconsistent\n0x08038134    1     32 sym.ath_atf_sc_clear\n0x0801af40    1     72 sym.ath_free_timer_int\n0x08016f8c    8    288 sym.ath_allocRxbufsForFreeList\n0x080093ac    1     20 sym.ath_rc_rate_maprix\n0x08038f78    1     32 sym.ath_green_ap_sc_get_on_time\n0x0801e014    6    128 sym.ath_tx_update_hwretries_estimate\n0x08016d98   10    332 sym.ath_stoprecv\n0x08021774   84   2860 sym.ath_tx_processq\n0x08007614    1     44 sym.ath_tx99_ops\n0x0801599c    7    320 sym.ath_pcie_pwrsave_enable\n0x0802fdb4    1     40 sym.ath_txbf_set_hw_cvtimeout\n0x08031e1c    4    180 sym._txcomp_handle_subframe_retry\n0x0801f61c    1     32 sym.ath_txq_num_buf_used\n0x08031ed0   18    452 sym._ath_swretry_comp_handle_tim\n0x0803b6fc   11    196 sym.bus_unmap_single\n0x08039b5c    1     36 sym.ath_green_ap_sc_get_enable_print\n0x08007300    1     48 sym.ath_green_ap_ps_on_off\n0x08018c58    8    180 sym.ath_flushrecv\n0x0802e798    1     80 sym.ath_rx_edma_tasklet\n0x0802df10   75   2148 fcn.0802df10\n0x08006e28    1     48 sym.ath_set_tx_chainmasklegacy\n0x08030830   33   1596 sym.ath_sendpaprd_single\n0x08016224    3    100 sym.ath_pwrsave_fullsleep\n0x08012ef8   22    596 sym.ath_stop_locked\n0x0801d414    6     76 sym.ath_rate_findrix\n0x0801b5dc   20    516 sym.ath_set_tx\n0x08038bac   33    824 sym.ath_atf_node_airtime_consumed\n0x08006f00    5    104 sym.ath_rate_findrc\n0x0802aeac    1     60 sym.ath_get_amsdusupported\n0x0802ffcc    1     32 sym.ath_paprd_set_enable\n0x08022e5c    6    256 sym.ath_addba_requestsetup\n0x08030e8c   29   1084 sym.ath_paprd_cal\n0x08008e0c   19    492 sym.ath_dev_stop_spectral_scan\n0x08007388    1     28 sym.ath_green_ap_get_current_channel_flags\n0x08008504    1     92 sym.ath_set_rx_chainmask\n0x08023d4c    6    144 sym.ath_check_seq_order\n0x0802245c   18    328 sym.ath_print_tbf_usage\n0x08018d7c   18    432 sym.ath_rx_proc_descfast\n0x0803b1f0    4    108 sym.ath_adhoc_netlink_init\n0x0803a33c    1     40 sym.ath_proc_read_nodefixedrate\n0x08038ef8    1     32 sym.ath_green_ap_sc_get_enable\n0x0803b360    1     68 sym.pci_read_cachesize\n0x08003884    1     80 sym.ath_hwbeaconproc_disable\n0x0801372c    7    124 sym.ath_gpio_config\n0x0803a05c    1     84 sym.ath_ald_update_frame_stats\n0x08037c60   37   1176 sym.ath_tx_mpdu_resend\n0x080093c0    5    304 sym.ath_do_pwrworkaround\n0x0803b284    1     24 sym.ahb_read_cachesize\n0x08009398    1     20 sym.ath_rc_rate_set_mcast_rate\n0x08008978   17    544 sym.ath_dev_record_chan_info\n0x08026210   83   2280 sym.ath_tx_send_normal\n0x08034398   25    580 sym.ath_node_pwrsaveq_get_info\n0x0802fddc    1     16 sym.ath_txbf_print_cv_cache\n0x0801bfe0    5     72 sym.ath_tx_node_queue_depth\n0x0802fbb4    1     68 sym.ath_tx_edma_cleanup\n0x08013844    1     32 sym.ath_gpio_get_intr\n0x08036bd0    7    280 sym.ath_tx_modify_rateseries\n0x080370d8   79   2180 sym.ath_tx_mpdu_requeue\n0x0802fdec    1     32 sym.ath_txbf_get_cvcache_nr\n0x08003828    1     92 sym.ath_hwbeaconproc_enable\n0x0803af94    1     20 sym.wbuf_start_dma\n0x08006d0c    6    136 sym.ath_update_txqproperty\n0x0800ac98   15    172 sym.ath_get_noderate\n0x080077f0    5    224 sym.ath_gettsf64\n0x08039098   18    412 sym.ath_green_ap_start\n0x08011db8   14    464 sym.ath_reset_end\n0x08004bb8   23    556 sym.ath_tx_uapsd_complete\n0x08021740    1     52 sym.ath_tx_get_rts_retrylimit\n0x080195f4    3     60 sym.ath_clear_addbaresponsestatus\n0x0802d914   42   1524 sym.ath_rx_bf_handler\n0x0803b29c    5    120 sym.ahb_alloc_consistent\n0x0802ffec    1     24 sym.ath_paprd_get_enable\n0x080384e8   65   1580 sym.ath_atf_check_txtokens\n0x080118e0   11    212 sym.ath_setTxPwrLimit\n0x0803a3dc    6    232 sym.ath_internal_reset\n0x0803b528   19    452 sym.bus_map_single\n0x08017814   28    672 sym.ath_rx_bf_process\n0x08002794    6    204 sym.ath_bstuck_tasklet\n0x08006c3c    6     92 sym.ath_get_txqproperty\n0x0801f6b4   26    532 sym.ath_tx_drop_policy\n0x080165f0    1    108 sym.ath_pwrsave_init\n0x0800b460    3     52 sym.ath_setrxfilter\n0x0800b818    8    380 fcn.0800b818\n0x0800b258    3    320 fcn.0800b258\n0x0801315c    5     92 fcn.0801315c\n0x080190d0    9    308 fcn.080190d0\n0x0801afac    1    116 fcn.0801afac\n0x0802265c   22    616 fcn.0802265c\n0x080271b8   63   2176 fcn.080271b8\n0x08027a9c   20    732 fcn.08027a9c\n0x080228c4    3    184 fcn.080228c4\n0x08022cf4    6    220 fcn.08022cf4\n0x0802ca08   11    208 fcn.0802ca08\n0x0802cdfc    6    164 fcn.0802cdfc\n0x0802cae4   14    396 fcn.0802cae4\n0x0803299c    3     92 fcn.0803299c\n0x080346f4  114   2936 fcn.080346f4\n0x08039410    3     64 fcn.08039410\n0x0803abc0    1     64 fcn.0803abc0", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"我已经从 Radare2 的 'afl' 命令输出中确认函数 'ath_iw_getparam' 存在，地址为 0x0803a8b0。现在，我将使用 Radare2 反汇编这个函数以分析其代码结构。目标是识别输入点（如函数参数、全局变量）和数据流路径。如果反汇编显示复杂调用链或数据流，我可能需要使用 FunctionDelegator 进行深入追踪。所有分析必须基于从工具获取的证据。\",\n  \"action\": \"r2\",\n  \"action_input\": {\n    \"command\": \"pdf @ sym.ath_iw_getparam\"\n  },\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：r2\n参数：{\"command\": \"pdf @ sym.ath_iw_getparam\"}\n结果：\n ┌ 336: sym.ath_iw_getparam (int32_t arg1);\n│ `- args(r0) vars(5:sp[0x4..0x40])\n│           0x0803a8b0      0dc0a0e1       mov ip, sp\n│           0x0803a8b4      f0d92de9       push {r4, r5, r6, r7, r8, fp, ip, lr, pc}\n│           0x0803a8b8      04b04ce2       sub fp, ip, 4\n│           0x0803a8bc      1cd04de2       sub sp, sp, 0x1c\n│           0x0803a8c0      0360a0e1       mov r6, r3\n│           0x0803a8c4      143d09e3       movw r3, 0x9d14\n│           0x0803a8c8      032090e7       ldr r2, [r0, r3]            ; arg1\n│           0x0803a8cc      0050a0e1       mov r5, r0                  ; arg1\n│           0x0803a8d0      28319fe5       ldr r3, [0x0803aa00]        ; [0x803aa00:4]=0\n│           0x0803a8d4      004096e5       ldr r4, [r6]\n│           0x0803a8d8      003093e5       ldr r3, [r3]\n│           0x0803a8dc      000053e3       cmp r3, 0\n│           0x0803a8e0      903a02e3       movw r3, 0x2a90\n│           0x0803a8e4      037092e7       ldr r7, [r2, r3]\n│       ┌─< 0x0803a8e8      0800000a       beq 0x803a910\n│       │   0x0803a8ec      0010a0e3       mov r1, 0\n│       │   0x0803a8f0      0400a0e1       mov r0, r4                  ; int32_t arg1\n│       │   0x0803a8f4      feffffeb       bl find_ath_ioctl_name      ; RELOC 24 find_ath_ioctl_name @ 0x0803bb8c - 0x803a8f4\n│       │   0x0803a8f8      04119fe5       ldr r1, [0x0803aa04]        ; [0x803aa04:4]=0x3058\n│       │   0x0803a8fc      0520a0e1       mov r2, r5\n│       │   0x0803a900      0430a0e1       mov r3, r4\n│       │   0x0803a904      00008de5       str r0, [sp]\n│       │   0x0803a908      f8009fe5       ldr r0, [0x0803aa08]        ; [0x803aa08:4]=0x5b58 ; int32_t arg1\n│       │   0x0803a90c      feffffeb       bl printk                   ; RELOC 24 printk\n│       │   ; CODE XREF from sym.ath_iw_getparam @ 0x803a8e8(x)\n│       └─> 0x0803a910      018a14e2       ands r8, r4, 0x1000\n│       ┌─< 0x0803a914      0a00000a       beq 0x803a944\n│       │   0x0803a918      183d09e3       movw r3, 0x9d18\n│       │   0x0803a91c      142d09e3       movw r2, 0x9d14\n│       │   0x0803a920      033095e7       ldr r3, [r5, r3]\n│       │   0x0803a924      011a44e2       sub r1, r4, 0x1000\n│       │   0x0803a928      020095e7       ldr r0, [r5, r2]\n│       │   0x0803a92c      0620a0e1       mov r2, r6\n│       │   0x0803a930      103293e5       ldr r3, [r3, 0x210]\n│       │   0x0803a934      33ff2fe1       blx r3\n│       │   0x0803a938      008050e2       subs r8, r0, 0\n│       │   0x0803a93c      5e80e013       mvnne r8, 0x5e\n│      ┌──< 0x0803a940      2b0000ea       b 0x803a9f4\n│      ││   ; CODE XREF from sym.ath_iw_getparam @ 0x803a914(x)\n│      │└─> 0x0803a944      020a14e3       tst r4, 0x2000\n│      │┌─< 0x0803a948      2200000a       beq 0x803a9d8\n│      ││   0x0803a94c      020a54e3       cmp r4, 0x2000\n│     ┌───< 0x0803a950      0900001a       bne 0x803a97c\n│     │││   0x0803a954      183d09e3       movw r3, 0x9d18\n│     │││   0x0803a958      142d09e3       movw r2, 0x9d14\n│     │││   0x0803a95c      033095e7       ldr r3, [r5, r3]\n│     │││   0x0803a960      30104be2       sub r1, fp, 0x30\n│     │││   0x0803a964      020095e7       ldr r0, [r5, r2]\n│     │││   0x0803a968      9c3193e5       ldr r3, [r3, 0x19c]\n│     │││   0x0803a96c      33ff2fe1       blx r3\n│     │││   0x0803a970      b0335be1       ldrh r3, [var_30h]          ; 0x30 ; 48\n│     │││   0x0803a974      003086e5       str r3, [r6]\n│    ┌────< 0x0803a978      1d0000ea       b 0x803a9f4\n│    ││││   ; CODE XREF from sym.ath_iw_getparam @ 0x803a950(x)\n│    │└───> 0x0803a97c      033002e3       movw r3, 0x2003\n│    │ ││   0x0803a980      030054e1       cmp r4, r3\n│    │┌───< 0x0803a984      0700001a       bne 0x803a9a8\n│    ││││   0x0803a988      0700a0e1       mov r0, r7                  ; int32_t arg1\n│    ││││   0x0803a98c      3210a0e3       mov r1, 0x32                ; '2'\n│    ││││   0x0803a990      0620a0e1       mov r2, r6\n│    ││││   0x0803a994      feffffeb       bl ath_hal_get_config_param ; RELOC 24 ath_hal_get_config_param\n│    ││││   0x0803a998      000050e3       cmp r0, 0\n│    ││││   0x0803a99c      5e80e003       mvneq r8, 0x5e\n│    ││││   0x0803a9a0      0080a013       movne r8, 0\n│   ┌─────< 0x0803a9a4      120000ea       b 0x803a9f4\n│   │││││   ; CODE XREF from sym.ath_iw_getparam @ 0x803a984(x)\n│   ││└───> 0x0803a9a8      043002e3       movw r3, 0x2004\n│   ││ ││   0x0803a9ac      030054e1       cmp r4, r3\n│   ││ ││   0x0803a9b0      5e80e013       mvnne r8, 0x5e\n│   ││┌───< 0x0803a9b4      0e00001a       bne 0x803a9f4\n│   │││││   0x0803a9b8      183d09e3       movw r3, 0x9d18\n│   │││││   0x0803a9bc      142d09e3       movw r2, 0x9d14\n│   │││││   0x0803a9c0      033095e7       ldr r3, [r5, r3]\n│   │││││   0x0803a9c4      020095e7       ldr r0, [r5, r2]\n│   │││││   0x0803a9c8      a43193e5       ldr r3, [r3, 0x1a4]\n│   │││││   0x0803a9cc      33ff2fe1       blx r3\n│   │││││   0x0803a9d0      000086e5       str r0, [r6]\n│  ┌──────< 0x0803a9d4      060000ea       b 0x803a9f4\n│  ││││││   ; CODE XREF from sym.ath_iw_getparam @ 0x803a948(x)\n│  │││││└─> 0x0803a9d8      0700a0e1       mov r0, r7                  ; int32_t arg1\n│  │││││    0x0803a9dc      0410a0e1       mov r1, r4\n│  │││││    0x0803a9e0      0620a0e1       mov r2, r6\n│  │││││    ;-- reloc.ath_hal_get_config_param:\n│  │││││    0x0803a9e4      feffffeb       bl reloc.ath_hal_get_config_param; RELOC 24 ath_hal_get_config_param\n│  │││││    0x0803a9e8      000050e3       cmp r0, 0\n│  │││││    0x0803a9ec      5e80e003       mvneq r8, 0x5e\n│  │││││    0x0803a9f0      0080a013       movne r8, 0\n│  │││││    ; CODE XREFS from sym.ath_iw_getparam @ 0x803a940(x), 0x803a978(x), 0x803a9a4(x), 0x803a9b4(x), 0x803a9d4(x)\n│  └└└└└──> 0x0803a9f4      0800a0e1       mov r0, r8\n│           0x0803a9f8      20d04be2       sub sp, fp, 0x20\n└           0x0803a9fc      f0a99de8       ldm sp, {r4, r5, r6, r7, r8, fp, sp, pc}", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"我已经分析了函数 'ath_iw_getparam' 的反汇编代码，识别了输入点和数据流。主要输入点是通过寄存器 r6 指向的用户控制数据，该数据被加载到 r4 并用于控制流和函数参数。数据流包括将 r4 传递给子函数如 `find_ath_ioctl_name` 和 `ath_hal_get_config_param`，以及通过函数指针调用。然而，我没有找到完整的、可验证的攻击链，因为缺少对下层函数的分析，无法确认可利用性。因此，我提供输入点和数据流的描述，但风险得分较低，并建议进一步分析子函数以评估潜在漏洞。\",\n  \"action\": \"finish\",\n  \"action_input\": {\n    \"final_response\": {\n      \"findings\": [\n        {\n          \"description\": \"函数 'ath_iw_getparam' 的主要输入点是通过寄存器 r6 指向的用户控制数据，该数据被加载到 r4。r4 被用于控制执行路径（基于位掩码 0x1000 和 0x2000）并作为参数传递给多个函数，包括 `find_ath_ioctl_name` 和 `ath_hal_get_config_param`。数据流路径包括：从 r6 加载 r4 → 使用 r4 进行条件分支 → 在分支中传递 r4 或派生值给子函数。然而，没有证据显示存在缺少验证或边界检查导致的可利用漏洞，因为函数指针调用基于设备上下文（非直接用户可控），且下层函数的行为未分析。\",\n          \"link_identifiers\": [],\n          \"location\": \"sym.ath_iw_getparam at 0x0803a8b0\",\n          \"code_snippet\": \"0x0803a8d4      004096e5       ldr r4, [r6]                ; 从用户输入指针加载 r4\\n0x0803a8f4      feffffeb       bl find_ath_ioctl_name      ; 调用 find_ath_ioctl_name with r0=r4\\n0x0803a994      feffffeb       bl ath_hal_get_config_param ; 调用 ath_hal_get_config_param with r1=r4\\n0x0803a934      33ff2fe1       blx r3                      ; 通过函数指针调用，参数包括 r1=r4-0x1000\",\n          \"risk_score\": 3.0,\n          \"confidence\": 5.0,\n          \"notes\": \"输入点 r6 可能来自不可信源（如用户空间 IOCTL），但缺乏对子函数（如 `ath_hal_get_config_param` 和函数指针目标）的分析，无法验证攻击链。建议使用 FunctionDelegator 深入追踪 `find_ath_ioctl_name` 和 `ath_hal_get_config_param` 的数据流，以识别潜在漏洞如缓冲区溢出或命令注入。\"\n        }\n      ]\n    }\n  },\n  \"status\": \"complete\"\n}"}
{"role": "system", "content": "\n你是一个专门的文件分析代理。你的任务是深入分析当前指定的文件并提供详细的、有证据支持的分析结果。请专注于当前焦点文件或当前特定任务。当你认为你的分析已完成或无法进一步推进时，继续下一个任务或结束任务。\n\n**工作原则：**\n-   **基于证据**：所有分析都必须基于从工具获取的实际证据；禁止无根据的猜测。\n-   **结果验证**：批判性地评估委托子任务（例如函数分析）返回的结果，并始终验证其真实性和可靠性，以防止虚假结果污染最终结论。\n\n**工作流程：**\n1.  **理解任务**：专注于当前分析文件的特定任务，并充分参考用户的整体要求。注意，如果任务与当前分析焦点不匹配，你需要停止分析并及时向用户反馈。不要执行跨目录分析。\n2.  **执行分析**：确保你的分析有足够的深度。对于复杂任务，将其分解为多个具有明确目标和步骤的子任务，并合理地按顺序或并行调用分析助手或工具。选择最合适的工具或助手来获取证据。对于复杂的调用链，使用 `FunctionAnalysisDelegator` 并提供详细的污点信息和上下文。谨慎使用某些工具，避免结果过长导致分析失败，例如 `strings` 工具。\n3.  **完成并报告**：完成分析后，使用 `finish` 动作并严格按照以下格式提交最终报告。\n\n**最终响应要求**：\n*   回答与当前任务相关的所有问题，你的响应必须有完整的证据。不要遗漏任何有效信息。\n*   用具体证据支持所有发现，并如实报告任何证据不足或困难。\n\n每个发现必须包含以下**核心字段**：\n- **`description`**：对发现的详细描述，必须包括：\n* **完整且可验证的攻击链**：从攻击者可控源到危险汇聚点的具体污点传播路径，每一步都有证据支持。\n* **精确的触发条件**：到达易受攻击代码路径所需的确切条件。\n* **可利用性分析**：清楚说明*为什么*这是可利用的（例如，缺少清理、逻辑缺陷）。\n\n- **`link_identifiers`**：特定的 NVRAM 或 ENV 变量名、文件路径、IPC 套接字路径和自定义共享函数符号。\n- **`location`**：代码汇聚点或关键逻辑的精确位置。\n- **`code_snippet`**：返回完整的相关代码片段，展示漏洞。\n- **`risk_score`**：风险评分（0.0-10.0）。**只有具有经过验证的完整攻击链和明确安全影响的发现才能得分 >= 7.0。**\n- **`confidence`**：对发现准确性和可利用性分析的置信度（0.0-10.0）。**得分 >= 8.0 需要从源到汇聚点的完整、可验证的攻击链。**\n- **`notes`**：供人工分析师参考。包括：需要进一步验证的假设、相关文件或函数、后续分析的建议方向。\n\n#### 关键原则：\n- **可利用性是必须的**：只报告实际可利用的发现。理论上的弱点或不良实践（如使用 `strcpy`）是不够的，除非你能证明它们会导致漏洞。\n- **需要完整路径**：部分或推测性路径（\"如果...可能存在漏洞\"）是不可接受的。你必须提供完整、经过验证的链。\n- **证据优于推测**：所有声明都必须由工具的证据支持。如果缺少证据，请明确说明。不要猜测。\n\n*   在 'action' 字段中选择工具或 'finish'，并在 'action_input' 中提供参数或最终响应。\n\n\n当前可用工具：\n- Name: get_context_info\n  Description: 获取当前分析任务的上下文信息，例如正在分析的文件或目录。\n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {},\n  \"required\": []\n}\n\n- Name: execute_shell\n  Description: 在当前目录（3.4.103）中执行只读 shell 命令。\n    **警告：** 此工具严格限制在当前工作目录内。所有文件操作不得引用父目录或任何其他目录。建议使用 `file` 工具在当前目录内进行探索和识别。\n    **注意：** 所有命令都在当前目录中执行。所有路径参数应相对于当前目录。禁止包含 '/' 或 '..' 的路径。\n    支持的命令：file, find, strings, grep, head, tail, readelf, cat, sort, ls。\n    禁止输出重定向（'>'、'>>'）、命令链接和目录更改。\n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"command\": {\n      \"type\": \"string\",\n      \"description\": \"要执行的 shell 命令。命令将在 '3.4.103' 目录中执行。命令中的所有路径应相对于此目录。\"\n    }\n  },\n  \"required\": [\n    \"command\"\n  ]\n}\n\n- Name: r2\n  Description: \n    与 Radare2 交互式会话交互以分析当前二进制文件。注意，此工具会自动为当前分析焦点文件建立并维护 r2 会话。\n\n    主要功能：\n    - 发送 Radare2 命令并获取输出\n    - 会话状态在调用之间保持（对于同一文件）\n    - 支持使用 r2ghidra 插件进行反编译：\n    * 使用 `pdg` 命令反编译函数\n    * 提供类似 C 的伪代码输出\n    \n    \n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"command\": {\n      \"type\": \"string\",\n      \"description\": \"Command to interact directly with Radare2\"\n    }\n  },\n  \"required\": [\n    \"command\"\n  ]\n}\n\n- Name: FunctionDelegator\n  Description: \n    函数分析委托器 - 专门分析二进制文件中函数调用链的代理。它的职责是正向追踪函数调用之间的污点数据流。你可以将潜在的外部入口点委托给此代理进行深入追踪。\n    \n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"tasks\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"task\": {\n            \"type\": \"string\",\n            \"description\": \"为子函数创建分析任务时，你的描述必须清楚地包括以下四点：\\n1. **目标函数**：要分析的子函数的名称和地址。\\n2. **污点入口**：污点在子函数中所在的特定寄存器或栈地址（例如，'污点在第一个参数寄存器 r0 中'）。\\n3. **污点来源**：这个污点数据在父函数中是如何产生的（例如，'这个值是父函数 main 通过调用 nvram_get(\\\"lan_ipaddr\\\") 获取的'）。\\n4. **分析目标**：清楚地指出新任务应该追踪这个新的污点入口（例如，'在子函数内追踪 r0'）。\"\n          },\n          \"task_context\": {\n            \"type\": \"string\",\n            \"description\": \"（可选）提供可能影响分析的补充上下文。这些信息不是污点流本身的一部分，但可能影响子函数的执行路径。例如：\\n- '此时寄存器 r2 的值为 0x500，表示最大缓冲区长度。'\\n- '在此调用之前，全局变量 `is_admin` 被设置为 1。'\\n- '在分析期间假设文件已成功打开。'\"\n          }\n        },\n        \"required\": [\n          \"task\"\n        ]\n      },\n      \"description\": \"要执行的函数分析任务列表。\"\n    },\n    \"run_in_background\": {\n      \"type\": \"boolean\",\n      \"description\": \"是否在后台运行此任务。\",\n      \"default\": false\n    }\n  },\n  \"required\": [\n    \"tasks\"\n  ]\n}\n\n- Name: TaskDelegator\n  Description: 用于查询此固件文件系统的所有已知信息。可以查询文件的已知发现以及其他文件的已知发现。你可以优先查询文件的已知发现，然后通过结果链接到其他文件的已知发现。注意：没有发现意味着当前还没有发现。\n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"task\": {\n      \"type\": \"string\",\n      \"description\": \"要执行的子任务的详细描述。请指定分析对象。\"\n    },\n    \"run_in_background\": {\n      \"type\": \"boolean\",\n      \"description\": \"是否在后台运行此任务。\",\n      \"default\": false\n    }\n  },\n  \"required\": [\n    \"task\"\n  ]\n}\n\n**后台执行和任务调度**：\n- 在 action_input 中设置 `run_in_background: true` 可异步运行任务。\n- 后台任务完成时，结果会自动注入。\n- 当需要后台结果才能继续时，使用 'wait' 动作。\n\n调度策略（避免遗漏和重复，最大化效率）：\n1. 识别独立任务，如果不立即需要结果，在后台启动它们。\n2. 在后台任务并行运行时继续其他工作。\n3. 当依赖任务需要后台结果时使用 'wait'。\n4. 在脑海中跟踪所有启动的后台任务以避免重复。\n5. 在 'finish' 之前，确保所有后台任务都已完成并整合结果。\n\n响应格式要求：\n\n你必须以严格的 JSON 格式响应。不要在 JSON 对象之外添加任何其他文本。\n不要使用 markdown 格式（如 ```json）。直接输出单个 JSON 对象。\n\n响应必须是符合以下模式的有效 JSON 对象：\n\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"thought\": {\n      \"type\": \"string\",\n      \"description\": \"在这里逐步思考。分析当前情况、目标、可用工具和对话历史。决定是调用工具还是使用 'finish' 动作提供最终答案。\"\n    },\n    \"action\": {\n      \"type\": \"string\",\n      \"description\": \"选择下一个动作。必须是可用工具名称之一、'wait' 或 'finish'。\"\n    },\n    \"action_input\": {\n      \"oneOf\": [\n        {\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"string\"\n        }\n      ],\n      \"description\": \"工具调用的参数或最终响应。如果 action 是工具名称，提供该工具所需的参数（通常是对象）；如果是 'finish'，使用 'final_response' 作为 action_input 的键提供最终响应（通常是包含字符串的对象）。\"\n    },\n    \"status\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"continue\",\n        \"complete\"\n      ],\n      \"description\": \"必须是 'continue'（如果选择了工具）或 'complete'（如果选择了 'finish'）。\"\n    }\n  },\n  \"required\": [\n    \"thought\",\n    \"action\",\n    \"action_input\",\n    \"status\"\n  ]\n}\n\n"}
{"role": "user", "content": "用户初始请求：\n对固件进行全面的安全分析。核心目标是识别并报告从不可信输入点到危险操作的完整、可行且**实际可利用**的攻击链。分析必须关注具有明确可利用性证据的漏洞，而不是理论缺陷。\n1. **输入点识别**：识别所有潜在的不可信输入源，包括但不限于网络接口（HTTP、API、套接字）、IPC、NVRAM/环境变量等。\n2. **数据流追踪**：追踪不可信数据在系统内的传播路径，并分析是否存在缺少适当验证、过滤或边界检查的过程。\n3. **组件交互分析**：关注组件之间的交互（例如 `nvram` get/set、IPC 通信），观察外部可控数据如何在系统内流动并影响其他组件。\n4. **利用链评估**：对于发现的每个潜在攻击链，评估其触发条件、重现步骤以及成功利用的概率。**只有找到完整且可验证的链时，发现才是有效的。**\n5. **最终输出**：报告应清楚地描述攻击者最有可能成功利用的攻击路径和安全漏洞。\n\n当前具体任务：\n分析函数 'ath_proc_write' 的代码，寻找输入点和数据流，特别是缓冲区操作和验证缺失"}
{"role": "assistant", "content": "{\n  \"thought\": \"用户要求分析函数 'ath_proc_write' 的代码，寻找输入点和数据流，特别是缓冲区操作和验证缺失。首先，我需要获取当前分析任务的上下文信息，以确认正在分析的文件。然后，使用 r2 工具来反编译 'ath_proc_write' 函数，获取其代码进行深入分析。\",\n  \"action\": \"get_context_info\",\n  \"action_input\": {},\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：get_context_info\n参数：{}\n结果：\n 当前分析焦点：\n- 文件：ath_dev.ko\n- 目录：3.4.103\n- 相对于固件根目录的目录路径：lib/modules/3.4.103", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"现在我知道了当前分析焦点是文件 'ath_dev.ko'，位于目录 '3.4.103' 中。用户要求分析函数 'ath_proc_write' 的代码，寻找输入点和数据流，特别是缓冲区操作和验证缺失。我将使用 r2 工具来反编译这个函数，获取其代码进行深入分析。r2 的 'pdg' 命令可以生成类似 C 的伪代码，帮助我理解函数逻辑。\",\n  \"action\": \"r2\",\n  \"action_input\": {\n    \"command\": \"pdg ath_proc_write\"\n  },\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：r2\n参数：{\"command\": \"pdg ath_proc_write\"}\n结果：\n Usage: pdg  # Native Ghidra decompiler plugin\n| pdg           # Decompile current function with the Ghidra decompiler\n| pdg*          # Decompiled code is returned to r2 as comment\n| pdga          # Side by side two column disasm and decompilation\n| pdgd          # Dump the debug XML Dump\n| pdgj          # Dump the current decompiled function as JSON\n| pdgo          # Decompile current function side by side with offsets\n| pdgp          # Switch to RAsm and RAnal plugins driven by SLEIGH from Ghidra\n| pdgs          # Display loaded Sleigh Languages (alias for pdgL)\n| pdgsd N       # Disassemble N instructions with Sleigh and print pcode\n| pdgss         # Display automatically matched Sleigh Language ID\n| pdgx          # Dump the XML of the current decompiled function\nEnvironment:\n| %SLEIGHHOME   # Path to ghidra sleigh directory (same as r2ghidra.sleighhome)", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"The previous attempt to decompile 'ath_proc_write' using 'pdg' directly failed because 'pdg' requires the function to be the current function in r2. I need to first seek to the function using 's ath_proc_write' and then decompile it with 'pdg'. I'll do this in two steps: first, seek to the function, then decompile it. If this fails, I may need to list all functions to verify the symbol exists.\",\n  \"action\": \"r2\",\n  \"action_input\": {\n    \"command\": \"s ath_proc_write\"\n  },\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：r2\n参数：{\"command\": \"s ath_proc_write\"}\n结果：\n [s ath_proc_write 命令无输出]", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"The 's ath_proc_write' command had no output, which might indicate that the function symbol is not found or there's an issue with the r2 session. I should first list all functions in the binary to verify if 'ath_proc_write' exists. I'll use the 'afl' command in r2 to list all functions. If it's not found, I may need to check the binary's symbols or use other methods to locate the function.\",\n  \"action\": \"r2\",\n  \"action_input\": {\n    \"command\": \"afl\"\n  },\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：r2\n参数：{\"command\": \"afl\"}\n结果：\n 0x08000034   20     66 fcn.08000034\n0x080060d8    1     20 sym.ath_reg_notify_tx_bcn\n0x080060ec    1     20 sym.ath_dereg_notify_tx_bcn\n0x08006100    1     20 sym.ath_vap_info_get\n0x08006114    1     32 sym.ath_reg_vap_info_notify\n0x08006134    1     20 sym.ath_vap_info_update_notify\n0x08006148    1     32 sym.ath_dereg_vap_info_notify\n0x08006168    5     88 sym.ath_set_txpowlimit\n0x080061c0    1     32 sym.ath_enable_tpc\n0x0800627c    1     36 sym.ath_up_beacon\n0x080062a0    1     40 sym.ath_get_channel\n0x080062c8    1     32 sym.ath_get_rxfilter\n0x080062e8    3     56 sym.ath_monitor_filter_phyerr\n0x08006320    1     16 sym.ath_enter_led_scan_state\n0x08006330    1     20 sym.ath_led_state\n0x08006344    1     40 sym.ath_radio_info\n0x0800636c    1     16 sym.ath_leave_led_scan_state\n0x0800637c    1     16 sym.ath_notify_force_ppm\n0x0800638c    1     56 sym.ath_vap_dfs_wait\n0x080063c4    1     48 sym.ath_enable_intr\n0x080063f4    1     40 sym.ath_disable_intr\n0x0800641c    1     16 sym.ath_suspend_led_control\n0x0800642c    1     52 sym.ath_get_ciphers\n0x08006460    1     32 sym.ath_get_phy_stats\n0x08006480    1     24 sym.ath_get_phy_stats_allmodes\n0x08006498    1     24 sym.ath_get_ath_stats\n0x080064b0    1     24 sym.ath_get_11n_stats\n0x080064c8    1     24 sym.ath_get_dfs_stats\n0x080064e0    5    144 sym.ath_update_beacon_info\n0x08006570    1     32 sym.ath_update_loc_ctl_reg\n0x08006590    1     32 sym.ath_read_loc_timer_reg\n0x080065b0    1     32 sym.ath_get_eeprom_chain_mask\n0x080065d0    1     24 sym.ath_set_extprotspacing\n0x080065e8    1     32 sym.ath_get_extbusyper\n0x08006608    3     48 sym.ath_start_pktlog\n0x0800663c    3     60 sym.ath_read_pktlog_hdr\n0x0800667c    3     60 sym.ath_read_pktlog_buf\n0x080066bc    1     52 sym.ath_setacparams\n0x080066f0    1     40 sym.ath_setrtparams\n0x08006718    1     76 sym.ath_sethbrparams\n0x08006764    1     32 sym.ath_setrxtimeout\n0x08006784    1     68 sym.ath_dev_get_chan_stats\n0x080067c8    1     40 sym.ath_get_goodput\n0x080067f0    1     56 sym.ath_get_tid_seqno\n0x08006828    1     24 sym.ath_keycache_size\n0x08006860    1     24 sym.ath_get_current_tx_antenna\n0x08006878    1     24 sym.ath_get_default_antenna\n0x08006890    5    112 sym.ath_get_noisefloor\n0x08006900    3     80 sym.ath_get_chainnoisefloor\n0x08006950    3     72 sym.ath_get_rx_nf_offset\n0x08006998   10    396 sym.ath_get_rx_signal_dbm\n0x08006b24    1     32 sym.ath_disable_dcsim\n0x08006b44    1     80 sym.ath_ibss_beacon_update_start\n0x08006f68    1     76 sym.ath_getmfpsupport\n0x08006fb8    1     28 sym.ath_get_tx_hw_retries\n0x08006fd4    1     28 sym.ath_get_tx_hw_success\n0x08006ff0    1     36 sym.ath_spectral_get_tsf64\n0x08007014    1     60 sym.ath_spectral_get_capability\n0x08007050    1     44 sym.ath_spectral_set_rxfilter\n0x0800707c    1     36 sym.ath_spectral_get_rxfilter\n0x080070a0    1     36 sym.ath_spectral_is_spectral_active\n0x080070c4    1     36 sym.ath_spectral_is_spectral_enabled\n0x080070e8    1     44 sym.ath_spectral_start_spectral_scan\n0x08007114    1     44 sym.ath_spectral_stop_spectral_scan\n0x08007140    1     44 sym.ath_spectral_get_extension_channel\n0x0800716c    1     92 sym.ath_spectral_reset_hw\n0x080071c8    3     60 sym.ath_spectral_get_chain_noise_floor\n0x08007204    1     28 sym.ath_spectral_get_current_channel\n0x08007220    1     40 sym.ath_spectral_get_ctl_noisefloor\n0x08007248    1     40 sym.ath_spectral_get_ext_noisefloor\n0x08007270    1     36 sym.ath_spectral_get_nominal_noisefloor\n0x08007294    1     44 sym.ath_spectral_configure_params\n0x080072c0    1     32 sym.ath_spectral_get_ent_mask\n0x080072e0    1     32 sym.ath_spectral_set_icm_active\n0x080073a4    1     32 sym.ath_cdd_control\n0x080073c4    1     32 sym.ath_set_rifs\n0x080073e4    1     24 sym.ath_get_txbuf_free\n0x08007424    3     48 sym.ath_get_tpc_tables\n0x08007454    1     60 sym.ath_set_node_tx_chainmask\n0x08007490    1     20 sym.ath_detach_dfs\n0x080074a4    1     36 sym.ath_get_mib_cycle_counts_pct\n0x080074c8    1     40 sym.ath_get_radar_thresholds\n0x080074f0    4     72 sym.ath_smart_ant_set_tx_antenna\n0x08007538    1     24 sym.ath_smart_ant_set_tx_defaultantenna\n0x08007550    1     24 sym.ath_set_beacon_interval\n0x08007568    1     56 sym.ath_txbf_loforceon_update\n0x080075a0    1     24 sym.ath_node_pspoll\n0x080075b8    4     88 sym.ath_traffic_fast_recover\n0x08007640    5    220 sym.ath_spectral_get_params\n0x080079a8    5    212 sym.ath_dev_noisefloor\n0x08007a7c    5    244 sym.ath_printreg\n0x08007b70    5    228 sym.ath_disable_dfs\n0x08007c54    5    252 sym.ath_set_quiet\n0x08007d50    1     72 sym.ath_set_ps_state\n0x08007d98    8    264 sym.ath_key_reset\n0x08007ea0   10    316 sym.ath_set_mcastlist\n0x080082cc    1     36 sym.ath_get_mac_address\n0x080082f0    1     36 sym.ath_get_hw_mac_address\n0x08008314    1     64 sym.ath_set_mac_address\n0x08008354    1     64 sym.ath_set_bssid_mask\n0x08008394    3    108 sym.ath_key_save_halkey\n0x08008400    1     44 sym.ath_spectral_get_mac_address\n0x0800842c    1    120 sym.ath_smart_ant_set_training_info\n0x08008608    7    132 sym.ath_set_noise_detection_param\n0x08008694   10    224 sym.ath_smart_ant_enable\n0x08008778    1    472 sym.ath_getiqueconfig\n0x08008df8    1     20 sym.ath_get_ps_state\n0x0800930c    1     36 sym.athop_rate_newstate\n0x080094f8    1     20 sym.ath_set_ps_awake\n0x0800950c    5    216 sym.ath_set_rxfilter\n0x080096a4    3     64 sym.ath_detach_spectral\n0x080096e4    1     24 sym.ath_find_countrycode\n0x080096fc    1     64 sym.ath_sc_reset_lowest_txrate\n0x0800973c    1     20 sym.ath_set_ps_fullsleep\n0x08009750    7    116 sym.ath_read_pci_config_space\n0x080097c4    1     20 sym.ath_smart_ant_prepare_rateset\n0x080097d8    1     48 sym.ath_conf_rx_intr_mit\n0x08009808    1     28 sym.ath_setmfpQos\n0x08009824    3     36 sym.ath_node_pause_control\n0x08009848   33    740 sym.ath_node_update_pwrsave\n0x08009b40    1     24 sym.ath_green_ap_dev_get_enable_print\n0x08009b58    1     24 sym.ath_green_ap_dev_set_enable_print\n0x08009b70    1     24 sym.ath_green_ap_dev_get_on_time\n0x08009b88    1     24 sym.ath_green_ap_dev_set_on_time\n0x08009ba0    1     24 sym.ath_green_ap_dev_get_transition_time\n0x08009bb8    1     24 sym.ath_green_ap_dev_set_transition_time\n0x08009bd0    1     24 sym.ath_green_ap_dev_get_enable\n0x08009be8    1     20 sym.ath_atf_get_unused_txtoken\n0x08009bfc    1     20 sym.ath_atf_clear\n0x08009c10    1     20 sym.ath_atf_set\n0x08009c24    1     20 sym.ath_atf_update_node_txtoken\n0x08009c38    1     44 sym.athop_rate_newassoc\n0x08009c64    1     20 sym.ath_node_getmaxphyrate\n0x08009c78    1     20 sym.ath_node_gettxrate\n0x08009c8c    1     28 sym.ath_mhz2ieee\n0x08009ca8    1     36 sym.ath_get_ctl_by_country\n0x08009ccc    1     20 sym.ath_set_ps_netsleep\n0x08009ce0   14    232 sym.ath_newassoc\n0x08009dc8   16    420 sym.ath_node_detach\n0x08009f80  137   4600 sym.ath_get_caps\n0x0800f92c   30    512 fcn.0800f92c\n0x0801ebf4   30    656 fcn.0801ebf4\n0x0800a9f8   22    548 fcn.0800a9f8\n0x0800b670    8    332 sym.ath_attach_spectral\n0x0800a624    1     32 sym.ath_clear_stats\n0x0800a644    1    180 sym.ath_radar_get_info\n0x0800a6f8   24    760 sym.ath_set_country\n0x0800ac24    3    112 sym.ath_print\n0x0800adf0    7    280 sym.ath_keyset\n0x0800af08    9    276 sym.ath_set_sel_evm\n0x0800b01c    5    232 sym.ath_set_macmode\n0x0800b104    1     76 sym.ath_ibss_beacon_update_stop\n0x0800b150    7    140 sym.ath_get_noise_detection_param\n0x0800b1e4    5    108 sym.ath_vap_config\n0x0800b518    6    100 sym.ath_green_ap_dev_set_enable\n0x0800b580    3     76 sym.ath_get_dfsdomain\n0x0800b5d0    3     76 sym.ath_get_regdomain\n0x0800b620    1     80 sym.ath_get_currentCountry\n0x0800b9a0    6    188 sym.ath_set_regdomain\n0x0800bc98    1    100 sym.ath_vap_pause_control\n0x0800bd04   16    252 sym.ath_update_sm_pwrsave\n0x0800be08   22    656 sym.ath_enable_dfs\n0x0800c0b0    8    444 sym.ath_attach_dfs\n0x0800c27c    9    308 sym.ath_set_tx_antenna_select\n0x0800c3b8    9    160 sym.ath_key_alloc_single\n0x0800c464   12    236 sym.ath_key_alloc_pair\n0x0800c55c   14    348 sym.ath_key_alloc_2pair\n0x0800c6c4    5    372 sym.ath_scan_end\n0x0800c844    5    340 sym.ath_scan_start\n0x0800c9a8    3    104 sym.ath_switch_opmode\n0x0800ca18   70   1896 sym.ath_handle_intr\n0x0800d1b4   40   1336 sym.ath_mesg_intr\n0x0800d708   42   1404 sym.ath_intr\n0x0800dca4   24    988 sym.ath_node_attach\n0x0800e098   29    612 sym.ath_vap_stopping\n0x0800e314   62   1620 sym.ath_vap_up\n0x0800e980   21    948 sym.ath_vap_join\n0x0800ed48   15    668 sym.ath_vap_listen\n0x0800effc   27    736 sym.ath_vap_down\n0x0800f2ec   19    616 sym.ath_vap_detach\n0x0800f564    7    192 sym.ath_vap_attach\n0x0800f864   25    488 sym.ath_get_device_info\n0x0800fb00   15    456 sym.ath_txq_stuck_checker\n0x0800fcdc   10    316 sym.ath_rx_hwreg_checker\n0x0800fe28   18    460 sym.ath_rx_stuck_checker\n0x08010008  145   4420 sym.ath_calibrate\n0x08011afc    7    260 sym.ath_updateslot\n0x08011fd0   16    492 sym.ath_vap_reap_txqs\n0x080121cc    5    184 sym.ath_set_proxysta\n0x080131b8   11    256 sym.ath_suspend\n0x080132b8   25   1124 sym.ath_open\n0x08015500   33    776 sym.ath_node_cleanup\n0x0801920c   28    944 sym.ath_rx_timer\n0x0801ad90    3    104 sym._ath_internal_timer_handler\n0x08026c50   21    580 sym.ath_addba_timer\n0x08038ff8    1     40 sym.null_get_current_channel_flags\n0x08039020    1     40 sym.null_get_current_channel\n0x08039048    1     40 sym.null_is_vap_active\n0x08039070    1     40 sym.null_ap_ps_on_off\n0x08039808    1     36 sym.ath_green_ap_ant_ps_mode_on_tmr_fun\n0x0803a698    3     68 sym.ath_iw_setcountry\n0x0803a6dc    1    104 sym.ath_iw_getcountry\n0x0803a744    1     52 sym.ath_iw_set_dscp_tid_map\n0x0803a778    1     56 sym.ath_iw_get_dscp_tid_map\n0x0803a7b0    5    140 sym.ath_iw_gethwaddr\n0x0803a83c    1     44 sym.ath_iw_set_saparam\n0x0803a868    1     44 sym.ath_iw_get_saparam\n0x0803bb8c   10    124 sym.find_ath_ioctl_name\n0x0803a8b0   13    336 sym.ath_iw_getparam\n0x0803aa0c   21    424 sym.ath_iw_setparam\n0x0803ac00   11    188 sym.ath_iw_sethwaddr\n0x0803acbc    1     48 sym.__wbuf_map_single\n0x0803acec    1     40 sym.__wbuf_unmap_single\n0x0803b0b0    5     92 sym.ath_adhoc_netlink_receive\n0x08033004   62   1448 sym.ath_node_pwrsaveq_send\n0x08039bac   16    628 sym.ath_ald_collect_ni_data\n0x0802d658    5    156 sym.ath_rx_process_uapsd\n0x0801f464   13    404 sym.ath_tx_flush\n0x08022f5c    1     84 sym.ath_tx_pause_tid_nolock\n0x0801b020   11    344 sym.ath_tx_cleanup\n0x0801ae88    1     20 sym.ath_set_timer_period\n0x08008bac   16    580 sym.ath_reset\n0x0801af88    1     36 sym.ath_ratecode_to_ratekbps\n0x0800623c    1     32 sym.ath_get_channel_busy_info\n0x08038f98    1     56 sym.green_ap_register_funcs\n0x0801bd1c    3    172 sym.ath_cabq_update\n0x0802fb34    4    124 sym.ath_tx_edma_init\n0x080361c0    3     88 sym.ath_check_swretry_req\n0x0801bde0    4    228 sym.ath_tx_mcast_draintxq\n0x08007fdc    5    212 sym.ath_wnm_beacon_config\n0x0801ee90    1     60 sym.ath_tx_abortalldma\n0x080084a4    1     92 sym.ath_set_tx_chainmask\n0x08015f30    3    100 sym.ath_pwrsave_awake\n0x0803b114    5    216 sym.ath_adhoc_netlink_send\n0x0800771c    5    212 sym.ath_update_mib_macstats\n0x0803a364    1     40 sym.ath_proc_read_rtscts\n0x0802aa48   27    584 sym.ath_tx_node_cleanup\n0x080091bc   10    296 sym.ath_spectral_control\n0x08009330    3    100 sym.ath_pkt_log_text\n0x08031ce0    6    232 sym.ath_node_leftovercleanup\n0x0802fc40   18    320 sym.ath_txbf_alloc_key\n0x0801164c   19    648 sym.ath_update_txpow\n0x0803b898    7    144 sym.bus_free_consistent\n0x0802fe34    3     72 sym.ath_txbf_chk_rpt_frm\n0x08001c08   18    182 sym.ath_beacon_return\n0x08021718    1     36 sym.ath_txto_tasklet\n0x080137b0    5    140 sym.ath_gpio_register_callback\n0x0801aa50    3     52 sym.ath_delba_process\n0x08015224   23    572 sym.ath_dev_free\n0x08016eec    5    160 sym.ath_rx_requeue\n0x0801665c    8    332 fcn.0801665c\n0x080078d0    5    216 sym.ath_gettsf32\n0x0803b068    1     16 sym.__wbuf_uapsd_update\n0x0801f5fc    1     32 sym.ath_txq_depth\n0x08019988   36   1136 sym.ath_bar_rx\n0x08018d14    3    104 sym.ath_rx_node_free\n0x08039b3c    1     32 sym.ath_green_ap_suspend\n0x080195d4    1     32 sym.ath_set_addbaresponse\n0x0803a124    1     48 sym.ath_proc_write\n0x08003b08    1     32 sym.ath_hw_beacon_rssi_reset\n0x08033e6c   60   1292 sym.ath_node_pwrsaveq_age\n0x080115a8    5    164 sym.ath_update_tpscale\n0x0801aa84    8    288 sym.ath_rx_node_init\n0x0802cea0   19    552 sym.ath_rx_edma_init\n0x0803a4f8    1     36 sym.ath_handle_tx_intr\n0x08025864   95   2456 sym.ath_tx_send_ampdu\n0x080114a0    6    264 sym.ath_extend_tsf\n0x080170bc   23    576 sym.ath_startrecv\n0x0802fbf8    3     72 sym.ath_get_txbfcaps\n0x08029468   22    556 sym.ath_addba_responseprocess\n0x08003ed4    9    296 sym.ath_timbcast_return\n0x08005df8    4    152 sym.ath_tx_uapsd_node_stageq_cleanup\n0x08006018    4    124 sym.ath_tx_uapsd_pause_begin\n0x08027130    1    136 sym.ath_bar_tx\n0x0803afa8    3    152 sym.__wbuf_map_sg\n0x0803addc   13    392 sym.ath_rxbuf_alloc\n0x08031dc8    4     84 sym._modify_sw_retry_limit\n0x0802ad40   10    252 sym.ath_tx_node_resume\n0x0803bb0c    1     96 sym.cleanup_module\n0x08016584    3    108 sym.ath_pwrsave_proc_intdone\n0x08015f94   20    644 sym.ath_radio_enable\n0x08030034   27    888 sym.ath_tx_paprd_init\n0x0802aee8    4     60 sym.ath_set_config\n0x08035aac    5    140 sym.ath_set_swretrystate\n0x0802037c  154   4952 sym.ath_tx_start_dma\n0x0801af18    1     40 sym.ath_timer_is_initialized\n0x08038f38    1     32 sym.ath_green_ap_sc_get_transition_time\n0x0801aedc    1     40 sym.ath_cancel_timer\n0x08039458   41    908 sym.ath_green_ap_state_mc\n0x08022b0c    7    104 sym.ath_addba_cancel_timers\n0x0802cc80   16    380 sym.ath_rx_edma_cleanup\n0x0801eed0   22    556 sym.ath_reset_draintxq\n0x0801594c    1     80 sym.ath_init_green_ap_ops\n0x080360f4    5     96 sym.ath_exist_pendingfrm_tidq\n0x08013948   41   1692 sym.ath_dev_attach\n0x0801b2e8   51   1360 sym.ath_txq_setup\n0x0802d29c    8    304 sym.ath_edmaAllocRxbufsForFreeList\n0x08023fe0  233   6228 sym.ath_txq_schedule\n0x0803af7c    1     24 sym.wbuf_release\n0x0802297c    5    200 sym.ath_aggr_check\n0x08015b4c    1     28 sym.ath_get_sw_phystate\n0x0803a38c    1     40 sym.ath_proc_read_version\n0x0802bdc8    3     60 sym.ath_get_config\n0x0800b494    5    132 sym.ath_scan_enable_txq\n0x0800736c    1     28 sym.ath_green_ap_get_current_channel\n0x080080b0   25    540 sym.ath_get_noderssi\n0x08022fe8  111   3060 sym.ath_tx_sched_normal\n0x0800ad44    3     52 sym.ath_ant_swcom_sel\n0x08017ad4   59   2092 sym.ath_rx_process\n0x08032258    7    188 sym._pktlog_update_txcomp\n0x08015820    1     40 sym.ath_spectral_indicate\n0x080111a8   23    632 sym.ath_reset_start\n0x0801f63c    1     32 sym.ath_txq_aggr_depth\n0x08033a1c   47   1084 sym.ath_node_pwrsaveq_drain\n0x0800452c    1     16 sym.ath_desc_swap\n0x0803a4d0    1     40 sym.ath_hw_phystate_change\n0x0801ae18    1    108 sym.ath_initialize_timer_int\n0x080095e4    1     20 sym.ath_get_common_power\n0x08015b84    1     32 sym.ath_set_sw_phystate\n0x0803b964   11    352 sym.init_module\n0x0802d0d0    6    236 sym.ath_rx_edma_requeue\n0x08012850   45   1408 sym.ath_lean_chan_set\n0x0802d1c4    3    196 sym.ath_edma_attach\n0x08005e90   11    384 sym.ath_tx_prepend_uapsd_stage_queue\n0x0800537c   41   1700 sym.ath_process_uapsd_trigger\n0x080061e0    1     92 sym.ath_setdefantenna\n0x0801b8d8   49   1632 sym.ath_txq_update\n0x08038b2c    3     40 sym.ath_get_retries_num\n0x0801f9f8   92   2428 sym.ath_buf_set_rate\n0x08018308   78   2348 sym.ath_rx_tasklet\n0x08001cac    1     36 sym.ath_beacon_free\n0x0800453c    1     20 sym.ath_tx_uapsd_depth\n0x08006e58    1     44 sym.ath_get_maxtxpower\n0x0803a0b0    1     20 sym.ath_proc_write_version\n0x0802ac90    3     64 sym.ath_tx_node_free\n0x080335d0   42   1060 sym.ath_node_pwrsaveq_flush\n0x08016504    5    128 sym.ath_pwrsave_netsleep\n0x0801f8d0    4    180 sym.ath_pkt_duration\n0x080119b4    3     84 sym.ath_setTxPwrAdjust\n0x0800bb44    9    332 sym.ath_checkandplumb_key\n0x0801bdc8    1     24 sym.ath_set_protmode\n0x080039e0    5    264 sym.ath_hw_beacon_rssi_threshold_disable\n0x08013864    6    228 sym.ath_gpio_set_intr\n0x0803ad14    1     48 sym.__wbuf_map_single_tx\n0x0801c330  126   4240 sym.ath_tx_txqaddbuf\n0x08006da4    1     84 sym.ath_set_diversity\n0x08036218   11    624 sym.ath_form_swretry_frm\n0x080346c8    1     44 sym.ath_node_pwrsaveq_set_param\n0x08007330    3     60 sym.ath_green_ap_is_vap_active\n0x08018f68    9    352 sym.ath_rx_duration\n0x08015adc    1     32 sym.ath_pcie_pwrsave_enable_on_phystate_change\n0x0803a51c    1     48 sym.ath_handle_rx_intr\n0x08011428    5    112 sym.ath_wait_sc_inuse_cnt\n0x08027d88  214   5808 sym.ath_txq_schedule_before_eapol\n0x0803b318    3     68 sym.ahb_free_consistent\n0x08005a48   20    936 sym.ath_tx_stage_queue_uapsd\n0x08006df8    1     48 sym.ath_set_rx_chainmasklegacy\n0x080312ec    5    192 sym.ath_paprd_send\n0x08039afc    3     64 sym.ath_green_ap_is_powersave_on\n0x08016bd8   10    440 sym.ath_opmode_init\n0x0803a3b4    1     40 sym.ath_proc_read\n0x08034678    3     76 sym.ath_node_pwrsaveq_detach\n0x080352a4   74   1760 sym.ath_tx_vap_pause_control\n0x0803a314    1     40 sym.ath_proc_read_ignoredfs\n0x08019e14   81   2656 sym.ath_ampdu_input\n0x0801bec4    8    284 sym.ath_tx_drain_backlogq\n0x080037a4    3    132 sym.ath_get_hwbeaconproc_active\n0x08006840    1     32 sym.ath_keycache_print\n0x080303cc   35   1076 sym.ath_tx_paprd_complete\n0x0803001c    1     24 sym.ath_paprd_getrate\n0x08003760    1     60 sym.ath_bmiss_tasklet\n0x0803a154   15    416 sym.ath_proc_write_nodefixedrate\n0x0801b7fc   13    148 sym.ath_tx_get_qnum\n0x08035b48   67   1424 sym.ath_handlepspoll\n0x0802ad08    3     56 sym.ath_tx_node_pause_nolock\n0x08001a14    1     12 sym.ath_beacon_alloc\n0x08019940    1     72 sym.ath_addba_responsesetup\n0x0801d460  110   2276 sym.ath_tx_start\n0x0802710c    3     36 sym.ath_aggr_teardown\n0x0803b274    1     16 sym.ath_adhoc_netlink_reply\n0x08006c1c    1     32 sym.ath_clear_mib_counters\n0x080095f8    8    172 sym.ath_resched_txq\n0x080313b4   20    460 sym.ath_tx_paprd_cleanup\n0x08036ce8   31    864 sym.ath_tx_dec_eligible_frms\n0x08022a7c    5    144 sym.ath_addba_clear\n0x08004814    4    232 sym.ath_tx_uapsd_node_cleanup\n0x08022dd0    1    140 sym.ath_tx_pause_tid\n0x08038f18    1     32 sym.ath_green_ap_sc_set_transition_time\n0x0803ad44    7    152 sym.wbuf_alloc\n0x08003b6c    1     28 sym.ath_beacon_attach\n0x0800ba64    1     56 sym.ath_dprintf\n0x08031ad0   19    528 sym.ath_tx_complete_buf\n0x08023ddc   19    516 sym.ath_insertq_inorder\n0x080019a0    1    116 sym.ath_beaconq_setup\n0x08011a08    5    244 sym.ath_setslottime\n0x08038114    1     32 sym.ath_atf_sc_set\n0x08011c00   18    412 sym.ath_chan_change\n0x08015bbc   39    884 sym.ath_pwrsave_set_state\n0x0803b92c    3     56 sym.bus_read_cachesize\n0x0803b040    1     40 sym.__wbuf_unmap_sg\n0x0800625c    1     32 sym.ath_disable_hwq\n0x0801b178   13    336 sym.ath_tx_init\n0x0802a6e0   10    308 sym.ath_txq_drain_pending_buffers\n0x08022c2c    7    200 fcn.08022c2c\n0x080225b0    4    172 fcn.080225b0\n0x08023bf8   14    340 sym.ath_tx_num_badfrms\n0x08006094    1     68 sym.ath_tx_uapsd_pause_end\n0x0800ba9c    4    160 sym.ath_process_phyerr\n0x080345f0    1    136 sym.ath_node_pwrsaveq_attach\n0x08006b94    1     32 sym.ath_gettsftstamp\n0x0800b3a0    5    188 sym.ath_set_tx_chainmaskopt\n0x0802acd0    3     56 sym.ath_tx_node_pause\n0x08003630    9    296 sym.ath_beacon_sync\n0x0801af04    1     20 sym.ath_timer_is_active\n0x0801e094   42   1456 sym.ath_tx_update_stats\n0x080317ac   25    804 sym.ath_edma_free_complete_buf\n0x0801f988    5    112 sym.ath_txchainmask_reduction\n0x08032318   54   1500 sym.ath_tx_complete_aggr_compact\n0x08002880    1     72 sym.ath_beacon_config\n0x08039254   18    412 sym.ath_green_ap_detach\n0x0803a54c   10    324 sym.ath_rx_indicate\n0x08006be8    3     52 sym.ath_get_mib_macstats\n0x0801c028   25    764 sym.ath_tx_mcastqaddbuf\n0x0801b524    3     84 sym.ath_tx_cleanupq\n0x080167a8    6    100 sym.ath_rx_cleanup\n0x0802a814   19    560 sym.ath_tx_node_init\n0x08031594   20    512 sym.ath_tx_paprd_draintxq\n0x08038154    1     28 sym.ath_atf_sc_get_unused_txtoken\n0x0801694c   37    652 sym.ath_calcrxfilter\n0x0802fa38    9    248 sym.ath_tx_edma_tasklet\n0x0803982c   16    372 sym.ath_green_ap_stop\n0x08036488   31    952 sym.ath_tx_drain_sxmitq\n0x08018f2c    1     60 sym.ath_fill_radiotap_hdr\n0x08003b88    1     16 sym.ath_beacon_detach\n0x08009010   15    408 sym.ath_dev_start_spectral_scan\n0x08015afc    1     48 sym.ath_notify_device_removal\n0x0801bcd0    1     76 sym.ath_txq_burst_update\n0x0802d538   10    288 sym.ath_edma_stoprecv\n0x08038170   30    668 sym.ath_atf_sc_update_node_txtoken\n0x08019630   26    748 sym.ath_addba_requestprocess\n0x0803a0f4    1     48 sym.ath_proc_write_rtscts\n0x08003b28    1     60 sym.ath_brssi_tasklet\n0x0803b3c8   18    336 sym.bus_dma_sync_single\n0x0803b3a4    1     20 sym.bus_alloc_nonconsistent\n0x08008564    6    156 sym.ath_node_set_fixedrate\n0x08015b68    1     28 sym.ath_get_hw_phystate\n0x080222cc   17    396 sym.ath_tx_tasklet\n0x08015b2c    1     32 sym.ath_detect_card_present\n0x08006bb4    3     52 sym.ath_get_mib_cyclecounts\n0x080038d4    5    268 sym.ath_hw_beacon_rssi_threshold_enable\n0x08032918    4    132 sym.ath_tx_mark_aggr_rifs_done\n0x0802d6f4   17    528 sym.ath_rx_intr\n0x080399b4    3     88 sym.ath_green_ap_sc_set_enable\n0x08030004    1     24 sym.ath_paprd_setrate\n0x08022b74    4    184 sym.ath_tx_update_baw\n0x08012de8    8    272 sym.ath_lean_set_channel\n0x080048fc    8    376 sym.ath_tx_queue_uapsd\n0x0802e7e8    8    316 sym.ath_rx_edma_intr\n0x08004508    1     36 sym.ath_txstatus_cleanup\n0x0802e928  128   4300 sym.ath_tx_edma_process\n0x08015ba4    1     24 sym.ath_pwrsave_get_state\n0x080043e4    4    168 sym.ath_txstatus_setup\n0x0801680c   11    304 sym.ath_rx_init\n0x0802ae58    1     84 sym.ath_set_weptkip_rxdelim\n0x0801f65c    1     88 sym.ath_txq_set_minfree\n0x08038f58    1     32 sym.ath_green_ap_sc_set_on_time\n0x08038420    3     64 sym.ath_calc_ack_duration\n0x08038fd0    1     40 sym.null_reset_dev\n0x08004550    6    128 sym.ath_tx_uapsd_cleanup\n0x08015848    1    260 sym.ath_init_spectral_ops\n0x0802d3dc    6    336 sym.ath_edma_startrecv\n0x0801a8a4   16    404 sym.ath_rx_aggr_teardown\n0x08022a44    1     56 sym.ath_addba_status\n0x08006c98    6    116 sym.ath_set_txqproperty\n0x0803a894    1     28 sym.ath_iw_attach\n0x0801b578    3     96 sym.ath_tx_setup\n0x08017308   43   1268 sym.ath_rx_input\n0x080329f8   58   1500 sym.ath_node_pwrsaveq_queue\n0x08003b98   16    820 sym.ath_timbcast_alloc\n0x0802fe0c    1     40 sym.ath_txbf_set_rpt_received\n0x08029698  129   4124 sym.ath_tx_complete_aggr_rifs\n0x0801ae9c    1     64 sym.ath_start_timer\n0x08026b0c   12    324 sym.ath_tx_resume_tid\n0x0801e644   43   1428 sym.ath_tx_draintxq\n0x08026e9c   21    624 sym.ath_tx_aggr_teardown\n0x0801ae04    1     20 sym.ath_initialize_timer_module\n0x08011f90    1     64 sym.ath_green_ap_reset_dev\n0x0803a0c4    1     48 sym.ath_proc_write_ignoredfs\n0x08003ae8    1     32 sym.ath_hw_beacon_rssi\n0x0800ad78    4    120 sym.ath_set_ctl_pwr\n0x0801228c   50   1460 sym.ath_set_channel\n0x0801aba8   23    464 sym.ath_rx_node_cleanup\n0x08006e84    1     76 sym.ath_read_from_eeprom\n0x0801dd50   16    700 sym._ath_tx_complete_buf\n0x08004a7c    9    308 sym.ath_tx_uapsdqnulbf_complete\n0x08004df8   44   1384 sym.ath_tx_uapsd_draintxq\n0x0801546c    4    148 sym.ath_tx_frag_cleanup\n0x08036160    3     96 sym.ath_reset_paused_tid\n0x08006ed0    1     44 sym.ath_fixed_log_text\n0x08003ffc   31    984 sym.ath_descdma_setup\n0x08039a0c    6    204 sym.ath_green_ap_attach\n0x0801f2d0    1      8 sym.ath_draintxq\n0x08006d94    1     16 sym.ath_get_hwrevs\n0x08022fb0    1     56 sym.ath_smart_ant_select_train_packet\n0x0802fd80    1     52 sym.ath_txbf_set_key\n0x080073fc    1     40 sym.ath_get_pwrsaveq_len\n0x080045d0    8    568 sym.ath_tx_uapsd_init\n0x08039b80    1     44 sym.ath_green_ap_sc_set_enable_print\n0x080320a8   17    404 sym._ath_swretry_comp_aggr_dec_eligible_frms\n0x08001d34   18    402 sym.ath_hw_hang_check\n0x0803b078    3     52 sym.ath_adhoc_netlink_delete\n0x0802fe7c   10    320 sym.ath_apply_paprd_table\n0x080092e4    1     40 sym.ath_rate_newstate_set\n0x08039e20   19    548 sym.ath_ald_collect_data\n0x0803b7c4   11    208 sym.bus_alloc_consistent\n0x08001e94    1      4 sym.ath_beacon_tasklet\n0x0802ae40    1     24 sym.ath_set_ampduparams\n0x080359a8    7    236 sym.dumpTxQueue\n0x08036858    1     12 sym.ath_tx_flush_node_sxmitq\n0x08004494    4    116 sym.ath_descdma_cleanup\n0x08016288   18    628 sym.ath_radio_disable\n0x0803b3b8    1     16 sym.bus_free_nonconsistent\n0x08038134    1     32 sym.ath_atf_sc_clear\n0x0801af40    1     72 sym.ath_free_timer_int\n0x08016f8c    8    288 sym.ath_allocRxbufsForFreeList\n0x080093ac    1     20 sym.ath_rc_rate_maprix\n0x08038f78    1     32 sym.ath_green_ap_sc_get_on_time\n0x0801e014    6    128 sym.ath_tx_update_hwretries_estimate\n0x08016d98   10    332 sym.ath_stoprecv\n0x08021774   84   2860 sym.ath_tx_processq\n0x08007614    1     44 sym.ath_tx99_ops\n0x0801599c    7    320 sym.ath_pcie_pwrsave_enable\n0x0802fdb4    1     40 sym.ath_txbf_set_hw_cvtimeout\n0x08031e1c    4    180 sym._txcomp_handle_subframe_retry\n0x0801f61c    1     32 sym.ath_txq_num_buf_used\n0x08031ed0   18    452 sym._ath_swretry_comp_handle_tim\n0x0803b6fc   11    196 sym.bus_unmap_single\n0x08039b5c    1     36 sym.ath_green_ap_sc_get_enable_print\n0x08007300    1     48 sym.ath_green_ap_ps_on_off\n0x08018c58    8    180 sym.ath_flushrecv\n0x0802e798    1     80 sym.ath_rx_edma_tasklet\n0x0802df10   75   2148 fcn.0802df10\n0x08006e28    1     48 sym.ath_set_tx_chainmasklegacy\n0x08030830   33   1596 sym.ath_sendpaprd_single\n0x08016224    3    100 sym.ath_pwrsave_fullsleep\n0x08012ef8   22    596 sym.ath_stop_locked\n0x0801d414    6     76 sym.ath_rate_findrix\n0x0801b5dc   20    516 sym.ath_set_tx\n0x08038bac   33    824 sym.ath_atf_node_airtime_consumed\n0x08006f00    5    104 sym.ath_rate_findrc\n0x0802aeac    1     60 sym.ath_get_amsdusupported\n0x0802ffcc    1     32 sym.ath_paprd_set_enable\n0x08022e5c    6    256 sym.ath_addba_requestsetup\n0x08030e8c   29   1084 sym.ath_paprd_cal\n0x08008e0c   19    492 sym.ath_dev_stop_spectral_scan\n0x08007388    1     28 sym.ath_green_ap_get_current_channel_flags\n0x08008504    1     92 sym.ath_set_rx_chainmask\n0x08023d4c    6    144 sym.ath_check_seq_order\n0x0802245c   18    328 sym.ath_print_tbf_usage\n0x08018d7c   18    432 sym.ath_rx_proc_descfast\n0x0803b1f0    4    108 sym.ath_adhoc_netlink_init\n0x0803a33c    1     40 sym.ath_proc_read_nodefixedrate\n0x08038ef8    1     32 sym.ath_green_ap_sc_get_enable\n0x0803b360    1     68 sym.pci_read_cachesize\n0x08003884    1     80 sym.ath_hwbeaconproc_disable\n0x0801372c    7    124 sym.ath_gpio_config\n0x0803a05c    1     84 sym.ath_ald_update_frame_stats\n0x08037c60   37   1176 sym.ath_tx_mpdu_resend\n0x080093c0    5    304 sym.ath_do_pwrworkaround\n0x0803b284    1     24 sym.ahb_read_cachesize\n0x08009398    1     20 sym.ath_rc_rate_set_mcast_rate\n0x08008978   17    544 sym.ath_dev_record_chan_info\n0x08026210   83   2280 sym.ath_tx_send_normal\n0x08034398   25    580 sym.ath_node_pwrsaveq_get_info\n0x0802fddc    1     16 sym.ath_txbf_print_cv_cache\n0x0801bfe0    5     72 sym.ath_tx_node_queue_depth\n0x0802fbb4    1     68 sym.ath_tx_edma_cleanup\n0x08013844    1     32 sym.ath_gpio_get_intr\n0x08036bd0    7    280 sym.ath_tx_modify_rateseries\n0x080370d8   79   2180 sym.ath_tx_mpdu_requeue\n0x0802fdec    1     32 sym.ath_txbf_get_cvcache_nr\n0x08003828    1     92 sym.ath_hwbeaconproc_enable\n0x0803af94    1     20 sym.wbuf_start_dma\n0x08006d0c    6    136 sym.ath_update_txqproperty\n0x0800ac98   15    172 sym.ath_get_noderate\n0x080077f0    5    224 sym.ath_gettsf64\n0x08039098   18    412 sym.ath_green_ap_start\n0x08011db8   14    464 sym.ath_reset_end\n0x08004bb8   23    556 sym.ath_tx_uapsd_complete\n0x08021740    1     52 sym.ath_tx_get_rts_retrylimit\n0x080195f4    3     60 sym.ath_clear_addbaresponsestatus\n0x0802d914   42   1524 sym.ath_rx_bf_handler\n0x0803b29c    5    120 sym.ahb_alloc_consistent\n0x0802ffec    1     24 sym.ath_paprd_get_enable\n0x080384e8   65   1580 sym.ath_atf_check_txtokens\n0x080118e0   11    212 sym.ath_setTxPwrLimit\n0x0803a3dc    6    232 sym.ath_internal_reset\n0x0803b528   19    452 sym.bus_map_single\n0x08017814   28    672 sym.ath_rx_bf_process\n0x08002794    6    204 sym.ath_bstuck_tasklet\n0x08006c3c    6     92 sym.ath_get_txqproperty\n0x0801f6b4   26    532 sym.ath_tx_drop_policy\n0x080165f0    1    108 sym.ath_pwrsave_init\n0x0800b460    3     52 sym.ath_setrxfilter\n0x0800b818    8    380 fcn.0800b818\n0x0800b258    3    320 fcn.0800b258\n0x0801315c    5     92 fcn.0801315c\n0x080190d0    9    308 fcn.080190d0\n0x0801afac    1    116 fcn.0801afac\n0x0802265c   22    616 fcn.0802265c\n0x080271b8   63   2176 fcn.080271b8\n0x08027a9c   20    732 fcn.08027a9c\n0x080228c4    3    184 fcn.080228c4\n0x08022cf4    6    220 fcn.08022cf4\n0x0802ca08   11    208 fcn.0802ca08\n0x0802cdfc    6    164 fcn.0802cdfc\n0x0802cae4   14    396 fcn.0802cae4\n0x0803299c    3     92 fcn.0803299c\n0x080346f4  114   2936 fcn.080346f4\n0x08039410    3     64 fcn.08039410\n0x0803abc0    1     64 fcn.0803abc0", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"I found the function 'ath_proc_write' at address 0x0803a124 in the binary 'ath_dev.ko'. Now I need to decompile this function to analyze its code for input points, data flow, buffer operations, and missing validations. I'll use r2's 'pdg' command with the symbol name to decompile it.\",\n  \"action\": \"r2\",\n  \"action_input\": {\n    \"command\": \"pdg sym.ath_proc_write\"\n  },\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：r2\n参数：{\"command\": \"pdg sym.ath_proc_write\"}\n结果：\n Usage: pdg  # Native Ghidra decompiler plugin\n| pdg           # Decompile current function with the Ghidra decompiler\n| pdg*          # Decompiled code is returned to r2 as comment\n| pdga          # Side by side two column disasm and decompilation\n| pdgd          # Dump the debug XML Dump\n| pdgj          # Dump the current decompiled function as JSON\n| pdgo          # Decompile current function side by side with offsets\n| pdgp          # Switch to RAsm and RAnal plugins driven by SLEIGH from Ghidra\n| pdgs          # Display loaded Sleigh Languages (alias for pdgL)\n| pdgsd N       # Disassemble N instructions with Sleigh and print pcode\n| pdgss         # Display automatically matched Sleigh Language ID\n| pdgx          # Dump the XML of the current decompiled function\nEnvironment:\n| %SLEIGHHOME   # Path to ghidra sleigh directory (same as r2ghidra.sleighhome)", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"I need to analyze the 'ath_proc_write' function for input points, data flow, buffer operations, and validation missing. From the function list, I found 'sym.ath_proc_write' at address 0x0803a124. I'll first seek to this address in r2 and then use the 'pdf' command to disassemble the function, as 'pdg' might not be working correctly. If disassembly is successful, I can analyze the code for vulnerabilities.\",\n  \"action\": \"r2\",\n  \"action_input\": {\n    \"command\": \"s 0x0803a124; pdf\"\n  },\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：r2\n参数：{\"command\": \"s 0x0803a124; pdf\"}\n结果：\n ┌ 48: sym.ath_proc_write (int32_t arg2);\n│ `- args(r1) vars(1:sp[0x4..0x4])\n│           0x0803a124      0dc0a0e1       mov ip, sp\n│           0x0803a128      30d82de9       push {r4, r5, fp, ip, lr, pc}\n│           0x0803a12c      04b04ce2       sub fp, ip, 4\n│           0x0803a130      0250a0e1       mov r5, r2\n│           0x0803a134      0100a0e1       mov r0, r1                  ; int32_t arg2\n│           0x0803a138      0a20a0e3       mov r2, 0xa\n│           0x0803a13c      0010a0e3       mov r1, 0\n│           0x0803a140      0340a0e1       mov r4, r3\n│           0x0803a144      feffffeb       bl simple_strtoul           ; RELOC 24 simple_strtoul\n│           0x0803a148      000084e5       str r0, [r4]\n│           0x0803a14c      0500a0e1       mov r0, r5\n└           0x0803a150      30a89de8       ldm sp, {r4, r5, fp, sp, pc}", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"I have analyzed the 'ath_proc_write' function from the disassembly. The function directly uses a user-space buffer pointer without copying it to kernel space using copy_from_user, which is a security issue. It converts the user-provided string to an integer using simple_strtoul and stores the result in a kernel memory location. The missing copy_from_user could lead to kernel oops or denial of service if the user pointer is invalid. However, without knowing the caller context or what the kernel pointer (r3) points to, I cannot establish a complete attack chain for arbitrary code execution. The function itself does not have buffer overflow issues, but the direct use of user-space data is problematic. I will now provide the final report based on this analysis.\",\n  \"action\": \"finish\",\n  \"action_input\": {\n    \"final_response\": {\n      \"description\": \"The function 'ath_proc_write' at address 0x0803a124 handles write operations to a proc file. It takes a user-space buffer pointer (r1) and directly passes it to simple_strtoul for conversion to an integer without using copy_from_user to copy the data to kernel space first. This violates kernel security practices and can lead to kernel oops or denial of service if the user provides an invalid pointer. The converted integer is stored to a kernel memory location pointed by r3, but without context on what r3 points to, the impact is limited to DoS. The function returns the count (r2), which is typical for proc write handlers. There are no buffer operations or validation checks on the input string, but simple_strtoul itself handles string conversion with base 10 and stops at non-digit characters. The attack chain involves an attacker writing to the proc file with a malicious buffer, causing the kernel to access user-space memory directly, potentially triggering a fault. However, without evidence of control over the storage pointer (r3) or further exploitation, this is primarily a DoS vulnerability.\",\n      \"link_identifiers\": [\n        \"proc_file_write_handler\"\n      ],\n      \"location\": \"0x0803a124 in ath_dev.ko\",\n      \"code_snippet\": \"0x0803a124      mov ip, sp\\n0x0803a128      push {r4, r5, fp, ip, lr, pc}\\n0x0803a12c      sub fp, ip, 4\\n0x0803a130      mov r5, r2\\n0x0803a134      mov r0, r1\\n0x0803a138      mov r2, 0xa\\n0x0803a13c      mov r1, 0\\n0x0803a140      mov r4, r3\\n0x0803a144      bl simple_strtoul\\n0x0803a148      str r0, [r4]\\n0x0803a14c      mov r0, r5\\n0x0803a150      ldm sp, {r4, r5, fp, sp, pc}\",\n      \"risk_score\": 6.0,\n      \"confidence\": 8.0,\n      \"notes\": \"The missing copy_from_user is a clear security issue, but exploitation for anything beyond DoS requires additional context, such as what the kernel pointer (r3) points to and how the function is called. Further analysis should identify the proc file name and the caller of this function to determine if the stored integer can influence critical kernel state. The function symbol suggests it is related to Atheros device driver proc operations.\"\n    }\n  },\n  \"status\": \"complete\"\n}"}
