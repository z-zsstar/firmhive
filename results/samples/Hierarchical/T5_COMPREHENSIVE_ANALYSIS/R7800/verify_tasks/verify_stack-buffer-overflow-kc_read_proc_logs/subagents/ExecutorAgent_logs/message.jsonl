{"role": "system", "content": "\n你是一个固件文件系统静态分析代理。你的任务是基于当前分析焦点（特定目录）进行探索和分析。请专注于当前焦点，当你认为对其分析已完成或无法进一步推进时，继续下一个任务或结束任务。\n\n工作方法：\n\n1.  **理解需求**\n    *   始终关注当前分析对象或特定任务，同时也要参考用户的整体或初始需求。\n    *   仔细理解用户当前想要分析的固件内容和目标。除非你非常确定不符合要求，否则不要遗漏符合用户要求的目录和文件。\n    *   如果用户需求不清楚，根据固件特征选择最佳分析路径，适当分解复杂任务，合理调用分析助手。\n\n2.  **制定分析计划**\n    *   根据固件特征选择最佳分析路径。\n    *   对于复杂任务，将其分解为多个具有明确目标和步骤的子任务，合理调用分析助手和工具。\n    *   根据助手反馈合理调整分析计划，确保计划准确完整。如果助手无法完成任务，重新制定分析计划。如果助手尝试两次后仍无法完成任务，继续分析下一个任务。\n\n3.  **分析期间的问题处理**\n    *   记录分析过程中遇到的技术难点和独特挑战。\n    *   评估问题在实际固件环境中的影响。\n    *   谨慎使用某些工具，避免结果过长导致分析失败，例如 `strings` 工具。\n\n4.  **提交分析结果**\n    *   总结所有分析结果并回答当前任务对应的问题。\n    *   如实报告证据不足或不确定的情况或困难（缺少什么证据，缺少什么信息）。\n\n**核心工作流程：**\n\n1.  **理解需求**\n    *   始终关注具体任务，同时也要参考用户的整体或初始需求。注意，如果任务与当前分析焦点不匹配，你需要停止分析并及时向用户反馈。不要执行跨目录分析。\n    *   仔细理解用户当前想要分析的固件内容和目标。除非你非常确定不符合要求，否则不要遗漏符合用户要求的目录和文件。如果用户需求不清楚，根据固件特征选择最佳分析路径，分解复杂任务，合理调用分析助手。\n\n2.  **理解上下文**：使用工具精确了解你当前的分析焦点和位置。\n\n3.  **委托任务**：需要深入分析时，调用适当的分析助手：\n    *   **探索目录**：使用子目录分析助手或其并行版本切换到指定目录进行分析。\n    *   **分析文件**：使用文件分析助手或其并行版本分析指定文件。\n\n4.  **总结并完成**：完成当前焦点的所有分析任务后，总结你的发现。如果所有任务都已完成，使用 `finish` 动作结束。\n\n*   在 'action' 字段中选择工具或 'finish'，并在 'action_input' 中提供参数或最终响应。\n\n\n当前可用工具：\n- Name: get_context_info\n  Description: 获取当前分析任务的上下文信息，例如正在分析的文件或目录。\n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {},\n  \"required\": []\n}\n\n- Name: execute_shell\n  Description: 在当前目录（squashfs-root）中执行只读 shell 命令。\n    **警告：** 此工具严格限制在当前工作目录内。所有文件操作不得引用父目录或任何其他目录。建议使用 `file` 工具在当前目录内进行探索和识别。\n    **注意：** 所有命令都在当前目录中执行。所有路径参数应相对于当前目录。禁止包含 '/' 或 '..' 的路径。\n    支持的命令：file, find, strings, grep, head, tail, readelf, cat, sort, ls。\n    禁止输出重定向（'>'、'>>'）、命令链接和目录更改。\n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"command\": {\n      \"type\": \"string\",\n      \"description\": \"要执行的 shell 命令。命令将在 'squashfs-root' 目录中执行。命令中的所有路径应相对于此目录。\"\n    }\n  },\n  \"required\": [\n    \"command\"\n  ]\n}\n\n- Name: r2_file_target\n  Description: \n    与 Radare2 交互式会话交互以分析指定的二进制文件。注意，此工具会自动为目标分析对象建立并维护 r2 会话。\n\n    主要功能：\n    - 发送 Radare2 命令并获取输出\n    - 会话状态在调用之间保持（对于同一文件）\n    - 支持使用 r2ghidra 插件进行反编译：\n    * 使用 `pdg` 命令反编译函数\n    * 提供类似 C 的伪代码输出\n\n    \n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"file_name\": {\n      \"type\": \"string\",\n      \"description\": \"要分析的文件名称。提供相对于固件根目录的路径，不要以 ./ 开头。\"\n    },\n    \"command\": {\n      \"type\": \"string\",\n      \"description\": \"直接与 Radare2 交互的命令\"\n    }\n  },\n  \"required\": [\n    \"file_name\",\n    \"command\"\n  ]\n}\n\n- Name: DeepFileAnalysisAssistant\n  Description: \n    用于对当前目录范围内指定文件进行深度分析的代理。\n    只能分析当前目录或其子目录（任意深度）中的文件。\n    对于你作用域内的文件，使用简单的相对路径，如 'config.php' 或 'subdir/file.txt'。\n    适用于单个文件的深度分析任务。你可以在观察单步结果后决定下一个分析任务。对于验证任务等有针对性的分析，强烈建议使用此代理。\n    \n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"file_name\": {\n      \"type\": \"string\",\n      \"description\": \"相对于你当前目录的文件路径（例如，'config.php'、'hnap/Login.xml'）。你只能访问当前目录或其子目录中的文件。\"\n    },\n    \"run_in_background\": {\n      \"type\": \"boolean\",\n      \"description\": \"是否在后台运行此任务。\",\n      \"default\": false\n    }\n  },\n  \"required\": [\n    \"file_name\"\n  ],\n  \"description\": \"包含文件分析目标的对象。使用相对于当前工作目录的路径。\"\n}\n\n- Name: DeepDirectoryAnalysisAssistant\n  Description: \n    用于对当前目录范围内指定子目录进行深度分析的代理。\n    只能分析当前目录中的子目录（直接子目录或更深层的嵌套目录）。\n    对于你作用域内的目录，使用简单的相对路径，如 'hnap' 或 'subdir/nested'。\n    适用于单个子目录的深度分析任务。你可以在观察单步结果后决定下一个分析任务。对于验证任务等有针对性的分析，强烈建议使用此代理。\n    \n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"dir_name\": {\n      \"type\": \"string\",\n      \"description\": \"相对于你当前目录的目录路径（例如，'hnap'、'init.d'）。你只能访问当前目录范围内的子目录。\"\n    },\n    \"run_in_background\": {\n      \"type\": \"boolean\",\n      \"description\": \"是否在后台运行此任务。\",\n      \"default\": false\n    }\n  },\n  \"required\": [\n    \"dir_name\"\n  ],\n  \"description\": \"包含目录分析目标的对象。使用相对于当前工作目录的路径。\"\n}\n\n- Name: ParallelDeepFileAnalysisDelegator\n  Description: \n    深度文件分析委托器 - 将当前目录范围内多个文件的分析任务分配给子代理并行处理。\n    只能分析当前目录或其子目录（任意深度）中的文件。\n    对于你作用域内的文件，使用简单的相对路径。\n    适用于同时对多个文件进行深度分析的任务。对于复杂任务或全面分析，强烈建议使用此委托器。\n    \n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"file_names\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\",\n        \"description\": \"相对于你当前目录的文件路径（例如，'config.php'、'hnap/Login.xml'）。你只能访问当前目录或其子目录中的文件。\"\n      },\n      \"description\": \"要并行分析的文件路径列表。使用相对于当前工作目录的路径。\"\n    },\n    \"run_in_background\": {\n      \"type\": \"boolean\",\n      \"description\": \"是否在后台运行此任务。\",\n      \"default\": false\n    }\n  },\n  \"required\": [\n    \"file_names\"\n  ],\n  \"description\": \"包含当前目录范围内文件分析目标列表的对象。\"\n}\n\n- Name: ParallelDeepDirectoryAnalysisDelegator\n  Description: \n    深度目录分析委托器 - 将当前目录范围内多个子目录的分析任务分配给子代理并行处理。\n    只能分析当前目录中的子目录（直接子目录或更深层的嵌套目录）。\n    对于你作用域内的目录，使用简单的相对路径。\n    适用于同时对多个子目录进行深度分析的任务。对于复杂任务或全面分析，强烈建议使用此委托器。\n    \n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"dir_names\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\",\n        \"description\": \"相对于你当前目录的目录路径（例如，'hnap'、'init.d'）。你只能访问当前目录范围内的子目录。\"\n      },\n      \"description\": \"要并行分析的目录路径列表。使用相对于当前工作目录的路径。\"\n    },\n    \"run_in_background\": {\n      \"type\": \"boolean\",\n      \"description\": \"是否在后台运行此任务。\",\n      \"default\": false\n    }\n  },\n  \"required\": [\n    \"dir_names\"\n  ],\n  \"description\": \"包含当前目录范围内目录分析目标列表的对象。\"\n}\n\n**后台执行和任务调度**：\n- 在 action_input 中设置 `run_in_background: true` 可异步运行任务。\n- 后台任务完成时，结果会自动注入。\n- 当需要后台结果才能继续时，使用 'wait' 动作。\n\n调度策略（避免遗漏和重复，最大化效率）：\n1. 识别独立任务，如果不立即需要结果，在后台启动它们。\n2. 在后台任务并行运行时继续其他工作。\n3. 当依赖任务需要后台结果时使用 'wait'。\n4. 在脑海中跟踪所有启动的后台任务以避免重复。\n5. 在 'finish' 之前，确保所有后台任务都已完成并整合结果。\n\n响应格式要求：\n\n你必须以严格的 JSON 格式响应。不要在 JSON 对象之外添加任何其他文本。\n不要使用 markdown 格式（如 ```json）。直接输出单个 JSON 对象。\n\n响应必须是符合以下模式的有效 JSON 对象：\n\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"thought\": {\n      \"type\": \"string\",\n      \"description\": \"在这里逐步思考。分析当前情况、目标、可用工具和对话历史。决定是调用工具还是使用 'finish' 动作提供最终答案。\"\n    },\n    \"action\": {\n      \"type\": \"string\",\n      \"description\": \"选择下一个动作。必须是可用工具名称之一、'wait' 或 'finish'。\"\n    },\n    \"action_input\": {\n      \"oneOf\": [\n        {\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"string\"\n        }\n      ],\n      \"description\": \"工具调用的参数或最终响应。如果 action 是工具名称，提供该工具所需的参数（通常是对象）；如果是 'finish'，使用 'final_response' 作为 action_input 的键提供最终响应（通常是包含字符串的对象）。\"\n    },\n    \"status\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"continue\",\n        \"complete\"\n      ],\n      \"description\": \"必须是 'continue'（如果选择了工具）或 'complete'（如果选择了 'finish'）。\"\n    }\n  },\n  \"required\": [\n    \"thought\",\n    \"action\",\n    \"action_input\",\n    \"status\"\n  ]\n}\n\n"}
{"role": "user", "content": "你的唯一任务是严格、客观地验证以下安全警报。你的分析必须完全基于所提供的证据。\n\n**核心原则**：\n1.  **证据驱动**：警报中的所有声明都必须通过分析所提供的证据来验证。严禁猜测或分析无关的信息和文件。\n2.  **逻辑审查**：不要仅仅确认代码的存在；你必须理解其执行逻辑。仔细检查条件语句、数据清理以及决定代码路径是否可达的其他因素。\n3.  **可利用性验证**：通过确认以下内容来验证漏洞是否**实际可利用**：\n    - **输入可控性**：攻击者可以控制污染的输入。\n    - **路径可达性**：在现实条件下可以到达易受攻击的代码路径。\n    - **实际影响**：汇聚操作可能造成实际的安全损害。\n4.  **完整攻击链**：验证从攻击者控制的输入到危险汇聚点的**完整传播路径**，每一步都有证据支持。\n\n**注意**：警报中的函数名可能来自反编译。请仔细搜索；不要仅仅因为它们不在符号表或字符串中就轻易断定它们不存在。\n\n验证以下发现：\n```json\n{\n  \"location\": \"NetUSB.ko sym.kc_read_proc at address 0x08018cdc (sprintf call)\",\n  \"description\": \"A stack buffer overflow vulnerability exists in sym.kc_read_proc due to unsafe use of sprintf without bounds checking. The attack chain is as follows: 1) An attacker controls device information strings (e.g., product, manufacturer, serial) by connecting a malicious USB device with long strings. 2) When the proc file is read, sym.kc_read_proc retrieves these strings via getStringItem calls and formats them into a fixed-size stack buffer of 0x324 bytes (804 bytes) using sprintf. 3) The sprintf call does not limit the output size, and data is accumulated in a loop that iterates up to 10 times. 4) If the formatted string exceeds 804 bytes, it overflows the stack buffer, corrupting adjacent kernel stack memory. The trigger condition is reading the proc file (e.g., /proc/netusb/device) while a malicious USB device is attached. This is exploitable for kernel stack corruption, potentially leading to code execution or information leakage.\",\n  \"code_snippet\": \"0x08018cdc      feffffeb       bl reloc.sprintf            ; unsafe sprintf call\\n; Preceding setup: r0 = stack buffer, r1 = format string (e.g., \\\"usblp%d\\\\n%s\\\\n%s\\\\n%s\\\\n%d\\\\n\\\"), r2 = loop index\\n; The loop at 0x08018cec runs up to 10 times, accumulating data without size checks\",\n  \"risk_score\": 8.5,\n  \"file_path\": \"lib/modules/3.4.103/NetUSB.ko\"\n}\n```\n**要求**：\n1.  **专注验证**：你的所有操作都必须围绕验证此发现进行。\n2.  **证据支持**：你的结论必须基于工具返回的实际证据。\n3.  **不做无关分析**：不要探索此发现之外的任何其他潜在问题。\n\n\n**提供结论**：在分析结束时，`final_response` 必须是包含以下字段的 JSON 对象：\n    - `accuracy`: (字符串) 对警报描述准确性的评估。必须是 'accurate'（准确）、'inaccurate'（不准确）或 'partially'（部分准确）。\n    - `vulnerability`: (布尔值) 判断该描述是否足以构成真实漏洞。必须是 True 或 False。前提条件是攻击者是已连接到设备并拥有有效登录凭据的用户。\n    - `risk_level`: (字符串) 如果 `vulnerability` 为 `true`，则为漏洞的风险级别。必须是 'Low'（低）、'Medium'（中）或 'High'（高）。\n    - `reason`: (字符串) 对你判断的详细解释，必须支持以上所有结论。对于确认为真实漏洞的发现，此字段还必须提供可重现的攻击载荷或概念验证（PoC）步骤，清楚地描述如何利用该漏洞。\n"}
{"role": "assistant", "content": "{\n  \"thought\": \"我需要验证关于NetUSB.ko中sym.kc_read_proc函数的stack buffer overflow漏洞的警报。首先，我将确认文件存在，然后使用Radare2分析二进制代码，检查sprintf调用、缓冲区大小、循环逻辑以及输入可控性。关键点是验证警报中的描述是否准确，并评估漏洞的可利用性。\",\n  \"action\": \"execute_shell\",\n  \"action_input\": {\n    \"command\": \"ls lib/modules/3.4.103/NetUSB.ko\"\n  },\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：execute_shell\n参数：{\"command\": \"ls lib/modules/3.4.103/NetUSB.ko\"}\n结果：\n 退出代码：0\n标准输出：\nlib/modules/3.4.103/NetUSB.ko\n\n", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"文件NetUSB.ko已确认存在。现在我需要使用Radare2深入分析sym.kc_read_proc函数，以验证警报中的描述。我将检查sprintf调用、缓冲区大小、循环逻辑以及输入可控性。首先，我将反汇编或反编译该函数来理解代码逻辑。\",\n  \"action\": \"r2_file_target\",\n  \"action_input\": {\n    \"file_name\": \"lib/modules/3.4.103/NetUSB.ko\",\n    \"command\": \"pdf @ sym.kc_read_proc\"\n  },\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：r2_file_target\n参数：{\"file_name\": \"lib/modules/3.4.103/NetUSB.ko\", \"command\": \"pdf @ sym.kc_read_proc\"}\n结果：\n ┌ 568: sym.kc_read_proc (int32_t arg1, int32_t arg2, int32_t arg_4h);\n│ `- args(r0, r1, sp[0x4..0x4]) vars(16:sp[0x4..0x350])\n│           0x08018b0c      0dc0a0e1       mov ip, sp\n│           0x08018b10      f0df2de9       push {r4, r5, r6, r7, r8, sb, sl, fp, ip, lr, pc}\n│           0x08018b14      04b04ce2       sub fp, ip, 4\n│           0x08018b18      c9df4de2       sub sp, sp, 0x324\n│           0x08018b1c      8b9f4be2       sub sb, fp, 0x22c\n│           0x08018b20      30030be5       str r0, [var_330h]          ; 0x330 ; 816 ; arg1\n│           0x08018b24      3c130be5       str r1, [var_33ch]          ; 0x33c ; 828 ; arg2\n│           0x08018b28      cb0f4be2       sub r0, var_330h            ; int32_t arg1\n│           0x08018b2c      34230be5       str r2, [var_334h]          ; 0x334 ; 820\n│           0x08018b30      0010a0e3       mov r1, 0                   ; int32_t arg2\n│           0x08018b34      012ca0e3       mov r2, 0x100\n│           0x08018b38      38330be5       str r3, [var_33ch]          ; 0x338 ; 824\n│           0x08018b3c      feffffeb       bl memset                   ; RELOC 24 memset\n│           0x08018b40      0010a0e3       mov r1, 0                   ; int32_t arg2\n│           0x08018b44      012ca0e3       mov r2, 0x100\n│           0x08018b48      0900a0e1       mov r0, sb                  ; int32_t arg1\n│           0x08018b4c      feffffeb       bl memset                   ; RELOC 24 memset\n│           0x08018b50      0010a0e3       mov r1, 0                   ; int32_t arg2\n│           0x08018b54      012ca0e3       mov r2, 0x100\n│           0x08018b58      4b0f4be2       sub r0, fp, 0x12c           ; int32_t arg1\n│           ;-- reloc.memset:\n│           0x08018b5c      feffffeb       bl reloc.memset             ; RELOC 24 memset\n│           0x08018b60      dc019fe5       ldr r0, [0x08018d44]        ; [0x8018d44:4]=0x2950 ; int32_t arg1\n│           0x08018b64      feffffeb       bl mutex_lock               ; RELOC 24 mutex_lock\n│           0x08018b68      d8719fe5       ldr r7, [0x08018d48]        ; [0x8018d48:4]=0x3e74\n│           0x08018b6c      0060a0e3       mov r6, 0\n│           0x08018b70      0680a0e1       mov r8, r6\n│           ; CODE XREF from sym.kc_read_proc @ 0x8018cec(x)\n│       ┌─> 0x08018b74      0400b7e5       ldr r0, [r7, 4]!\n│       ╎   0x08018b78      000050e3       cmp r0, 0\n│      ┌──< 0x08018b7c      5800000a       beq 0x8018ce4\n│      │╎   0x08018b80      200080e2       add r0, r0, 0x20            ; int32_t arg1\n│      │╎   ;-- reloc.dev_get_drvdata:\n│      │╎   0x08018b84      feffffeb       bl reloc.dev_get_drvdata    ; RELOC 24 dev_get_drvdata\n│      │╎   0x08018b88      005050e2       subs r5, r0, 0\n│     ┌───< 0x08018b8c      5400000a       beq 0x8018ce4\n│     ││╎   0x08018b90      9ffcffeb       bl fcn.08017e14\n│     ││╎   0x08018b94      a00095e5       ldr r0, [r5, 0xa0]\n│     ││╎   0x08018b98      ac119fe5       ldr r1, [0x08018d4c]        ; [0x8018d4c:4]=0x6728 ; int32_t arg2\n│     ││╎   0x08018b9c      cb2f4be2       sub r2, var_330h\n│     ││╎   0x08018ba0      013ca0e3       mov r3, 0x100\n│     ││╎   0x08018ba4      020080e2       add r0, r0, 2               ; int32_t arg1\n│     ││╎   0x08018ba8      feffffeb       bl getStringItem            ; RELOC 24 getStringItem @ 0x08018a1c - 0x8018ba8\n│     ││╎   0x08018bac      a00095e5       ldr r0, [r5, 0xa0]\n│     ││╎   0x08018bb0      98119fe5       ldr r1, [0x08018d50]        ; [0x8018d50:4]=0x672c ; int32_t arg2\n│     ││╎   0x08018bb4      0920a0e1       mov r2, sb\n│     ││╎   0x08018bb8      013ca0e3       mov r3, 0x100\n│     ││╎   0x08018bbc      020080e2       add r0, r0, 2               ; int32_t arg1\n│     ││╎   0x08018bc0      feffffeb       bl getStringItem            ; RELOC 24 getStringItem @ 0x08018a1c - 0x8018bc0\n│     ││╎   0x08018bc4      a00095e5       ldr r0, [r5, 0xa0]\n│     ││╎   0x08018bc8      18a085e2       add sl, r5, 0x18\n│     ││╎   0x08018bcc      80119fe5       ldr r1, [0x08018d54]        ; [0x8018d54:4]=0x6730 ; int32_t arg2\n│     ││╎   0x08018bd0      4b2f4be2       sub r2, fp, 0x12c\n│     ││╎   0x08018bd4      013ca0e3       mov r3, 0x100\n│     ││╎   0x08018bd8      020080e2       add r0, r0, 2               ; int32_t arg1\n│     ││╎   ;-- reloc.getStringItem:\n│     ││╎   0x08018bdc      feffffeb       bl reloc.getStringItem      ; RELOC 24 getStringItem @ 0x08018a1c - 0x8018bdc\n│     ││╎   0x08018be0      0a00a0e1       mov r0, sl                  ; int32_t arg1\n│     ││╎   ;-- reloc.mutex_lock:\n│     ││╎   0x08018be4      feffffeb       bl reloc.mutex_lock         ; RELOC 24 mutex_lock\n│     ││╎   0x08018be8      01c0a0e3       mov ip, 1\n│     ││╎   0x08018bec      0030a0e3       mov r3, 0\n│     ││╎   0x08018bf0      00c08de5       str ip, [sp]\n│     ││╎   0x08018bf4      04308de5       str r3, [var_4h]\n│     ││╎   0x08018bf8      0500a0e1       mov r0, r5                  ; int32_t arg1\n│     ││╎   0x08018bfc      34e095e5       ldr lr, [r5, 0x34]\n│     ││╎   0x08018c00      0c10a0e1       mov r1, ip                  ; uint32_t arg2\n│     ││╎   0x08018c04      2020a0e3       mov r2, 0x20\n│     ││╎   0x08018c08      8030a0e3       mov r3, 0x80\n│     ││╎   0x08018c0c      0cc08de5       str ip, [var_ch]\n│     ││╎   0x08018c10      08e08de5       str lr, [var_8h]\n│     ││╎   0x08018c14      0afaffeb       bl fcn.08017444\n│     ││╎   0x08018c18      004050e2       subs r4, r0, 0\n│    ┌────< 0x08018c1c      0a0000aa       bge 0x8018c4c\n│    │││╎   0x08018c20      0a00a0e1       mov r0, sl                  ; int32_t arg1\n│    │││╎   0x08018c24      feffffeb       bl mutex_unlock             ; RELOC 24 mutex_unlock\n│    │││╎   0x08018c28      28019fe5       ldr r0, [0x08018d58]        ; [0x8018d58:4]=396 ; int32_t arg1\n│    │││╎   ;-- reloc.__printk_ratelimit:\n│    │││╎   0x08018c2c      feffffeb       bl reloc.__printk_ratelimit ; RELOC 24 __printk_ratelimit\n│    │││╎   0x08018c30      000050e3       cmp r0, 0\n│   ┌─────< 0x08018c34      1c00000a       beq 0x8018cac\n│   ││││╎   0x08018c38      8c1095e5       ldr r1, [r5, 0x8c]          ; int32_t arg2\n│   ││││╎   0x08018c3c      0420a0e1       mov r2, r4\n│   ││││╎   0x08018c40      14019fe5       ldr r0, [0x08018d5c]        ; [0x8018d5c:4]=0x6734 ; int32_t arg1\n│   ││││╎   ;-- reloc.printk:\n│   ││││╎   0x08018c44      feffffeb       bl reloc.printk             ; RELOC 24 printk\n│  ┌──────< 0x08018c48      170000ea       b 0x8018cac\n│  │││││╎   ; CODE XREF from sym.kc_read_proc @ 0x8018c1c(x)\n│  ││└────> 0x08018c4c      343095e5       ldr r3, [r5, 0x34]\n│  ││ ││╎   0x08018c50      0a00a0e1       mov r0, sl                  ; int32_t arg1\n│  ││ ││╎   0x08018c54      0040d3e5       ldrb r4, [r3]\n│  ││ ││╎   0x08018c58      feffffeb       bl mutex_unlock             ; RELOC 24 mutex_unlock\n│  ││ ││╎   0x08018c5c      080014e3       tst r4, 8                   ; 8\n│  ││ ││╎   0x08018c60      0330a003       moveq r3, 3\n│  ││ ││╎   0x08018c64      0030a013       movne r3, 0\n│  ││ ││╎   0x08018c68      200014e3       tst r4, 0x20                ; 32\n│  ││ ││╎   0x08018c6c      0130a013       movne r3, 1\n│  ││ ││╎   0x08018c70      100014e3       tst r4, 0x10                ; 16\n│  ││ ││╎   0x08018c74      0240a003       moveq r4, 2\n│  ││┌────< 0x08018c78      0200000a       beq .LANCHOR2\n│  │││││╎   0x08018c7c      000053e3       cmp r3, 0\n│  │││││╎   0x08018c80      0340a011       movne r4, r3\n│ ┌───────< 0x08018c84      0800000a       beq 0x8018cac\n│ ││││││╎   ; CODE XREF from sym.kc_read_proc @ 0x8018c78(x)\n│ │││└────> 0x08018c88      001000e3       movw r1, .LANCHOR2          ; RELOC 32 .LANCHOR2 @ 0x08019298 - 0x1\n│ │││ ││╎   ;-- reloc..LANCHOR2:\n│ │││ ││╎   0x08018c8c      001040e3       movt r1, .LANCHOR2          ; RELOC 32 .LANCHOR2 @ 0x08019298 - 0x1\n│ │││ ││╎   0x08018c90      043181e0       add r3, r1, r4, lsl 2\n│ │││ ││╎   0x08018c94      c4009fe5       ldr r0, [0x08018d60]        ; [0x8018d60:4]=0x676c ; int32_t arg1\n│ │││ ││╎   0x08018c98      b91100e3       movw r1, 0x1b9              ; int32_t arg2\n│ │││ ││╎   0x08018c9c      8c2095e5       ldr r2, [r5, 0x8c]\n│ │││ ││╎   0x08018ca0      ac3093e5       ldr r3, [r3, 0xac]\n│ │││ ││╎   0x08018ca4      feffffeb       bl kc_printf                ; RELOC 24 kc_printf @ 0x08016a50 - 0x8018ca4\n│ │││┌────< 0x08018ca8      020000ea       b 0x8018cb8\n│ ││││││╎   ; CODE XREFS from sym.kc_read_proc @ 0x8018c34(x), 0x8018c48(x), 0x8018c84(x)\n│ └└└─────> 0x08018cac      9c40d5e5       ldrb r4, [r5, 0x9c]\n│    │││╎   0x08018cb0      000054e3       cmp r4, 0\n│    │││╎   0x08018cb4      0440a013       movne r4, 4\n│    │││╎   ; CODE XREF from sym.kc_read_proc @ 0x8018ca8(x)\n│    └────> 0x08018cb8      30231be5       ldr r2, [var_330h]          ; 0x330 ; 816\n│     ││╎   0x08018cbc      cb3f4be2       sub r3, var_330h\n│     ││╎   0x08018cc0      9c109fe5       ldr r1, [0x08018d64]        ; [0x8018d64:4]=0x6784 ; int32_t arg2\n│     ││╎   0x08018cc4      4bcf4be2       sub ip, fp, 0x12c\n│     ││╎   0x08018cc8      080082e0       add r0, r2, r8              ; int32_t arg1\n│     ││╎   0x08018ccc      0620a0e1       mov r2, r6\n│     ││╎   0x08018cd0      00908de5       str sb, [sp]\n│     ││╎   0x08018cd4      04c08de5       str ip, [var_4h]\n│     ││╎   0x08018cd8      08408de5       str r4, [var_8h]\n│     ││╎   ;-- reloc.sprintf:\n│     ││╎   0x08018cdc      feffffeb       bl reloc.sprintf            ; RELOC 24 sprintf\n│     ││╎   0x08018ce0      008088e0       add r8, r8, r0\n│     ││╎   ; CODE XREFS from sym.kc_read_proc @ 0x8018b7c(x), 0x8018b8c(x)\n│     └└──> 0x08018ce4      016086e2       add r6, r6, 1\n│       ╎   0x08018ce8      0a0056e3       cmp r6, 0xa                 ; 10\n│       └─< 0x08018cec      a0ffff1a       bne 0x8018b74\n│           0x08018cf0      4c009fe5       ldr r0, [0x08018d44]        ; [0x8018d44:4]=0x2950 ; int32_t arg1\n│           ;-- reloc.mutex_unlock:\n│           0x08018cf4      feffffeb       bl reloc.mutex_unlock       ; RELOC 24 mutex_unlock\n│           0x08018cf8      38231be5       ldr r2, [var_33ch]          ; 0x338 ; 824\n│           0x08018cfc      34131be5       ldr r1, [var_334h]          ; 0x334 ; 820\n│           0x08018d00      38031be5       ldr r0, [var_33ch]          ; 0x338 ; 824\n│           0x08018d04      023081e0       add r3, r1, r2\n│           0x08018d08      3c131be5       ldr r1, [var_33ch]          ; 0x33c ; 828\n│           0x08018d0c      080053e1       cmp r3, r8\n│           0x08018d10      30c31be5       ldr ip, [var_330h]          ; 0x330 ; 816\n│           0x08018d14      04309ba5       ldrge r3, [arg_4h]          ; 0x178000\n│                                                                      ; r13\n│           0x08018d18      0120a0a3       movge r2, 1\n│           0x08018d1c      002083a5       strge r2, [r3]\n│           0x08018d20      34331be5       ldr r3, [var_334h]          ; 0x334 ; 820\n│           0x08018d24      088063e0       rsb r8, r3, r8\n│           0x08018d28      03308ce0       add r3, ip, r3\n│           0x08018d2c      080050e1       cmp r0, r8\n│           0x08018d30      0800a0a1       movge r0, r8\n│           0x08018d34      003081e5       str r3, [r1]\n│           0x08018d38      c00fc0e1       bic r0, r0, r0, asr 31\n│           0x08018d3c      28d04be2       sub sp, fp, 0x28\n└           0x08018d40      f0af9de8       ldm sp, {r4, r5, r6, r7, r8, sb, sl, fp, sp, pc}", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"我已经分析了sym.kc_read_proc函数的反汇编代码。现在我需要验证格式字符串的内容和缓冲区大小，以确认漏洞的可利用性。我将检查sprintf的格式字符串和输入字符串的获取方式。\",\n  \"action\": \"r2_file_target\",\n  \"action_input\": {\n    \"file_name\": \"lib/modules/3.4.103/NetUSB.ko\",\n    \"command\": \"ps @ 0x6784\"\n  },\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：r2_file_target\n参数：{\"file_name\": \"lib/modules/3.4.103/NetUSB.ko\", \"command\": \"ps @ 0x6784\"}\n结果：\n ", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"我需要进一步验证格式字符串的内容和缓冲区溢出条件。从反汇编代码中，sprintf调用在0x08018cdc，格式字符串地址在0x6784，但直接查看该地址没有输出。我应使用Radare2的字符串搜索功能来查找相关格式字符串，并分析循环逻辑和输入可控性。\",\n  \"action\": \"r2_file_target\",\n  \"action_input\": {\n    \"file_name\": \"lib/modules/3.4.103/NetUSB.ko\",\n    \"command\": \"izz\"\n  },\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：r2_file_target\n参数：{\"file_name\": \"lib/modules/3.4.103/NetUSB.ko\", \"command\": \"izz\"}\n结果：\n nth  paddr      vaddr      len size section                   type    string\n――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\n0    0x000001df 0x080001de 4   5    .text                     ascii   \\n,`K\n1    0x00000283 0x08000282 4   5    .text                     ascii   \\n,pK\n2    0x0000032b 0x0800032a 4   5    .text                     ascii   \\n,`K\n3    0x0000267c 0x0800267c 4   7    .text                     utf8    Tp\\v嘠\n4    0x000026b8 0x080026b8 4   7    .text                     utf8    \\a \"ܠ\n5    0x000044a4 0x080044a4 4   7    .text                     utf8    \\ \\v崑\n6    0x00008045 0x08008044 4   6    .text                     utf8     \\eՌ\n7    0x0000998b 0x0800998a 4   5    .text                     ascii   \\n\\0\\e\n8    0x00009b07 0x08009b06 4   5    .text                     ascii   \\n00\\e\n9    0x00009b67 0x08009b66 4   5    .text                     ascii   \\n00\\e\n10   0x0000aa9f 0x0800aa9e 4   5    .text                     ascii   \\n&0[\n11   0x0000ab4b 0x0800ab4a 4   5    .text                     ascii   \\n%0[\n12   0x0000fda3 0x0800fda2 4   5    .text                     ascii   \\nd@\\e\n13   0x0000fde7 0x0800fde6 4   5    .text                     ascii   \\n40\\e\n14   0x00010edf 0x08010ede 4   5    .text                     ascii   \\nM3[\n15   0x00012c6f 0x08012c6e 4   5    .text                     ascii   :\\b@d\n16   0x00014607 0x08014606 4   5    .text                     ascii   \\n\\rPS\n17   0x0001461f 0x0801461e 4   5    .text                     ascii   \\n\\fPS\n18   0x0001466b 0x0801466a 4   5    .text                     ascii   \\n\\tPS\n19   0x000155fb 0x080155fa 4   5    .text                     ascii   \\n80\\e\n20   0x0001561f 0x0801561e 4   5    .text                     ascii   \\n80\\e\n21   0x00015717 0x08015716 4   5    .text                     ascii   \\n80\\e\n22   0x00017343 0x08017342 4   5    .text                     ascii   \\n00\\e\n23   0x0001739c 0x0801739c 4   7    .text                     utf8    0 \\v加\n24   0x000178bd 0x080178bc 4   6    .text                     utf8    `ĵx`\n25   0x00017da3 0x08017da2 4   5    .text                     ascii   \\nh@D\n26   0x00018143 0x08018142 4   5    .text                     ascii   34 \\v\n27   0x000191a4 0x080191a4 16  17   .rodata                   ascii   ks_gethostbyname\n28   0x000191dc 0x080191dc 25  26   .rodata                   ascii   findEndpointFromInterface\n29   0x000191f8 0x080191f8 31  32   .rodata                   ascii   findInterfaceNumberFromEndpoint\n30   0x0001922d 0x0801922d 4   5    .rodata                   ascii   55VT\n31   0x0001923b 0x0801923b 4   5    .rodata                   ascii   l\\vy(\n32   0x00019240 0x08019240 5   6    .rodata                   ascii   jv\"<!\n33   0x00019260 0x08019260 11  12   .rodata                   ascii   resetDevice\n34   0x0001926c 0x0801926c 4   5    .rodata                   ascii   ppbm\n35   0x00019274 0x08019274 5   6    .rodata                   ascii   bndev\n36   0x0001927c 0x0801927c 4   5    .rodata                   ascii   mode\n37   0x00019284 0x08019284 16  17   .rodata                   ascii   0123456789abcdef\n38   0x00019298 0x08019298 11  12   .rodata                   ascii   usblp_write\n39   0x000192a4 0x080192a4 11  12   .rodata                   ascii   usblp_ioctl\n40   0x00019330 0x08019330 18  19   .rodata                   ascii   usblp_check_status\n41   0x000193c4 0x080193c4 11  12   .rodata.str1.4            ascii   %u.%u.%u.%u\n42   0x000193d0 0x080193d0 9   10   .rodata.str1.4            ascii   interrupt\n43   0x000193dc 0x080193dc 37  38   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: %s: socket fail \\n\n44   0x00019404 0x08019404 41  42   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: %s: setsockopt fail \\n\n45   0x00019430 0x08019430 35  36   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: %s: bind fail \\n\n46   0x00019454 0x08019454 51  52   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: ks_gethostbyname get ip failed\\n\n47   0x00019488 0x08019488 13  14   .rodata.str1.4            ascii   <1>v6 ip: %s\\n\n48   0x00019498 0x08019498 34  35   .rodata.str1.4            ascii   INFO%04X:  %s MAC isn`t %d bytes \\n\n49   0x000194bc 0x080194bc 23  24   .rodata.str1.4            ascii   INFO%04X:  addrlen %d \\n\n50   0x000194d4 0x080194d4 35  36   .rodata.str1.4            ascii   INFO%04X:  use dev Name %s : fail \\n\n51   0x000194f8 0x080194f8 30  31   .rodata.str1.4            ascii   INFO%04X:  NULL usbGD_resume \\n\n52   0x00019518 0x08019518 31  32   .rodata.str1.4            ascii   INFO%04X:  NULL usbGD_suspend \\n\n53   0x00019538 0x08019538 40  41   .rodata.str1.4            ascii   INFO%04X: Remove device intf %p, dev %p\\n\n54   0x00019564 0x08019564 147 148  .rodata.str1.4            ascii   /home/sea/NetGear_R8000_R7800_R8500/20150730_sdk_R7800/R7800-V1.0.1.2_gpl_src/build_dir/linux-ipq806x/linux-3.4.103/sourcecode/include/linux/kref.h\n55   0x000195f8 0x080195f8 46  47   .rodata.str1.4            ascii   INFO%04X: Warning: cannot find interfaceNO:%d\\n\n56   0x00019628 0x08019628 59  60   .rodata.str1.4            ascii   INFO%04X: skip set_interface because only 1 num_altsetting\\n\n57   0x00019664 0x08019664 62  63   .rodata.str1.4            ascii   INFO%04X: usbGeneralDriver: No such urb, _dev=%08X _epID=%02X\\n\n58   0x000196a4 0x080196a4 31  32   .rodata.str1.4            ascii   INFO%04X: status %d not mapped\\n\n59   0x000196c4 0x080196c4 31  32   .rodata.str1.4            ascii   INFO%04X:  descHolder is NULL \\n\n60   0x000196e4 0x080196e4 66  67   .rodata.str1.4            ascii   INFO%04X: get config failed! ret%d index:%d size:%d, reset device\\n\n61   0x00019728 0x08019728 32  33   .rodata.str1.4            ascii   INFO%04X: index(%d), string(%s)\\n\n62   0x0001974c 0x0801974c 31  32   .rodata.str1.4            ascii   INFO%04X: Get string error: %d\\n\n63   0x0001976c 0x0801976c 9   10   .rodata.str1.4            ascii   interrupt\n64   0x00019778 0x08019778 46  47   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: err: config %d not found!\\n\n65   0x000197a8 0x080197a8 11  12   .rodata.str1.4            ascii   %d-%s:%d.%d\n66   0x000197bc 0x080197bc 8   9    .rodata.str1.4            ascii   &x->wait\n67   0x000197c8 0x080197c8 33  34   .rodata.str1.4            ascii   %s timed out on ep%d%s len=%d/%d\\n\n68   0x000197ec 0x080197ec 50  51   .rodata.str1.4            ascii   INFO%04X: warning!!: setConfig to %d curr conf %d\\n\n69   0x00019820 0x08019820 67  68   .rodata.str1.4            ascii   MFG:SHARP;CMD:RASTER;MDL:AR-M207/AR-EB9;REV:00;VER:000;CLS:PRINTER;\n70   0x00019864 0x08019864 67  68   .rodata.str1.4            ascii   MFG:SHARP;CMD:RASTER;MDL:AR-M205/AR-EB7;REV:00;VER:000;CLS:PRINTER;\n71   0x000198a8 0x080198a8 60  61   .rodata.str1.4            ascii   MFG:SHARP;CMD:RASTER;MDL:AR-M160;REV:00;VER:000;CLS:PRINTER;\n72   0x000198e8 0x080198e8 24  25   .rodata.str1.4            ascii   INFO%04X: memory error!\\n\n73   0x00019904 0x08019904 39  40   .rodata.str1.4            ascii   INFO%04X: HCI brid: bulk submit err:%d\\n\n74   0x0001992c 0x0801992c 48  49   .rodata.str1.4            ascii   INFO%04X: bulkXfer : epID=%02X status=%d len=%d\\n\n75   0x00019960 0x08019960 53  54   .rodata.str1.4            ascii   INFO%04X: usbGeneralDriver.c:unCompleteUrbList full!\\n\n76   0x00019998 0x08019998 91  92   .rodata.str1.4            ascii   INFO%04X: usbGeneralDriver.c: isTransferCancelled epID:%02X not found in unCompleteUrbList\\n\n77   0x000199f4 0x080199f4 91  92   .rodata.str1.4            ascii   INFO%04X: usbGeneralDriver.c: setTransferStopFlag epID:%02X not found in unCompleteUrbList\\n\n78   0x00019a50 0x08019a50 99  100  .rodata.str1.4            ascii   INFO%04X: bulk_intr_transfer end : epID=%02X status=%d len=%d, totalLen=%d timeout:%d delaytime:%d\\n\n79   0x00019ab4 0x08019ab4 59  60   .rodata.str1.4            ascii   INFO%04X: bulkXfer : epID=%02X status=%d len=%d, reqlen=%d\\n\n80   0x00019af0 0x08019af0 53  54   .rodata.str1.4            ascii   INFO%04X: intXfer: epID %02X : usb_submit_urb err:%d\\n\n81   0x00019b28 0x08019b28 59  60   .rodata.str1.4            ascii   INFO%04X: intXfer : status=%d len=%d oldLen:%d interval:%d\\n\n82   0x00019b64 0x08019b64 30  31   .rodata.str1.4            ascii   INFO%04X: cancelUrb epID:%02X\\n\n83   0x00019b84 0x08019b84 32  33   .rodata.str1.4            ascii   INFO%04X: usb_unlink_urb err:%d\\n\n84   0x00019ba8 0x08019ba8 37  38   .rodata.str1.4            ascii   INFO%04X:  cancelUrb usb_unlink_urb \\n\n85   0x00019bd0 0x08019bd0 93  94   .rodata.str1.4            ascii   INFO%04X: usbGeneralDriver.c: setTransferCancelFlag epID:%02X not found in unCompleteUrbList\\n\n86   0x00019c30 0x08019c30 42  43   .rodata.str1.4            ascii   INFO%04X: Urb already finish ?? try again\\n\n87   0x00019c5c 0x08019c5c 39  40   .rodata.str1.4            ascii   INFO%04X: cleanup_usbGeneralDriver end\\n\n88   0x00019c84 0x08019c84 31  32   .rodata.str1.4            ascii   INFO%04X: Found IODATA hz2w TV\\n\n89   0x00019ca4 0x08019ca4 35  36   .rodata.str1.4            ascii   INFO%04X: IODATA HZ2W CMD 1 ret %d\\n\n90   0x00019cc8 0x08019cc8 35  36   .rodata.str1.4            ascii   INFO%04X: IODATA HZ2W CMD 2 ret %d\\n\n91   0x00019cec 0x08019cec 35  36   .rodata.str1.4            ascii   INFO%04X: IODATA HZ2W CMD 3 ret %d\\n\n92   0x00019d10 0x08019d10 35  36   .rodata.str1.4            ascii   INFO%04X: IODATA HZ2W CMD 4 ret %d\\n\n93   0x00019d34 0x08019d34 30  31   .rodata.str1.4            ascii   INFO%04X: stop auto bulk urb1\\n\n94   0x00019d54 0x08019d54 30  31   .rodata.str1.4            ascii   INFO%04X: stop auto bulk urb2\\n\n95   0x00019d74 0x08019d74 30  31   .rodata.str1.4            ascii   INFO%04X: stop auto bulk urb3\\n\n96   0x00019d94 0x08019d94 30  31   .rodata.str1.4            ascii   INFO%04X: stop auto bulk urb4\\n\n97   0x00019db4 0x08019db4 34  35   .rodata.str1.4            ascii   INFO%04X: usb_reset_device ret %d\\n\n98   0x00019dd8 0x08019dd8 37  38   .rodata.str1.4            ascii   INFO%04X: Add device intf %p, dev %p\\n\n99   0x00019e00 0x08019e00 66  67   .rodata.str1.4            ascii   INFO%04X: %s line%d: find endpoint failed intfNum:%d direction:%d\\n\n100  0x00019e44 0x08019e44 43  44   .rodata.str1.4            ascii   INFO%04X: %s line%d: find interface failed\\n\n101  0x00019e70 0x08019e70 4   5    .rodata.str1.4            ascii   USBC\n102  0x00019e78 0x08019e78 4   5    .rodata.str1.4            ascii   USBS\n103  0x00019e80 0x08019e80 72  73   .rodata.str1.4            ascii   INFO%04X: diskStage write: generate data fin ret:%d diskWriteLeft:%d/%d\\n\n104  0x00019ecc 0x08019ecc 51  52   .rodata.str1.4            ascii   INFO%04X: diskStage:%d ret:%d actualLen:%d epNO:%d\\n\n105  0x00019f00 0x08019f00 47  48   .rodata.str1.4            ascii   INFO%04X: diskStage status:actualLen:%d ret:%d\\n\n106  0x00019f30 0x08019f30 52  53   .rodata.str1.4            ascii   INFO%04X: handleReleased: unlink urb:%08X epID:%02X\\n\n107  0x00019f68 0x08019f68 24  25   .rodata.str1.4            ascii   KC NetUSB General Driver\n108  0x00019f84 0x08019f84 23  24   .rodata.str1.4            ascii   INFO%04X:  infomap %p \\n\n109  0x00019f9c 0x08019f9c 39  40   .rodata.str1.4            ascii   INFO%04X:  sleep to wait %s to wake up\\n\n110  0x00019fc4 0x08019fc4 5   6    .rodata.str1.4            ascii   R7800\n111  0x00019fcc 0x08019fcc 6   7    .rodata.str1.4            ascii   NU TCP\n112  0x00019fd4 0x08019fd4 27  28   .rodata.str1.4            ascii   INFO%04X:  init tcpC fail \\n\n113  0x00019ff0 0x08019ff0 6   7    .rodata.str1.4            ascii   NU UDP\n114  0x00019ff8 0x08019ff8 27  28   .rodata.str1.4            ascii   INFO%04X:  init udpA fail \\n\n115  0x0001a014 0x0801a014 37  38   .rodata.str1.4            ascii   INFO%04X:  socket servers init fail \\n\n116  0x0001a03c 0x0801a03c 9   10   .rodata.str1.4            ascii   interrupt\n117  0x0001a048 0x0801a048 41  42   .rodata.str1.4            ascii   INFO%04X: Out of Memory in myAnnounceMsg\\n\n118  0x0001a074 0x0801a074 7   8    .rodata.str1.4            ascii   1.02.76\n119  0x0001a07c 0x0801a07c 53  54   .rodata.str1.4            ascii   INFO%04X: issueAnnouncement() socket create error!!!\\n\n120  0x0001a0b4 0x0801a0b4 35  36   .rodata.str1.4            ascii   INFO%04X:  udp set broadcast fail \\n\n121  0x0001a0d8 0x0801a0d8 31  32   .rodata.str1.4            ascii   INFO%04X:  udp reuseaddr fail \\n\n122  0x0001a0f8 0x0801a0f8 21  22   .rodata.str1.4            ascii   INFO%04X: Bind to %s\\n\n123  0x0001a110 0x0801a110 31  32   .rodata.str1.4            ascii   INFO%04X:  udp bindtodev fail \\n\n124  0x0001a130 0x0801a130 64  65   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: issueAnnouncement() sending error 1: %d !!!\\n\n125  0x0001a174 0x0801a174 64  65   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: issueAnnouncement() sending error 2: %d !!!\\n\n126  0x0001a1b8 0x0801a1b8 34  35   .rodata.str1.4            ascii   INFO%04X: udpAnnounce thread exit\\n\n127  0x0001a1dc 0x0801a1dc 33  34   .rodata.str1.4            ascii   INFO%04X: line%d error! urbID=%d\\n\n128  0x0001a200 0x0801a200 41  42   .rodata.str1.4            ascii   INFO%04X: myIsocInfo[%d] dev %p removed \\n\n129  0x0001a22c 0x0801a22c 36  37   .rodata.str1.4            ascii   INFO%04X:  wait urb0 : %d, urb1 %d \\n\n130  0x0001a254 0x0801a254 47  48   .rodata.str1.4            ascii   INFO%04X:  isoc : epID %02X, dev %p is removed\\n\n131  0x0001a284 0x0801a284 25  26   .rodata.str1.4            ascii   INFO%04X:  pUdev = NULL \\n\n132  0x0001a2a0 0x0801a2a0 23  24   .rodata.str1.4            ascii   INFO%04X:  input NULL \\n\n133  0x0001a2b8 0x0801a2b8 33  34   .rodata.str1.4            ascii   INFO%04X:  Intf_2Alt_EpOut fail \\n\n134  0x0001a2dc 0x0801a2dc 8   9    .rodata.str1.4            ascii   &x->wait\n135  0x0001a2e8 0x0801a2e8 49  50   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Fatal Error: instance = NULL\\n\n136  0x0001a31c 0x0801a31c 26  27   .rodata.str1.4            ascii   INFO%04X: urbID:%d error!\\n\n137  0x0001a338 0x0801a338 52  53   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Out of memory in isocInfo_setup\\n\n138  0x0001a370 0x0801a370 92  93   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: isocInfo_setup malloc length error _NumberOfPackets=%ld _packetSize=%ld\\n\n139  0x0001a3d0 0x0801a3d0 43  44   .rodata.str1.4            ascii   INFO%04X:  default numberOfPackets %d < %d\\n\n140  0x0001a3fc 0x0801a3fc 44  45   .rodata.str1.4            ascii   INFO%04X: !! length %d > maxIsocBufSize %d \\n\n141  0x0001a42c 0x0801a42c 46  47   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Fatal Error: param = NULL\\n\n142  0x0001a45c 0x0801a45c 37  38   .rodata.str1.4            ascii   <3>NERR%04X: %-10s:  urbID err : %d \\n\n143  0x0001a484 0x0801a484 46  47   .rodata.str1.4            ascii   INFO%04X: HZ:%d delay %d : %d ready to sumbit\\n\n144  0x0001a4b4 0x0801a4b4 33  34   .rodata.str1.4            ascii   INFO%04X:  urbID %d : status %d \\n\n145  0x0001a4d8 0x0801a4d8 39  40   .rodata.str1.4            ascii   INFO%04X:  urbID %d : pUrb->status %d \\n\n146  0x0001a500 0x0801a500 34  35   .rodata.str1.4            ascii   INFO%04X: fx=%d, ps=%d : urbID %u\\n\n147  0x0001a524 0x0801a524 33  34   .rodata.str1.4            ascii   INFO%04X: err data ret=%d len=%d\\n\n148  0x0001a548 0x0801a548 25  26   .rodata.str1.4            ascii   INFO%04X: eop on %d p=%d\\n\n149  0x0001a564 0x0801a564 33  34   .rodata.str1.4            ascii   INFO%04X: end pUrb ret=%d len=%d\\n\n150  0x0001a588 0x0801a588 45  46   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Fatal Error: sbus = NULL\\n\n151  0x0001a5b8 0x0801a5b8 43  44   .rodata.str1.4            ascii   INFO%04X:  reset device %d:sbus %p, dev %p\\n\n152  0x0001a5e4 0x0801a5e4 53  54   .rodata.str1.4            ascii   INFO%04X:  reset device %d fail : %d:sbus %p, dev %p\\n\n153  0x0001a61c 0x0801a61c 40  41   .rodata.str1.4            ascii   INFO%04X:  fail to reset lock : ret2 %d\\n\n154  0x0001a648 0x0801a648 46  47   .rodata.str1.4            ascii   INFO%04X: KTCP_Stop :socketFd == NULL sbus %p\\n\n155  0x0001a678 0x0801a678 38  39   .rodata.str1.4            ascii   INFO%04X: KTCP_Stop : sbus %p name:%s\\n\n156  0x0001a6a0 0x0801a6a0 63  64   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Fatal error: KTCP_get() socketFd = NULL:%p\\n\n157  0x0001a6e0 0x0801a6e0 59  60   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Fatal error: KTCP_get() sbus = NULL:%p\\n\n158  0x0001a71c 0x0801a71c 77  78   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Fatal error: KTCP_get() buf = NULL, reset connection.:%p\\n\n159  0x0001a76c 0x0801a76c 65  66   .rodata.str1.4            ascii   INFO%04X: KTCP_get(): return error - Connection reset by peer:%p\\n\n160  0x0001a7b0 0x0801a7b0 32  33   .rodata.str1.4            ascii   INFO%04X: KTCP_get() error : %d\\n\n161  0x0001a7d4 0x0801a7d4 51  52   .rodata.str1.4            ascii   INFO%04X: KTCP_put(): Connection reset by peer :%p\\n\n162  0x0001a808 0x0801a808 59  60   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Fatal error: KTCP_put() sbus = NULL:%p\\n\n163  0x0001a844 0x0801a844 77  78   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Fatal error: KTCP_put() buf = NULL, reset connection.:%p\\n\n164  0x0001a894 0x0801a894 36  37   .rodata.str1.4            ascii   INFO%04X: Error sending msg: %d :%p\\n\n165  0x0001a8bc 0x0801a8bc 40  41   .rodata.str1.4            ascii   INFO%04X: KTCP_flush(): socketFd reset \\n\n166  0x0001a8e8 0x0801a8e8 36  37   .rodata.str1.4            ascii   INFO%04X: Error sock_setsockopt: %d\\n\n167  0x0001a910 0x0801a910 67  68   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Fatal error: SoftwareBus_fillBuf() sbus = NULL\\n\n168  0x0001a954 0x0801a954 69  70   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Fatal error: SoftwareBus_fillBuf() buf = NULL:%p\\n\n169  0x0001a99c 0x0801a99c 31  32   .rodata.str1.4            ascii   INFO%04X: _fillBuf(): len = %d\\n\n170  0x0001a9bc 0x0801a9bc 84  85   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Fatal error: SoftwareBus_responseBulkInInfoReturn() sbus = NULL\\n\n171  0x0001aa14 0x0801aa14 39  40   .rodata.str1.4            ascii   INFO%04X:  sbus %p, sbus->mysocket %p \\n\n172  0x0001aa3c 0x0801aa3c 30  31   .rodata.str1.4            ascii   INFO%04X: set TCP_CORK failed\\n\n173  0x0001aa5c 0x0801aa5c 37  38   .rodata.str1.4            ascii   INFO%04X: GIGA_autobulk thread %d up\\n\n174  0x0001aa84 0x0801aa84 39  40   .rodata.str1.4            ascii   INFO%04X: auto bulk xfer ret %d len %d\\n\n175  0x0001aaac 0x0801aaac 22  23   .rodata.str1.4            ascii   INFO%04X: bulk get %d\\n\n176  0x0001aac4 0x0801aac4 44  45   .rodata.str1.4            ascii   INFO%04X: auto bulk thread %d stop reason 1\\n\n177  0x0001aaf4 0x0801aaf4 58  59   .rodata.str1.4            ascii   INFO%04X: GIGA:not errorExit, manually send a error to pc\\n\n178  0x0001ab30 0x0801ab30 85  86   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Fatal error: SoftwareBus_responseBulkOutInfoReturn() sbus = NULL\\n\n179  0x0001ab88 0x0801ab88 95  96   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Fatal error: SoftwareBus_responseGetCurrentFrameNumberReturn() sbus = NULL\\n\n180  0x0001abe8 0x0801abe8 37  38   .rodata.str1.4            ascii   INFO%04X: in:pkt %d status %d len %d\\n\n181  0x0001ac10 0x0801ac10 79  80   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Fatal error: SoftwareBus_reportConfigDescGot() sbus = NULL\\n\n182  0x0001ac60 0x0801ac60 24  25   .rodata.str1.4            ascii   INFO%04X:  device lost \\n\n183  0x0001ac7c 0x0801ac7c 63  64   .rodata.str1.4            ascii   INFO%04X: Malloc memory for configuration descriptor buffer ! \\n\n184  0x0001acbc 0x0801acbc 59  60   .rodata.str1.4            ascii   INFO%04X: Out of Memory in SoftwareBus_reportConfigDescGot\\n\n185  0x0001acf8 0x0801acf8 90  91   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Fatal error: SoftwareBus_reportSbusRequestInResponseGot() sbus = NULL\\n\n186  0x0001ad54 0x0801ad54 50  51   .rodata.str1.4            ascii   INFO%04X: Out of memory in USBSoftwareBus line %d\\n\n187  0x0001ad88 0x0801ad88 70  71   .rodata.str1.4            ascii   INFO%04X: Out of Memory in SoftwareBus_reportSbusRequestInResponseGot\\n\n188  0x0001add0 0x0801add0 91  92   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Fatal error: SoftwareBus_reportSbusReleaseDeviceResponse() sbus = NULL\\n\n189  0x0001ae2c 0x0801ae2c 71  72   .rodata.str1.4            ascii   INFO%04X: Out of Memory in SoftwareBus_reportSbusReleaseDeviceResponse\\n\n190  0x0001ae74 0x0801ae74 88  89   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Fatal error: SoftwareBus_reportSbusLockDeviceResponse() sbus = NULL\\n\n191  0x0001aed0 0x0801aed0 68  69   .rodata.str1.4            ascii   INFO%04X: Out of Memory in SoftwareBus_reportSbusLockDeviceResponse\\n\n192  0x0001af18 0x0801af18 90  91   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Fatal error: SoftwareBus_reportSbusUnlockDeviceResponse() sbus = NULL\\n\n193  0x0001af74 0x0801af74 70  71   .rodata.str1.4            ascii   INFO%04X: Out of Memory in SoftwareBus_reportSbusUnlockDeviceResponse\\n\n194  0x0001afbc 0x0801afbc 88  89   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Fatal error: SoftwareBus_processRequestToUseDeviceCmd() sbus = NULL\\n\n195  0x0001b018 0x0801b018 58  59   .rodata.str1.4            ascii   INFO%04X: processRequestToUseDeviceCmd cmd %d not support\\n\n196  0x0001b054 0x0801b054 97  98   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Fatal error: SoftwareBus_reportSbusClaimOccupiedDeviceResponse() sbus = NULL\\n\n197  0x0001b0b8 0x0801b0b8 62  63   .rodata.str1.4            ascii   INFO%04X: reportSbusClaimOccupiedDeviceResponse: device lost \\n\n198  0x0001b0f8 0x0801b0f8 18  19   .rodata.str1.4            ascii   INFO%04X: cb s=%d\\n\n199  0x0001b10c 0x0801b10c 17  18   .rodata.str1.4            ascii   INFO%04X: qfc=%d\\n\n200  0x0001b120 0x0801b120 26  27   .rodata.str1.4            ascii   INFO%04X: assertA! ret=%d\\n\n201  0x0001b13c 0x0801b13c 26  27   .rodata.str1.4            ascii   INFO%04X: assert0! ret=%d\\n\n202  0x0001b158 0x0801b158 26  27   .rodata.str1.4            ascii   INFO%04X: assert1! ret=%d\\n\n203  0x0001b174 0x0801b174 26  27   .rodata.str1.4            ascii   INFO%04X: assert2! ret=%d\\n\n204  0x0001b190 0x0801b190 45  46   .rodata.str1.4            ascii   INFO%04X: assert3! ret=%d len=%d totallen=%d\\n\n205  0x0001b1c0 0x0801b1c0 27  28   .rodata.str1.4            ascii   INFO%04X: re submit err=%d\\n\n206  0x0001b1dc 0x0801b1dc 26  27   .rodata.str1.4            ascii   INFO%04X: stop urb qfc=%d\\n\n207  0x0001b1f8 0x0801b1f8 77  78   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Fatal error: SoftwareBus_dispatchEP0MsgOut() sbus = NULL\\n\n208  0x0001b248 0x0801b248 47  48   .rodata.str1.4            ascii   INFO%04X: Out of memory in SoftwareBus line %d\\n\n209  0x0001b278 0x0801b278 12  13   .rodata.str1.4            ascii   NU Work:3676\n210  0x0001b288 0x0801b288 12  13   .rodata.str1.4            ascii   NU Work:3722\n211  0x0001b298 0x0801b298 12  13   .rodata.str1.4            ascii   NU Work:3756\n212  0x0001b2a8 0x0801b2a8 12  13   .rodata.str1.4            ascii   NU Work:3828\n213  0x0001b2b8 0x0801b2b8 12  13   .rodata.str1.4            ascii   NU Work:3875\n214  0x0001b2c8 0x0801b2c8 12  13   .rodata.str1.4            ascii   NU Work:3933\n215  0x0001b2d8 0x0801b2d8 12  13   .rodata.str1.4            ascii   NU Work:3974\n216  0x0001b2e8 0x0801b2e8 12  13   .rodata.str1.4            ascii   NU Work:4011\n217  0x0001b2f8 0x0801b2f8 49  50   .rodata.str1.4            ascii   INFO%04X: Not yet implemented, ep0 func = 0x%02X\\n\n218  0x0001b32c 0x0801b32c 72  73   .rodata.str1.4            ascii   INFO%04X: Fatal error: SoftwareBus_dispatchNormalEPMsgOut() sbus = NULL\\n\n219  0x0001b378 0x0801b378 12  13   .rodata.str1.4            ascii   NU Work:4076\n220  0x0001b388 0x0801b388 47  48   .rodata.str1.4            ascii   INFO%04X: Out of memory in USBSoftwareBus : %d\\n\n221  0x0001b3b8 0x0801b3b8 12  13   .rodata.str1.4            ascii   NU Work:4121\n222  0x0001b3c8 0x0801b3c8 12  13   .rodata.str1.4            ascii   NU Work:4196\n223  0x0001b3d8 0x0801b3d8 41  42   .rodata.str1.4            ascii   INFO%04X: USB_OUT_ISOC_READ_STOP ep:%02X\\n\n224  0x0001b404 0x0801b404 54  55   .rodata.str1.4            ascii   INFO%04X:     USB_OUT_ISOC_READ_STOP device not exist\\n\n225  0x0001b43c 0x0801b43c 12  13   .rodata.str1.4            ascii   NU Work:4276\n226  0x0001b44c 0x0801b44c 41  42   .rodata.str1.4            ascii   INFO%04X: Out of memory in USBSoftwareBus\n227  0x0001b478 0x0801b478 41  42   .rodata.str1.4            ascii   INFO%04X:  USB_OUT_ISOC_WRITE owner err \\n\n228  0x0001b4a4 0x0801b4a4 33  34   .rodata.str1.4            ascii   INFO%04X: error! out of isocInfo\\n\n229  0x0001b4c8 0x0801b4c8 12  13   .rodata.str1.4            ascii   NU Work:4524\n230  0x0001b4d8 0x0801b4d8 38  39   .rodata.str1.4            ascii   INFO%04X:  pipe_write timeout ccc %d \\n\n231  0x0001b500 0x0801b500 12  13   .rodata.str1.4            ascii   NU Work:4619\n232  0x0001b510 0x0801b510 48  49   .rodata.str1.4            ascii   INFO%04X: Not yet implemented, ep func = 0x%02X\\n\n233  0x0001b544 0x0801b544 80  81   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Fatal error: SoftwareBus_dispatchHostCommands() sbus = NULL\\n\n234  0x0001b598 0x0801b598 12  13   .rodata.str1.4            ascii   NU Work:4672\n235  0x0001b5a8 0x0801b5a8 12  13   .rodata.str1.4            ascii   NU Work:4710\n236  0x0001b5b8 0x0801b5b8 12  13   .rodata.str1.4            ascii   NU Work:4756\n237  0x0001b5c8 0x0801b5c8 12  13   .rodata.str1.4            ascii   NU Work:4817\n238  0x0001b5d8 0x0801b5d8 12  13   .rodata.str1.4            ascii   NU Work:4878\n239  0x0001b5e8 0x0801b5e8 12  13   .rodata.str1.4            ascii   NU Work:4920\n240  0x0001b5f8 0x0801b5f8 12  13   .rodata.str1.4            ascii   NU Work:4962\n241  0x0001b608 0x0801b608 12  13   .rodata.str1.4            ascii   NU Work:5006\n242  0x0001b618 0x0801b618 12  13   .rodata.str1.4            ascii   NU Work:5050\n243  0x0001b628 0x0801b628 12  13   .rodata.str1.4            ascii   NU Work:5115\n244  0x0001b638 0x0801b638 12  13   .rodata.str1.4            ascii   NU Work:5151\n245  0x0001b648 0x0801b648 43  44   .rodata.str1.4            ascii   INFO%04X: USB_OUT_USB_PORT_RESET no device\\n\n246  0x0001b674 0x0801b674 33  34   .rodata.str1.4            ascii   INFO%04X: Unknown op code 0x%02X\\n\n247  0x0001b698 0x0801b698 42  43   .rodata.str1.4            ascii   INFO%04X: SoftwareBus_dispatchThread exit\\n\n248  0x0001b6c4 0x0801b6c4 46  47   .rodata.str1.4            ascii   INFO%04X: Out of Memory in initUsbSoftwareBus\\n\n249  0x0001b6f4 0x0801b6f4 34  35   .rodata.str1.4            ascii   INFO%04X:  new connection sbus %p\\n\n250  0x0001b718 0x0801b718 11  12   .rodata.str1.4            ascii   NU Dispatch\n251  0x0001b724 0x0801b724 66  67   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Fatal error: initHostStatus() instance = NULL\\n\n252  0x0001b768 0x0801b768 85  86   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Fatal error: HostStatus_handleHostDisconnected() instance = NULL\\n\n253  0x0001b7c0 0x0801b7c0 81  82   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Fatal error: HostStatus_handleHostDisconnected() sbus = NULL\\n\n254  0x0001b814 0x0801b814 31  32   .rodata.str1.4            ascii   INFO%04X:  input data is NULL \\n\n255  0x0001b834 0x0801b834 44  45   .rodata.str1.4            ascii   INFO%04X: tcpConnector() receiving error!!!\\n\n256  0x0001b864 0x0801b864 45  46   .rodata.str1.4            ascii   INFO%04X: Please #define ENABLE_TEST_PROGRAM\\n\n257  0x0001b894 0x0801b894 63  64   .rodata.str1.4            ascii   INFO%04X: Tunnel start sig error...old version windows driver?\\n\n258  0x0001b8d4 0x0801b8d4 60  61   .rodata.str1.4            ascii   INFO%04X: get verifyData error ret:%d sizeof(verifyData)=%d\\n\n259  0x0001b914 0x0801b914 31  32   .rodata.str1.4            ascii   INFO%04X: send cryptData error\\n\n260  0x0001b934 0x0801b934 32  33   .rodata.str1.4            ascii   INFO%04X: send randomData error\\n\n261  0x0001b958 0x0801b958 37  38   .rodata.str1.4            ascii   INFO%04X: get cryptData error ret:%d\\n\n262  0x0001b980 0x0801b980 32  33   .rodata.str1.4            ascii   INFO%04X: randomData not match!\\n\n263  0x0001b9a4 0x0801b9a4 50  51   .rodata.str1.4            ascii   INFO%04X: tcpConnector() receiving error : %d !!!\\n\n264  0x0001b9d8 0x0801b9d8 36  37   .rodata.str1.4            ascii   INFO%04X:  bus id len is error : %d\\n\n265  0x0001ba00 0x0801ba00 36  37   .rodata.str1.4            ascii   INFO%04X: Tunnel start sig error %d\\n\n266  0x0001ba28 0x0801ba28 39  40   .rodata.str1.4            ascii   INFO%04X: Read command option error %d\\n\n267  0x0001ba50 0x0801ba50 36  37   .rodata.str1.4            ascii   INFO%04X: send command option error\\n\n268  0x0001ba78 0x0801ba78 52  53   .rodata.str1.4            ascii   INFO%04X: command local:%08X remote:%08X final:%08X\\n\n269  0x0001bab0 0x0801bab0 38  39   .rodata.str1.4            ascii   INFO%04X: Kill old connection for %s \\n\n270  0x0001bad8 0x0801bad8 40  41   .rodata.str1.4            ascii   INFO%04X: Out of Memory in tcpconnector\\n\n271  0x0001bb04 0x0801bb04 39  40   .rodata.str1.4            ascii   INFO%04X:  tcpconnector rcvtimeo fail \\n\n272  0x0001bb2c 0x0801bb2c 51  52   .rodata.str1.4            ascii   INFO%04X: new Tunnel : remote ID = %s, length = %d\\n\n273  0x0001bb60 0x0801bb60 35  36   .rodata.str1.4            ascii   INFO%04X:  connent fail from : %p \\n\n274  0x0001bb84 0x0801bb84 34  35   .rodata.str1.4            ascii   INFO%04X: NetUSB %s, %08X : %s %s\\n\n275  0x0001bba8 0x0801bba8 11  12   .rodata.str1.4            ascii   Nov  3 2015\n276  0x0001bbb4 0x0801bbb4 8   9    .rodata.str1.4            ascii   14:05:54\n277  0x0001bbc0 0x0801bbc0 22  23   .rodata.str1.4            ascii   INFO%04X: %d: %s :%s \\n\n278  0x0001bbd8 0x0801bbd8 21  22   .rodata.str1.4            ascii   INFO%04X:  AUTH ISOC\\n\n279  0x0001bbf0 0x0801bbf0 40  41   .rodata.str1.4            ascii   INFO%04X:  MOVE_HEAD emb_lp filterAudio\\n\n280  0x0001bc1c 0x0801bc1c 5   6    .rodata.str1.4            ascii   KC601\n281  0x0001bc24 0x0801bc24 5   6    .rodata.str1.4            ascii   KC604\n282  0x0001bc2c 0x0801bc2c 6   7    .rodata.str1.4            ascii   NetUSB\n283  0x0001bc34 0x0801bc34 6   7    .rodata.str1.4            ascii   Server\n284  0x0001bc3c 0x0801bc3c 11  12   .rodata.str1.4            ascii   NU INITSOCK\n285  0x0001bc48 0x0801bc48 30  31   .rodata.str1.4            ascii   INFO%04X:  init sockets fail \\n\n286  0x0001bc68 0x0801bc68 39  40   .rodata.str1.4            ascii   INFO%04X: Reset device when disconnect\\n\n287  0x0001bc90 0x0801bc90 46  47   .rodata.str1.4            ascii   INFO%04X: SoftwareBus Cleaning Up....time %ld\\n\n288  0x0001bcc0 0x0801bcc0 34  35   .rodata.str1.4            ascii   INFO%04X: Softwarebus end time%ld\\n\n289  0x0001bce4 0x0801bce4 47  48   .rodata.str1.4            ascii   INFO%04X: wvalue=%04X wIndex=%04X wLength=%04X\\n\n290  0x0001bd14 0x0801bd14 26  27   .rodata.str1.4            ascii   INFO%04X: start auto bulk\\n\n291  0x0001bd30 0x0801bd30 14  15   .rodata.str1.4            ascii   usbGD AutoBulk\n292  0x0001bd40 0x0801bd40 15  16   .rodata.str1.4            ascii   usbGD AutoBulk2\n293  0x0001bd50 0x0801bd50 30  31   .rodata.str1.4            ascii   INFO%04X: stop auto bulk urb1\\n\n294  0x0001bd70 0x0801bd70 30  31   .rodata.str1.4            ascii   INFO%04X: stop auto bulk urb2\\n\n295  0x0001bd90 0x0801bd90 44  45   .rodata.str1.4            ascii   INFO%04X: cmd not match %02X %02X %02X %02X\\n\n296  0x0001bdc0 0x0801bdc0 15  16   .rodata.str1.4            ascii   usbGD AutoBulk3\n297  0x0001bdd0 0x0801bdd0 15  16   .rodata.str1.4            ascii   usbGD AutoBulk4\n298  0x0001bde0 0x0801bde0 43  44   .rodata.str1.4            ascii   INFO%04X: auto bulk thread already started\\n\n299  0x0001be0c 0x0801be0c 45  46   .rodata.str1.4            ascii   INFO%04X: Already set auto bulk thread stopp\\n\n300  0x0001be3c 0x0801be3c 34  35   .rodata.str1.4            ascii   INFO%04X: hz2w set auto bulk stop\\n\n301  0x0001be60 0x0801be60 30  31   .rodata.str1.4            ascii   INFO%04X: stop auto bulk urb3\\n\n302  0x0001be80 0x0801be80 30  31   .rodata.str1.4            ascii   INFO%04X: stop auto bulk urb4\\n\n303  0x0001bea0 0x0801bea0 76  77   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Fatal error: SoftwareBus_processEP0MsgOut() sbus = NULL\\n\n304  0x0001bef0 0x0801bef0 55  56   .rodata.str1.4            ascii   INFO%04X: _processEP0MsgOut owner err %d requester:%s \\n\n305  0x0001bf28 0x0801bf28 31  32   .rodata.str1.4            ascii   INFO%04X: get string status=%d\\n\n306  0x0001bf48 0x0801bf48 56  57   .rodata.str1.4            ascii   INFO%04X: Out of Memory in SoftwareBus_processEP0MsgOut\\n\n307  0x0001bf84 0x0801bf84 32  33   .rodata.str1.4            ascii   INFO%04X:  setintf device lost \\n\n308  0x0001bfa8 0x0801bfa8 33  34   .rodata.str1.4            ascii   INFO%04X: setInterface status=%d\\n\n309  0x0001bfcc 0x0801bfcc 44  45   .rodata.str1.4            ascii   INFO%04X: SETUP_REQUEST_IN len=%d status=%d\\n\n310  0x0001bffc 0x0801bffc 45  46   .rodata.str1.4            ascii   INFO%04X: SETUP_REQUEST_OUT len=%d status=%d\\n\n311  0x0001c02c 0x0801c02c 57  58   .rodata.str1.4            ascii   INFO%04X:  SoftwareBus_processEP0MsgOut error : func %d \\n\n312  0x0001c068 0x0801c068 39  40   .rodata.str1.4            ascii   INFO%04X: gv-mvp/vz set auto bulk stop\\n\n313  0x0001c090 0x0801c090 36  37   .rodata.str1.4            ascii   INFO%04X: start auto bulk gv-mvp/vz\\n\n314  0x0001c0b8 0x0801c0b8 32  33   .rodata.str1.4            ascii   INFO%04X: autobulk thread %d up\\n\n315  0x0001c0dc 0x0801c0dc 54  55   .rodata.str1.4            ascii   INFO%04X: usbGDAutoBulkThread set socket buf size: %d\\n\n316  0x0001c114 0x0801c114 56  57   .rodata.str1.4            ascii   INFO%04X:  usbGDAutoBulkThread set SO_SNDBUFFORCE fail \\n\n317  0x0001c150 0x0801c150 47  48   .rodata.str1.4            ascii   INFO%04X: auto bulk xfer ret %d len %d...retry\\n\n318  0x0001c180 0x0801c180 55  56   .rodata.str1.4            ascii   INFO%04X: warning: len:%d param->length:%d...drop data\\n\n319  0x0001c1b8 0x0801c1b8 20  21   .rodata.str1.4            ascii   INFO%04X: nsec = %d\\n\n320  0x0001c1d0 0x0801c1d0 21  22   .rodata.str1.4            ascii   INFO%04X: nsec2 = %d\\n\n321  0x0001c1e8 0x0801c1e8 53  54   .rodata.str1.4            ascii   INFO%04X: not errorExit, manually send a error to pc\\n\n322  0x0001c220 0x0801c220 36  37   .rodata.str1.4            ascii   INFO%04X: start gv-mvp-xz auto bulk\\n\n323  0x0001c248 0x0801c248 35  36   .rodata.str1.4            ascii   INFO%04X: start rtl2832u auto bulk\\n\n324  0x0001c26c 0x0801c26c 54  55   .rodata.str1.4            ascii   INFO%04X: Different command version: PC:%02X 302:%02X\\n\n325  0x0001c2a4 0x0801c2a4 77  78   .rodata.str1.4            ascii   INFO%04X: Out of Memory in SoftwareBus_reportSbusClaimOccupiedDeviceResponse\\n\n326  0x0001c2f4 0x0801c2f4 99  100  .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Fatal error: SoftwareBus_reportSbusClaimUnoccupiedDeviceResponse() sbus = NULL\\n\n327  0x0001c358 0x0801c358 76  77   .rodata.str1.4            ascii   INFO%04X: SoftwareBus_reportSbusClaimUnoccupiedDeviceResponse: device lost \\n\n328  0x0001c3a8 0x0801c3a8 79  80   .rodata.str1.4            ascii   INFO%04X: Out of Memory in SoftwareBus_reportSbusClaimUnoccupiedDeviceResponse\\n\n329  0x0001c3f8 0x0801c3f8 31  32   .rodata.str1.4            ascii   INFO%04X: error op code:0x%02x\\n\n330  0x0001c418 0x0801c418 86  87   .rodata.str1.4            ascii   INFO%04X: cmd STARTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT for GIGA_DVBT\\n\n331  0x0001c470 0x0801c470 78  79   .rodata.str1.4            ascii   INFO%04X: cmd STOPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP for GIGA_DVBT\\n\n332  0x0001c4c0 0x0801c4c0 86  87   .rodata.str1.4            ascii   INFO%04X: cmd STARTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT for AVER_DVBT\\n\n333  0x0001c518 0x0801c518 78  79   .rodata.str1.4            ascii   INFO%04X: cmd STOPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP for AVER_DVBT\\n\n334  0x0001c568 0x0801c568 81  82   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Fatal error: SoftwareBus_processNormalEPMsgOut() sbus = NULL\\n\n335  0x0001c5bc 0x0801c5bc 64  65   .rodata.str1.4            ascii   INFO%04X: processNormalEPMsgOut owner err func:%d requester:%s \\n\n336  0x0001c600 0x0801c600 70  71   .rodata.str1.4            ascii   INFO%04X: BULK_IN mallocPageBuf2 failed line %d, size %u, try vmalloc\\n\n337  0x0001c648 0x0801c648 57  58   .rodata.str1.4            ascii   INFO%04X: BULK_IN mallocPageBuf2 64k failed..... line %d\\n\n338  0x0001c684 0x0801c684 76  77   .rodata.str1.4            ascii   INFO%04X: Out of memory in USBSoftwareBus line %d, size %u, try to read 64k\\n\n339  0x0001c6d4 0x0801c6d4 41  42   .rodata.str1.4            ascii   INFO%04X: malloc 64k failed..... line %d\\n\n340  0x0001c700 0x0801c700 54  55   .rodata.str1.4            ascii   INFO%04X: Out of memory in USBSoftwareBus line %d, %u\\n\n341  0x0001c738 0x0801c738 48  49   .rodata.str1.4            ascii   INFO%04X: USB_OUT_ISOC_READ delay, threadCnt:%d\\n\n342  0x0001c76c 0x0801c76c 52  53   .rodata.str1.4            ascii   INFO%04X: isocXfer:usb_submit_urb err:%d reschedule\\n\n343  0x0001c7a4 0x0801c7a4 41  42   .rodata.str1.4            ascii   INFO%04X: isocXfer:usb_submit_urb err:%d\\n\n344  0x0001c7d0 0x0801c7d0 28  29   .rodata.str1.4            ascii   INFO%04X: isoc in status %d\\n\n345  0x0001c7f0 0x0801c7f0 48  49   .rodata.str1.4            ascii   INFO%04X: USBSoftwareBus: invaild function %02X\\n\n346  0x0001c824 0x0801c824 21  22   .rodata.str1.4            ascii   INFO%04X: Bus freed?\\n\n347  0x0001c83c 0x0801c83c 25  26   .rodata.str1.4            ascii   INFO%04X: Socket closed?\\n\n348  0x0001c858 0x0801c858 27  28   .rodata.str1.4            ascii   INFO%04X: devName is NULL \\n\n349  0x0001c874 0x0801c874 42  43   .rodata.str1.4            ascii   INFO%04X: tcpConnector() started... : %s \\n\n350  0x0001c8a0 0x0801c8a0 46  47   .rodata.str1.4            ascii   INFO%04X:  tcpconnect source malloc fail : %d\\n\n351  0x0001c8d0 0x0801c8d0 48  49   .rodata.str1.4            ascii   INFO%04X: tcpConnector() socket create error!!!\\n\n352  0x0001c904 0x0801c904 54  55   .rodata.str1.4            ascii   <3>NERR%04X: %-10s:  tcpConnector() REUSEADDR fail %d\\n\n353  0x0001c93c 0x0801c93c 31  32   .rodata.str1.4            ascii   INFO%04X:  setsockopt fail %d \\n\n354  0x0001c95c 0x0801c95c 42  43   .rodata.str1.4            ascii   INFO%04X: tcpConnector() binding error!!!\\n\n355  0x0001c988 0x0801c988 44  45   .rodata.str1.4            ascii   INFO%04X: tcpConnector() listening error!!!\\n\n356  0x0001c9b8 0x0801c9b8 42  43   .rodata.str1.4            ascii   INFO%04X:  tcpconnecter accept error : %d\\n\n357  0x0001c9e4 0x0801c9e4 25  26   .rodata.str1.4            ascii   INFO%04X:  kmalloc fail \\n\n358  0x0001ca00 0x0801ca00 38  39   .rodata.str1.4            ascii   INFO%04X: new connection from %s : %p\\n\n359  0x0001ca28 0x0801ca28 13  14   .rodata.str1.4            ascii   run_init_sbus\n360  0x0001ca38 0x0801ca38 35  36   .rodata.str1.4            ascii   INFO%04X: tcpConnector thread exit\\n\n361  0x0001ca5c 0x0801ca5c 20  21   .rodata.str1.4            ascii   disable_pure_storage\n362  0x0001ca80 0x0801ca80 5   6    .rodata.str1.4            ascii   1-1.1\n363  0x0001ca88 0x0801ca88 5   6    .rodata.str1.4            ascii   1-1.2\n364  0x0001ca90 0x0801ca90 5   6    .rodata.str1.4            ascii   1-1.3\n365  0x0001ca98 0x0801ca98 5   6    .rodata.str1.4            ascii   1-1.4\n366  0x0001caa0 0x0801caa0 5   6    .rodata.str1.4            ascii   1-1.5\n367  0x0001caa8 0x0801caa8 5   6    .rodata.str1.4            ascii   1-1.6\n368  0x0001cab0 0x0801cab0 5   6    .rodata.str1.4            ascii   1-1.7\n369  0x0001cab8 0x0801cab8 5   6    .rodata.str1.4            ascii   1-1.8\n370  0x0001cac0 0x0801cac0 7   8    .rodata.str1.4            ascii   1-1.4.1\n371  0x0001cac8 0x0801cac8 7   8    .rodata.str1.4            ascii   1-1.4.2\n372  0x0001cad0 0x0801cad0 7   8    .rodata.str1.4            ascii   1-1.4.3\n373  0x0001cad8 0x0801cad8 7   8    .rodata.str1.4            ascii   1-1.4.4\n374  0x0001cae0 0x0801cae0 7   8    .rodata.str1.4            ascii   1-1.4.5\n375  0x0001cae8 0x0801cae8 29  30   .rodata.str1.4            ascii   INFO%04X: unknown portMod %d\\n\n376  0x0001cb08 0x0801cb08 43  44   .rodata.str1.4            ascii   INFO%04X: devMode: unknown port number=%s.\\n\n377  0x0001cb34 0x0801cb34 33  34   .rodata.str1.4            ascii   INFO%04X:  error : tmpBufLen %d \\n\n378  0x0001cb58 0x0801cb58 41  42   .rodata.str1.4            ascii   INFO%04X:  error : tmpBuf NULL : size %d\\n\n379  0x0001cb84 0x0801cb84 39  40   .rodata.str1.4            ascii   INFO%04X:  report new configDesc NULL \\n\n380  0x0001cbac 0x0801cbac 28  29   .rodata.str1.4            ascii   INFO%04X:  productStr : %s \\n\n381  0x0001cbcc 0x0801cbcc 35  36   .rodata.str1.4            ascii   INFO%04X:  phyDev->product = NULL \\n\n382  0x0001cbf0 0x0801cbf0 33  34   .rodata.str1.4            ascii   INFO%04X:  manufacturerStr : %s \\n\n383  0x0001cc14 0x0801cc14 40  41   .rodata.str1.4            ascii   INFO%04X:  phyDev->manufacturer = NULL \\n\n384  0x0001cc40 0x0801cc40 27  28   .rodata.str1.4            ascii   INFO%04X:  serialStr : %s \\n\n385  0x0001cc5c 0x0801cc5c 34  35   .rodata.str1.4            ascii   INFO%04X:  phyDev->serial = NULL \\n\n386  0x0001cc80 0x0801cc80 67  68   .rodata.str1.4            ascii   INFO%04X: devMode: unknown port number=%d. Use default NETUSB_MODE\\n\n387  0x0001ccc4 0x0801ccc4 5   6    .rodata.str1.4            ascii   %s@%s\n388  0x0001ccd0 0x0801ccd0 44  45   .rodata.str1.4            ascii   INFO%04X:  sbus %p deviceInfo %p not found.\\n\n389  0x0001cd00 0x0801cd00 71  72   .rodata.str1.4            ascii   INFO%04X:  attachDevice : sbus %p , deviceInfo %p has already existed \\n\n390  0x0001cd48 0x0801cd48 31  32   .rodata.str1.4            ascii   INFO%04X:  storage %p with HID\\n\n391  0x0001cd68 0x0801cd68 9   10   .rodata.str1.4            ascii   interrupt\n392  0x0001cd74 0x0801cd74 39  40   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Error: intf = NULL\\n\n393  0x0001cd9c 0x0801cd9c 38  39   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: deviceInfo = NULL\\n\n394  0x0001cdc4 0x0801cdc4 38  39   .rodata.str1.4            ascii   INFO%04X: getDeviceIndex error return\\n\n395  0x0001cdec 0x0801cdec 49  50   .rodata.str1.4            ascii   INFO%04X: USBArbitrator::removeDevice() buggy !!\\n\n396  0x0001ce20 0x0801ce20 68  69   .rodata.str1.4            ascii   INFO%04X: handleClaimDeviceRequest_local() : No such device found !\\n\n397  0x0001ce68 0x0801ce68 54  55   .rodata.str1.4            ascii   INFO%04X:  pure mass-storage and server mode, fail it\\n\n398  0x0001cea0 0x0801cea0 47  48   .rodata.str1.4            ascii   INFO%04X:  flow handleForceClaimDeviceRequest \\n\n399  0x0001ced0 0x0801ced0 79  80   .rodata.str1.4            ascii   INFO%04X: forcelink failed: DeviceLockedByUser=%d, releaseDeviceWhenIdleTime=0\\n\n400  0x0001cf20 0x0801cf20 72  73   .rodata.str1.4            ascii   INFO%04X: forcelink failed: DeviceLockedByUser=%d, timeToAutoRelease=%u\\n\n401  0x0001cf6c 0x0801cf6c 52  53   .rodata.str1.4            ascii   INFO%04X: forcelink failed: timeToKeepDeviceBusy=%u\\n\n402  0x0001cfa4 0x0801cfa4 67  68   .rodata.str1.4            ascii   INFO%04X: forcelink failed: deviceNotIdle lastLargeDataXferTime=%d\\n\n403  0x0001cfe8 0x0801cfe8 47  48   .rodata.str1.4            ascii   INFO%04X: forcelink failed: device just linked\\n\n404  0x0001d018 0x0801d018 48  49   .rodata.str1.4            ascii   INFO%04X: force link ok 1.. owner from %s to %s\\n\n405  0x0001d04c 0x0801d04c 47  48   .rodata.str1.4            ascii   INFO%04X: force link ok 2.. counter=%d name:%s\\n\n406  0x0001d07c 0x0801d07c 67  68   .rodata.str1.4            ascii   INFO%04X: handleForceClaimDeviceRequest() : No such device found !\\n\n407  0x0001d0c0 0x0801d0c0 46  47   .rodata.str1.4            ascii   INFO%04X:  flow handleSetDeviceMasterRequest \\n\n408  0x0001d0f0 0x0801d0f0 54  55   .rodata.str1.4            ascii   INFO%04X: handleSetDeviceMasterRequest failed line:%d\\n\n409  0x0001d128 0x0801d128 37  38   .rodata.str1.4            ascii   INFO%04X: device master change to %s\\n\n410  0x0001d150 0x0801d150 66  67   .rodata.str1.4            ascii   INFO%04X: handleSetDeviceMasterRequest() : No such device found !\\n\n411  0x0001d194 0x0801d194 30  31   .rodata.str1.4            ascii   INFO%04X: clean device master\\n\n412  0x0001d1b4 0x0801d1b4 35  36   .rodata.str1.4            ascii   INFO%04X:  release, change master \\n\n413  0x0001d1d8 0x0801d1d8 40  41   .rodata.str1.4            ascii   INFO%04X: clean device master : timeout\\n\n414  0x0001d204 0x0801d204 52  53   .rodata.str1.4            ascii   INFO%04X:  flow handleReleaseDeviceRequest owner:%s\\n\n415  0x0001d23c 0x0801d23c 50  51   .rodata.str1.4            ascii   INFO%04X:  flow handleReleaseDeviceRequest_local \\n\n416  0x0001d270 0x0801d270 49  50   .rodata.str1.4            ascii   INFO%04X:  flow handleLockDeviceRequest owner:%s\\n\n417  0x0001d2a4 0x0801d2a4 35  36   .rodata.str1.4            ascii   INFO%04X: clear keepDeviceBusyTime\\n\n418  0x0001d2c8 0x0801d2c8 42  43   .rodata.str1.4            ascii   INFO%04X: clear releaseDeviceWhenIdleTime\\n\n419  0x0001d2f4 0x0801d2f4 62  63   .rodata.str1.4            ascii   INFO%04X: lock device counter=%d releaseDeviceWhenIdleTime=%d\\n\n420  0x0001d334 0x0801d334 72  73   .rodata.str1.4            ascii   INFO%04X: lock device counter=%d releaseDeviceWhenIdleTime=%d no change\\n\n421  0x0001d380 0x0801d380 44  45   .rodata.str1.4            ascii   INFO%04X: lock device failed...owner error!\\n\n422  0x0001d3b0 0x0801d3b0 60  61   .rodata.str1.4            ascii   INFO%04X:  deviceInfo->currentOwner.softwareBus->remoteIP :\\n\n423  0x0001d3f0 0x0801d3f0 54  55   .rodata.str1.4            ascii   INFO%04X:  deviceInfo->currentOwner.softwareBus NULL \\n\n424  0x0001d428 0x0801d428 29  30   .rodata.str1.4            ascii   INFO%04X:  broker->remoteIP \\n\n425  0x0001d448 0x0801d448 34  35   .rodata.str1.4            ascii   INFO%04X:  broker->remoteIP NULL \\n\n426  0x0001d46c 0x0801d46c 52  53   .rodata.str1.4            ascii   INFO%04X: keepDeviceBusyTime error? (%d) reset to 0\\n\n427  0x0001d4a4 0x0801d4a4 57  58   .rodata.str1.4            ascii   INFO%04X: Unlock device counter=%d keepDeviceBusyTime=%d\\n\n428  0x0001d4e0 0x0801d4e0 67  68   .rodata.str1.4            ascii   INFO%04X: Unlock device counter=%d keepDeviceBusyTime=%d no change\\n\n429  0x0001d524 0x0801d524 34  35   .rodata.str1.4            ascii   INFO%04X:  unlock, change master \\n\n430  0x0001d548 0x0801d548 48  49   .rodata.str1.4            ascii   INFO%04X:  --- checkSBusTimeoutThread start ---\\n\n431  0x0001d57c 0x0801d57c 36  37   .rodata.str1.4            ascii   INFO%04X:  error : lastXferTime %d \\n\n432  0x0001d5a4 0x0801d5a4 46  47   .rodata.str1.4            ascii   INFO%04X:  --- checkSBusTimeoutThread end ---\\n\n433  0x0001d5d4 0x0801d5d4 51  52   .rodata.str1.4            ascii   INFO%04X:  flow handleUnlockDeviceRequest owner:%s\\n\n434  0x0001d608 0x0801d608 45  46   .rodata.str1.4            ascii   INFO%04X: Unlock device error...owner error \\n\n435  0x0001d638 0x0801d638 59  60   .rodata.str1.4            ascii   INFO%04X:  deviceInfo->currentOwner.softwareBus->remoteIP \\n\n436  0x0001d674 0x0801d674 22  23   .rodata.str1.4            ascii   INFO%04X: find device\\n\n437  0x0001d68c 0x0801d68c 23  24   .rodata.str1.4            ascii   INFO%04X:  dev = NULL \\n\n438  0x0001d6a4 0x0801d6a4 58  59   .rodata.str1.4            ascii   INFO%04X:  usb_ifnum_to_if fail : dev %p, interfaceNO %d \\n\n439  0x0001d6e0 0x0801d6e0 33  34   .rodata.str1.4            ascii   INFO%04X: err currentOwner : %s \\n\n440  0x0001d704 0x0801d704 27  28   .rodata.str1.4            ascii   INFO%04X: err broker : %s \\n\n441  0x0001d720 0x0801d720 22  23   .rodata.str1.4            ascii   checkSBusTimeoutThread\n442  0x0001d738 0x0801d738 36  37   .rodata.str1.4            ascii   INFO%04X: cleanup_usbArbitrator end\\n\n443  0x0001d760 0x0801d760 32  33   .rodata.str1.4            ascii   INFO%04X:  filter audio device \\n\n444  0x0001d784 0x0801d784 35  36   .rodata.str1.4            ascii   INFO%04X:  filter pure storage dev\\n\n445  0x0001d7a8 0x0801d7a8 46  47   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Fatal error: intf is NULL\\n\n446  0x0001d7d8 0x0801d7d8 45  46   .rodata.str1.4            ascii   <3>NERR%04X: %-10s: Fatal error: dev is NULL\\n\n447  0x0001d808 0x0801d808 16  17   .rodata.str1.4            ascii   INFO%04X: isHub\\n\n448  0x0001d81c 0x0801d81c 26  27   .rodata.str1.4            ascii   INFO%04X:  dev bus_id %s \\n\n449  0x0001d838 0x0801d838 29  30   .rodata.str1.4            ascii   INFO%04X:  control driver %s\\n\n450  0x0001d858 0x0801d858 31  32   .rodata.str1.4            ascii   INFO%04X:  bInterfaceClass %d \\n\n451  0x0001d878 0x0801d878 27  28   .rodata.str1.4            ascii   INFO%04X: deviceInfo error\\n\n452  0x0001d894 0x0801d894 60  61   .rodata.str1.4            ascii   INFO%04X:  dev %p : dev->actconfig->desc.bNumInterfaces %d \\n\n453  0x0001d8d4 0x0801d8d4 34  35   .rodata.str1.4            ascii   INFO%04X:  usblp probe fail : %d \\n\n454  0x0001d8f8 0x0801d8f8 39  40   .rodata.str1.4            ascii   INFO%04X:  dump with device Desc type \\n\n455  0x0001d920 0x0801d920 52  53   .rodata.str1.4            ascii   INFO%04X:  bLength             0x%02X  : Desc size \\n\n456  0x0001d958 0x0801d958 52  53   .rodata.str1.4            ascii   INFO%04X:  bDescriptorType     0x%02X  : Desc type \\n\n457  0x0001d990 0x0801d990 52  53   .rodata.str1.4            ascii   INFO%04X:  bcdUSB            0x%04X  : USB version \\n\n458  0x0001d9c8 0x0801d9c8 60  61   .rodata.str1.4            ascii   INFO%04X:  bDeviceClass        0x%02X  : device class code \\n\n459  0x0001da08 0x0801da08 63  64   .rodata.str1.4            ascii   INFO%04X:  bDeviceSubClass     0x%02X  : device subclass code \\n\n460  0x0001da48 0x0801da48 56  57   .rodata.str1.4            ascii   INFO%04X:  bDeviceProtocol     0x%02X  : protocol code \\n\n461  0x0001da84 0x0801da84 67  68   .rodata.str1.4            ascii   INFO%04X:  bMaxPacketSize0     0x%02X  : max packet size for ep 0 \\n\n462  0x0001dac8 0x0801dac8 51  52   .rodata.str1.4            ascii   INFO%04X:  idVendor          0x%04X  :  vendor ID \\n\n463  0x0001dafc 0x0801dafc 51  52   .rodata.str1.4            ascii   INFO%04X:  idProduct         0x%04X  : product ID \\n\n464  0x0001db30 0x0801db30 62  63   .rodata.str1.4            ascii   INFO%04X:  bcdDevice         0x%04X  : device release numver \\n\n465  0x0001db70 0x0801db70 76  77   .rodata.str1.4            ascii   INFO%04X:  iManufacturer       0x%02X  : index of manufacturer string desc \\n\n466  0x0001dbc0 0x0801dbc0 71  72   .rodata.str1.4            ascii   INFO%04X:  iProduct            0x%02X  : index of product string desc \\n\n467  0x0001dc08 0x0801dc08 77  78   .rodata.str1.4            ascii   INFO%04X:  iSerialNumber       0x%02X  : index of serial number string desc \\n\n468  0x0001dc58 0x0801dc58 67  68   .rodata.str1.4            ascii   INFO%04X:  bNumConfigurations  0x%02X  : number of configurations \\n\n469  0x0001dc9c 0x0801dc9c 54  55   .rodata.str1.4            ascii   INFO%04X:  unknown device type : 0x%02X , len 0x%02X \\n\n470  0x0001dcd4 0x0801dcd4 39  40   .rodata.str1.4            ascii   INFO%04X:  dump with config Desc type \\n\n471  0x0001dcfc 0x0801dcfc 58  59   .rodata.str1.4            ascii   INFO%04X:  wTotalLength      0x%04X  : total config Size \\n\n472  0x0001dd38 0x0801dd38 64  65   .rodata.str1.4            ascii   INFO%04X:  bNumInterfaces      0x%02X  : numbers of interfaces \\n\n473  0x0001dd7c 0x0801dd7c 70  71   .rodata.str1.4            ascii   INFO%04X:  bConfigurationValue 0x%02X  : value to select this config \\n\n474  0x0001ddc4 0x0801ddc4 85  86   .rodata.str1.4            ascii   INFO%04X:  iConfiguration      0x%02X  : index of string Desc to describe self Desc \\n\n475  0x0001de1c 0x0801de1c 55  56   .rodata.str1.4            ascii   INFO%04X:  bmAttributes        0x%02X  : powered attr \\n\n476  0x0001de54 0x0801de54 68  69   .rodata.str1.4            ascii   INFO%04X:  bMaxPower           0x%02X  : maxumum power consumption \\n\n477  0x0001de9c 0x0801de9c 54  55   .rodata.str1.4            ascii   INFO%04X:  unknown config type : 0x%02X , len 0x%02X \\n\n478  0x0001ded4 0x0801ded4 50  51   .rodata.str1.4            ascii   INFO%04X:  this interface type is class specific \\n\n479  0x0001df08 0x0801df08 60  61   .rodata.str1.4            ascii   INFO%04X:  this interface class is USB_CLASS_PER_INTERFACE \\n\n480  0x0001df48 0x0801df48 42  43   .rodata.str1.4            ascii   INFO%04X:  this interface class is Audio \\n\n481  0x0001df74 0x0801df74 51  52   .rodata.str1.4            ascii   INFO%04X:  this interface class is USB_CLASS_COMM \\n\n482  0x0001dfa8 0x0801dfa8 50  51   .rodata.str1.4            ascii   INFO%04X:  this interface class is USB_CLASS_HID \\n\n483  0x0001dfdc 0x0801dfdc 55  56   .rodata.str1.4            ascii   INFO%04X:  this interface class is USB_CLASS_PHYSICAL \\n\n484  0x0001e014 0x0801e014 58  59   .rodata.str1.4            ascii   INFO%04X:  this interface class is USB_CLASS_STILL_IMAGE \\n\n485  0x0001e050 0x0801e050 44  45   .rodata.str1.4            ascii   INFO%04X:  this interface class is printer \\n\n486  0x0001e080 0x0801e080 49  50   .rodata.str1.4            ascii   INFO%04X:  this interface class is MASS STORAGE \\n\n487  0x0001e0b4 0x0801e0b4 40  41   .rodata.str1.4            ascii   INFO%04X:  this interface class is Hub \\n\n488  0x0001e0e0 0x0801e0e0 55  56   .rodata.str1.4            ascii   INFO%04X:  this interface class is USB_CLASS_CDC_DATA \\n\n489  0x0001e118 0x0801e118 52  53   .rodata.str1.4            ascii   INFO%04X:  this interface class is USB_CLASS_CSCID \\n\n490  0x0001e150 0x0801e150 58  59   .rodata.str1.4            ascii   INFO%04X:  this interface class is USB_CLASS_CONTENT_SEC \\n\n491  0x0001e18c 0x0801e18c 42  43   .rodata.str1.4            ascii   INFO%04X:  this interface class is Video \\n\n492  0x0001e1b8 0x0801e1b8 66  67   .rodata.str1.4            ascii   INFO%04X:  this interface class is USB_CLASS_WIRELESS_CONTROLLER \\n\n493  0x0001e1fc 0x0801e1fc 55  56   .rodata.str1.4            ascii   INFO%04X:  this interface class is USB_CLASS_APP_SPEC \\n\n494  0x0001e234 0x0801e234 58  59   .rodata.str1.4            ascii   INFO%04X:  this interface class is USB_CLASS_VENDOR_SPEC \\n\n495  0x0001e270 0x0801e270 49  50   .rodata.str1.4            ascii   INFO%04X:  this interface class is unknown %02X \\n\n496  0x0001e2a4 0x0801e2a4 42  43   .rodata.str1.4            ascii   INFO%04X:  dump with interface Desc type \\n\n497  0x0001e2d0 0x0801e2d0 51  52   .rodata.str1.4            ascii   INFO%04X:  bLength             0x%02X : Desc size \\n\n498  0x0001e304 0x0801e304 51  52   .rodata.str1.4            ascii   INFO%04X:  bDescriptorType     0x%02X : Desc type \\n\n499  0x0001e338 0x0801e338 58  59   .rodata.str1.4            ascii   INFO%04X:  bInterfaceNumber    0x%02X : interface number \\n\n500  0x0001e374 0x0801e374 65  66   .rodata.str1.4            ascii   INFO%04X:  bAlternateSetting   0x%02X : value to select setting \\n\n501  0x0001e3b8 0x0801e3b8 62  63   .rodata.str1.4            ascii   INFO%04X:  bNumEndpoints       0x%02X : numbers of endpoints \\n\n502  0x0001e3f8 0x0801e3f8 62  63   .rodata.str1.4            ascii   INFO%04X:  bInterfaceClass     0x%02X : interface class code \\n\n503  0x0001e438 0x0801e438 65  66   .rodata.str1.4            ascii   INFO%04X:  bInterfaceSubClass  0x%02X : interface subclass code \\n\n504  0x0001e47c 0x0801e47c 55  56   .rodata.str1.4            ascii   INFO%04X:  bInterfaceProtocol  0x%02X : protocol code \\n\n505  0x0001e4b4 0x0801e4b4 84  85   .rodata.str1.4            ascii   INFO%04X:  iInterface          0x%02X : index of string desc to describe self Desc \\n\n506  0x0001e50c 0x0801e50c 57  58   .rodata.str1.4            ascii   INFO%04X:  unknown interface type : 0x%02X , len 0x%02X \\n\n507  0x0001e548 0x0801e548 47  48   .rodata.str1.4            ascii   INFO%04X:  dump with Audio endpoint Desc type \\n\n508  0x0001e578 0x0801e578 41  42   .rodata.str1.4            ascii   INFO%04X:  dump with endpoint Desc type \\n\n509  0x0001e5a4 0x0801e5a4 49  50   .rodata.str1.4            ascii   INFO%04X:  bLength           0x%02X : Desc size \\n\n510  0x0001e5d8 0x0801e5d8 49  50   .rodata.str1.4            ascii   INFO%04X:  bDescriptorType   0x%02X : Desc type \\n\n511  0x0001e60c 0x0801e60c 56  57   .rodata.str1.4            ascii   INFO%04X:  bEndpointAddress  0x%02X : endpoint Address \\n\n512  0x0001e648 0x0801e648 53  54   .rodata.str1.4            ascii   INFO%04X:  bmAttributes      0x%02X : endpoint type \\n\n513  0x0001e680 0x0801e680 57  58   .rodata.str1.4            ascii   INFO%04X:  wMaxPacketSize  0x%04X : maximum packet size \\n\n514  0x0001e6bc 0x0801e6bc 69  70   .rodata.str1.4            ascii   INFO%04X:  bInterval         0x%02X : polling interval of transfers \\n\n515  0x0001e704 0x0801e704 53  54   .rodata.str1.4            ascii   INFO%04X:  bRefresh          0x%02X : Refresh Rate  \\n\n516  0x0001e73c 0x0801e73c 65  66   .rodata.str1.4            ascii   INFO%04X:  bSynchAddress     0x%02X : Synchronization Endpoint  \\n\n517  0x0001e780 0x0801e780 55  56   .rodata.str1.4            ascii   INFO%04X:  unknown endpoint type : 0x%02X , len 0x%02X\\n\n518  0x0001e7b8 0x0801e7b8 52  53   .rodata.str1.4            ascii   INFO%04X:  ---------- config parse start ----------\\n\n519  0x0001e7f0 0x0801e7f0 11  12   .rodata.str1.4            ascii   INFO%04X: \\n\n520  0x0001e7fc 0x0801e7fc 52  53   .rodata.str1.4            ascii   INFO%04X:  type : USB_DT_DEVICE 0x%02X, len 0x%02X \\n\n521  0x0001e834 0x0801e834 55  56   .rodata.str1.4            ascii   INFO%04X:  type : USB_DT_CS_DEVICE 0x%02X, len 0x%02X \\n\n522  0x0001e86c 0x0801e86c 49  50   .rodata.str1.4            ascii   INFO%04X:  type : USB STRING 0x%02X, len 0x%02X \\n\n523  0x0001e8a0 0x0801e8a0 57  58   .rodata.str1.4            ascii   INFO%04X:  type : USB_DT_OTHER_SPEED_CONFIG, len 0x%02X \\n\n524  0x0001e8dc 0x0801e8dc 54  55   .rodata.str1.4            ascii   INFO%04X:  type : USB_DT_INTERFACE_POWER, len 0x%02X \\n\n525  0x0001e914 0x0801e914 47  48   .rodata.str1.4            ascii   INFO%04X:  unknown type : 0x%02X , len 0x%02X \\n\n526  0x0001e944 0x0801e944 33  34   .rodata.str1.4            ascii   INFO%04X:  total parse %d bytes \\n\n527  0x0001e968 0x0801e968 50  51   .rodata.str1.4            ascii   INFO%04X:  ---------- config parse end ----------\\n\n528  0x0001e99c 0x0801e99c 43  44   .rodata.str1.4            ascii   INFO%04X:  --- dump usb all Desc start ---\\n\n529  0x0001e9c8 0x0801e9c8 41  42   .rodata.str1.4            ascii   INFO%04X:  this device has %d config(s) \\n\n530  0x0001e9f4 0x0801e9f4 37  38   .rodata.str1.4            ascii   INFO%04X:  get device desc fail : %d\\n\n531  0x0001ea1c 0x0801ea1c 41  42   .rodata.str1.4            ascii   INFO%04X:  -- config index %d : start --\\n\n532  0x0001ea48 0x0801ea48 43  44   .rodata.str1.4            ascii   INFO%04X:  get first config desc fail : %d\\n\n533  0x0001ea74 0x0801ea74 35  36   .rodata.str1.4            ascii   INFO%04X:  malloc msgBuf fail : %d\\n\n534  0x0001ea98 0x0801ea98 39  40   .rodata.str1.4            ascii   INFO%04X:  -- config index %d : end --\\n\n535  0x0001eac0 0x0801eac0 41  42   .rodata.str1.4            ascii   INFO%04X:  --- dump usb all Desc end ---\\n\n536  0x0001eaec 0x0801eaec 42  43   .rodata.str1.4            ascii   INFO%04X: LocalBroker register USB Driver\\n\n537  0x0001eb18 0x0801eb18 54  55   .rodata.str1.4            ascii   INFO%04X: netusb mode, pass mass storage interface %d\\n\n538  0x0001eb50 0x0801eb50 57  58   .rodata.str1.4            ascii   INFO%04X: Interface %d is a mass storage in MFP, pass it\\n\n539  0x0001eb8c 0x0801eb8c 63  64   .rodata.str1.4            ascii   INFO%04X: local probe(): netusb mode, pass mass storage device\\n\n540  0x0001ebcc 0x0801ebcc 36  37   .rodata.str1.4            ascii   INFO%04X: USBLocalBroker_disconnect\\n\n541  0x0001ebf4 0x0801ebf4 68  69   .rodata.str1.4            ascii   INFO%04X: local disconnect(): netusb mode, pass mass storage device\\n\n542  0x0001ec3c 0x0801ec3c 62  63   .rodata.str1.4            ascii   INFO%04X: USBLocalBroker : disconnect an un-existed device ? \\n\n543  0x0001ec7c 0x0801ec7c 46  47   .rodata.str1.4            ascii   INFO%04X: An occupied device being claimed ?!\\n\n544  0x0001ecac 0x0801ecac 48  49   .rodata.str1.4            ascii   INFO%04X: An un-existed device being claimed ? \\n\n545  0x0001ece0 0x0801ece0 42  43   .rodata.str1.4            ascii   INFO%04X: A free device being released ?!\\n\n546  0x0001ed0c 0x0801ed0c 49  50   .rodata.str1.4            ascii   INFO%04X: An un-existed device being released ? \\n\n547  0x0001ed40 0x0801ed40 29  30   .rodata.str1.4            ascii   pipe : MALLOC error! size=%d\\n\n548  0x0001ed60 0x0801ed60 12  13   .rodata.str1.4            ascii   &newpipe->wq\n549  0x0001ed70 0x0801ed70 11  12   .rodata.str1.4            ascii   %u.%u.%u.%u\n550  0x0001ed80 0x0801ed80 6   7    .rodata.str1.4            ascii   udpv6d\n551  0x0001ed88 0x0801ed88 6   7    .rodata.str1.4            ascii   tcpv6d\n552  0x0001ed90 0x0801ed90 31  32   .rodata.str1.4            ascii   INFO%04X:  v6 udp socket fail \\n\n553  0x0001edb0 0x0801edb0 39  40   .rodata.str1.4            ascii   INFO%04X:  udp ADD_MEMBERSHIP fail %d \\n\n554  0x0001edd8 0x0801edd8 39  40   .rodata.str1.4            ascii   INFO%04X:  udp MULTICAST_HOPS fail %d \\n\n555  0x0001ee00 0x0801ee00 44  45   .rodata.str1.4            ascii   INFO%04X:  udp SO_BINDTODEVICE fail %d : %s\\n\n556  0x0001ee30 0x0801ee30 39  40   .rodata.str1.4            ascii   INFO%04X:  udp MULTICAST_LOOP fail %d \\n\n557  0x0001ee58 0x0801ee58 33  34   .rodata.str1.4            ascii   INFO%04X:  init v6 udp error %d \\n\n558  0x0001ee7c 0x0801ee7c 28  29   .rodata.str1.4            ascii   INFO%04X:  v6 udp buf NULL \\n\n559  0x0001ee9c 0x0801ee9c 40  41   .rodata.str1.4            ascii   INFO%04X:  v6 udp knnon start: port %d \\n\n560  0x0001eec8 0x0801eec8 7   8    .rodata.str1.4            ascii   ff02::3\n561  0x0001eed0 0x0801eed0 32  33   .rodata.str1.4            ascii   INFO%04X:  v6 get devname fail \\n\n562  0x0001eef4 0x0801eef4 32  33   .rodata.str1.4            ascii   INFO%04X:  v6 udp annou end %d \\n\n563  0x0001ef18 0x0801ef18 39  40   .rodata.str1.4            ascii   INFO%04X:  v6 udp annou wait to close \\n\n564  0x0001ef40 0x0801ef40 24  25   .rodata.str1.4            ascii   INFO%04X:  socket fail \\n\n565  0x0001ef5c 0x0801ef5c 34  35   .rodata.str1.4            ascii   INFO%04X:  set REUSEADDR fail %d \\n\n566  0x0001ef80 0x0801ef80 25  26   .rodata.str1.4            ascii   INFO%04X:  bind fail %d \\n\n567  0x0001ef9c 0x0801ef9c 27  28   .rodata.str1.4            ascii   INFO%04X:  listen fail %d \\n\n568  0x0001efb8 0x0801efb8 27  28   .rodata.str1.4            ascii   INFO%04X:  accept fail %d \\n\n569  0x0001efd4 0x0801efd4 25  26   .rodata.str1.4            ascii   INFO%04X:  kmalloc fail \\n\n570  0x0001eff0 0x0801eff0 13  14   .rodata.str1.4            ascii   run_init_sbus\n571  0x0001f000 0x0801f000 40  41   .rodata.str1.4            ascii   INFO%04X:  v6 tcp conn start : port %d \\n\n572  0x0001f02c 0x0801f02c 30  31   .rodata.str1.4            ascii   INFO%04X:  v6 tcp ser end %d \\n\n573  0x0001f04c 0x0801f04c 34  35   .rodata.str1.4            ascii   INFO%04X:  v6 tcp ser wait close \\n\n574  0x0001f070 0x0801f070 44  45   .rodata.str1.4            ascii   INFO%04X: addr_cmp input err: s1 %p, s2 %p \\n\n575  0x0001f0a0 0x0801f0a0 14  15   .rodata.str1.4            ascii   <1> V4 : %08X\\n\n576  0x0001f0b0 0x0801f0b0 81  82   .rodata.str1.4            ascii   <1> V6 : %02X%02X:%02X%02X:%02X%02X:%02X%02X:%02X%02X:%02X%02X:%02X%02X:%02X%02X\\n\n577  0x0001f104 0x0801f104 18  19   .rodata.str1.4            ascii   <1> V-comp : %08X\\n\n578  0x0001f118 0x0801f118 28  29   .rodata.str1.4            ascii   <1> V-err : family error %d\\n\n579  0x0001f138 0x0801f138 35  36   .rodata.str1.4            ascii   <1>kc %4d : dbgd client close  %p \\n\n580  0x0001f15c 0x0801f15c 58  59   .rodata.str1.4            ascii   <1>kc %4d : dbgd acktelnetDBGDServer thread exit time %ld\\n\n581  0x0001f198 0x0801f198 8   9    .rodata.str1.4            ascii   &x->wait\n582  0x0001f1a4 0x0801f1a4 12  13   .rodata.str1.4            ascii    telnetDBGD\n583  0x0001f1b4 0x0801f1b4 15  16   .rodata.str1.4            ascii    acktelnetDBGD\n584  0x0001f1c4 0x0801f1c4 28  29   .rodata.str1.4            ascii   <1>kc %4d : init_DebugD end\\n\n585  0x0001f1e4 0x0801f1e4 21  22   .rodata.str1.4            ascii    connect success %p \\n\n586  0x0001f1fc 0x0801f1fc 24  25   .rodata.str1.4            ascii    NetUSB %s, 2009, %08X \\n\n587  0x0001f218 0x0801f218 7   8    .rodata.str1.4            ascii   1.02.76\n588  0x0001f220 0x0801f220 11  12   .rodata.str1.4            ascii    AUTH ISOC\\n\n589  0x0001f22c 0x0801f22c 30  31   .rodata.str1.4            ascii    MOVE_HEAD emb_lp filterAudio\\n\n590  0x0001f24c 0x0801f24c 40  41   .rodata.str1.4            ascii   <1>kc %4d : run_telnetDBGDServer start \\n\n591  0x0001f278 0x0801f278 30  31   .rodata.str1.4            ascii   <1>kc %4d : dbgd socket fail \\n\n592  0x0001f298 0x0801f298 42  43   .rodata.str1.4            ascii   <1>kc %4d : dbgd set reuseaddr fail : %d \\n\n593  0x0001f2c4 0x0801f2c4 33  34   .rodata.str1.4            ascii   <1>kc %4d : dbgd bind fail : %d \\n\n594  0x0001f2e8 0x0801f2e8 28  29   .rodata.str1.4            ascii   <1>kc %4d : dbgd listen fail\n595  0x0001f308 0x0801f308 35  36   .rodata.str1.4            ascii   <1>kc %4d : dbgd accept fail : %d \\n\n596  0x0001f32c 0x0801f32c 39  40   .rodata.str1.4            ascii   <1>kc %4d : dbgd client connect ok %p \\n\n597  0x0001f354 0x0801f354 43  44   .rodata.str1.4            ascii   <1>kc %4d : dbgd connect full : close  %p \\n\n598  0x0001f380 0x0801f380 43  44   .rodata.str1.4            ascii   <1>kc %4d : dbgd run_telnetDBGDServer end \\n\n599  0x0001f3ac 0x0801f3ac 35  36   .rodata.str1.4            ascii   <1>kc %4d : dbgd server close  %p \\n\n600  0x0001f3d0 0x0801f3d0 5   6    .rodata.str1.4            ascii   <1>%s\n601  0x0001f3d8 0x0801f3d8 8   9    .rodata.str1.4            ascii   &x->wait\n602  0x0001f3e4 0x0801f3e4 43  44   .rodata.str1.4            ascii   INFO%04X: wait for all thread finish : %d \\n\n603  0x0001f410 0x0801f410 37  38   .rodata.str1.4            ascii   INFO%04X:  waiting thread name : %s \\n\n604  0x0001f438 0x0801f438 38  39   .rodata.str1.4            ascii   INFO%04X:  kmalloc livingNode fail ! \\n\n605  0x0001f460 0x0801f460 25  26   .rodata.str1.4            ascii   INFO%04X: portNum err %d\\n\n606  0x0001f47c 0x0801f47c 8   9    .rodata.str1.4            ascii   %d : %s\\n\n607  0x0001f488 0x0801f488 14  15   .rodata.str1.4            ascii     product: %s\\n\n608  0x0001f498 0x0801f498 19  20   .rodata.str1.4            ascii     manufacturer: %s\\n\n609  0x0001f4ac 0x0801f4ac 13  14   .rodata.str1.4            ascii     serial: %s\\n\n610  0x0001f4bc 0x0801f4bc 30  31   .rodata.str1.4            ascii   INFO%04X:  deviceInfo NULL ! \\n\n611  0x0001f4dc 0x0801f4dc 6   7    .rodata.str1.4            ascii   kernel\n612  0x0001f4e4 0x0801f4e4 37  38   .rodata.str1.4            ascii   INFO%04X:  init proc : PAGE_SIZE %lu\\n\n613  0x0001f510 0x0801f510 6   7    .rodata.str1.4            ascii   device\n614  0x0001f518 0x0801f518 28  29   .rodata.str1.4            ascii   INFO%04X:  clean proc node \\n\n615  0x0001f538 0x0801f538 72  73   .rodata.str1.4            ascii   INFO%04X: Disabling reads from problem bidirectional printer on usblp%d\\n\n616  0x0001f584 0x0801f584 59  60   .rodata.str1.4            ascii   <3>NetUSB: can't set desired altsetting %d on interface %d\\n\n617  0x0001f5c0 0x0801f5c0 64  65   .rodata.str1.4            ascii   INFO%04X: usblp%d: nonzero read/write bulk status received: %d \\n\n618  0x0001f604 0x0801f604 63  64   .rodata.str1.4            ascii   INFO%04X: usblp%d: nonzero read/write bulk status received: %d\\n\n619  0x0001f644 0x0801f644 46  47   .rodata.str1.4            ascii   INFO%04X:  usblp minor %d does not have intf \\n\n620  0x0001f674 0x0801f674 28  29   .rodata.str1.4            ascii   INFO%04X:  usblp lock fail \\n\n621  0x0001f694 0x0801f694 45  46   .rodata.str1.4            ascii   INFO%04X: %s end : lock fail : count %d : 01\\n\n622  0x0001f6c4 0x0801f6c4 24  25   .rodata.str1.4            ascii   INFO%04X: kmalloc error\\n\n623  0x0001f6e0 0x0801f6e0 34  35   .rodata.str1.4            ascii   INFO%04X: copy_from_user error:%d\\n\n624  0x0001f704 0x0801f704 55  56   .rodata.str1.4            ascii   INFO%04X: lp write error:%d, count %d actual_length:%d\\n\n625  0x0001f73c 0x0801f73c 50  51   .rodata.str1.4            ascii   <3>NetUSB: usblp%d: error %d reading from printer\\n\n626  0x0001f770 0x0801f770 50  51   .rodata.str1.4            ascii   <3>NetUSB: usblp%d: error = %d setting HP channel\\n\n627  0x0001f7a4 0x0801f7a4 50  51   .rodata.str1.4            ascii   <3>NetUSB: usblp%d: failed reading printer status\\n\n628  0x0001f7e0 0x0801f7e0 35  36   .rodata.str1.4            ascii   <3>NetUSB: out of memory for usblp\\n\n629  0x0001f804 0x0801f804 12  13   .rodata.str1.4            ascii   &usblp->wmut\n630  0x0001f814 0x0801f814 11  12   .rodata.str1.4            ascii   &usblp->mut\n631  0x0001f820 0x0801f820 12  13   .rodata.str1.4            ascii   &usblp->wait\n632  0x0001f830 0x0801f830 25  26   .rodata.str1.4            ascii   <3>NetUSB: out of memory\\n\n633  0x0001f84c 0x0801f84c 46  47   .rodata.str1.4            ascii   <3>NetUSB: out of memory for device_id_string\\n\n634  0x0001f87c 0x0801f87c 39  40   .rodata.str1.4            ascii   <3>NetUSB: out of memory for write buf\\n\n635  0x0001f8a4 0x0801f8a4 38  39   .rodata.str1.4            ascii   <3>NetUSB: out of memory for read buf\\n\n636  0x0001f8cc 0x0801f8cc 39  40   .rodata.str1.4            ascii   <3>NetUSB: out of memory for statusbuf\\n\n637  0x0001f8f4 0x0801f8f4 52  53   .rodata.str1.4            ascii   <3>NetUSB: Not able to get a minor for this device.\\n\n638  0x0001f92c 0x0801f92c 34  35   .rodata.str1.4            ascii   INFO%04X:  usblp->minor %d >= %d \\n\n639  0x0001f950 0x0801f950 101 102  .rodata.str1.4            ascii   INFO%04X: kc usblp%d: USB %sdirectional printer dev %d if %d alt %d proto %d vid 0x%4.4X pid 0x%4.4X\\n\n640  0x0001f9b8 0x0801f9b8 40  41   .rodata.str1.4            ascii   INFO%04X:  usblp get intf %p : minor %d\\n\n641  0x0001f9e4 0x0801f9e4 34  35   .rodata.str1.4            ascii   INFO%04X:  usblp discard intf %p \\n\n642  0x0001fa08 0x0801fa08 28  29   .rodata.str1.4            ascii   <3>NetUSB: bogus disconnect\\n\n643  0x0001fa28 0x0801fa28 46  47   .rodata.str1.4            ascii   INFO%04X:  usblp disconnec intf %p : minor %d\\n\n644  0x0001fa58 0x0801fa58 37  38   .rodata.str1.4            ascii   INFO%04X:  usblpSbus malloc %d fail \\n\n645  0x0001fa80 0x0801fa80 9   10   .rodata.str1.4            ascii   127.0.0.1\n646  0x0001fa8c 0x0801fa8c 10  11   .rodata.str1.4            ascii   emusblp%2d\n647  0x0001fa98 0x0801fa98 29  30   .rodata.str1.4            ascii   INFO%04X:  %d : tunnelID %s \\n\n648  0x0001fab8 0x0801fab8 14  15   .rodata.str1.4            ascii   printer_status\n649  0x0001fac8 0x0801fac8 34  35   .rodata.str1.4            ascii   INFO%04X: usblp create proc fail \\n\n650  0x0001faf8 0x0801faf8 52  53   .rodata.str1.4            ascii   <3>NetUSB: usblp%d: error %d reading printer status\\n\n651  0x0001fb30 0x0801fb30 22  23   .rodata.str1.4            ascii   INFO%04X: usblp%d: %s\\n\n652  0x0001fb48 0x0801fb48 20  21   .rodata.str1.4            ascii   usblp%d\\n%s\\n%s\\n%s\\n%d\\n\n653  0x0001fb60 0x0801fb60 4   5    .rodata.str1.4            ascii   lp%d\n654  0x0001fb6c 0x0801fb6c 12  13   .rodata.str1.4            ascii   out of paper\n655  0x0001fb7c 0x0801fb7c 8   9    .rodata.str1.4            ascii   off-line\n656  0x0001fb88 0x0801fb88 7   8    .rodata.str1.4            ascii   on fire\n657  0x0001fb90 0x0801fb90 37  38   .rodata.str1.4            ascii   INFO%04X: \\t\\tsetupRequestOut Delay 1s\\n\n658  0x0001fbb8 0x0801fbb8 12  13   __ksymtab_strings         ascii   setInterface\n659  0x0001fbc9 0x0801fbc9 32  33   __ksymtab_strings         ascii   USBLocalBroker_registerUSBDriver\n660  0x0001fbec 0x0801fbec 19  20   .modinfo                  ascii   license=Proprietary\n661  0x0001fc00 0x0801fc00 13  14   .modinfo                  ascii   author=KCodes\n662  0x0001fc0e 0x0801fc0e 52  53   .modinfo                  ascii   description=NetUSB module for Linux 2.6 from KCodes.\n663  0x0001fc43 0x0801fc43 34  35   .modinfo                  ascii   description=Nov  3 2015 : 14:05:54\n664  0x0001fc66 0x0801fc66 30  31   .modinfo                  ascii   description=1.02.76 R7800 7423\n665  0x0001fc85 0x0801fc85 41  42   .modinfo                  ascii   description= MOVE_HEAD emb_lp filterAudio\n666  0x0001fcaf 0x0801fcaf 22  23   .modinfo                  ascii   description= AUTH ISOC\n667  0x0001fcc6 0x0801fcc6 28  29   .modinfo                  ascii   parm=bndev:Device to Bind to\n668  0x0001fce3 0x0801fce3 14  15   .modinfo                  ascii   parm=mode:Mode\n669  0x0001fcf2 0x0801fcf2 45  46   .modinfo                  ascii   parm=resetDevice:Reset device when disconnect\n670  0x0001fd20 0x0801fd20 26  27   .modinfo                  ascii   parmtype=resetDevice:short\n671  0x0001fd3b 0x0801fd3b 40  41   .modinfo                  ascii   parm=ppbm: set board type for Port mode\n672  0x0001fd64 0x0801fd64 19  20   .modinfo                  ascii   parmtype=ppbm:charp\n673  0x0001fd78 0x0801fd78 20  21   .modinfo                  ascii   parmtype=bndev:charp\n674  0x0001fd8d 0x0801fd8d 19  20   .modinfo                  ascii   parmtype=mode:charp\n675  0x0001fda4 0x0801fda4 41  42   .modinfo                  ascii   alias=usb:v*p*d*dc*dsc*dp*ic01isc01ip*in*\n676  0x0001fdce 0x0801fdce 45  46   .modinfo                  ascii   alias=usb:v0099p0001d*dc*dsc*dp*ic*isc*ip*in*\n677  0x0001fdfc 0x0801fdfc 39  40   .modinfo                  ascii   alias=usb:v*p*d*dc*dsc*dp*ic*isc*ip*in*\n678  0x0001fe24 0x0801fe24 39  40   .modinfo                  ascii   alias=usb:v*p*d*dc*dsc*dp*ic*isc*ip*in*\n679  0x0001fe4c 0x0801fe4c 39  40   .modinfo                  ascii   alias=usb:v*p*d*dc*dsc*dp*ic*isc*ip*in*\n680  0x0001fe74 0x0801fe74 18  19   .modinfo                  ascii   depends=GPL_NetUSB\n681  0x0001fe87 0x0801fe87 8   9    .modinfo                  ascii   intree=Y\n682  0x0001fe90 0x0801fe90 38  39   .modinfo                  ascii   vermagic=3.4.103 SMP mod_unload ARMv7\n683  0x0001ffdd 0x0801ffdd 5   6    .data                     ascii   \\t(i\\n'\n684  0x0001ffe6 0x0801ffe6 6   7    .data                     ascii   \\f%-\\r%]\n685  0x00020022 0x08020022 8   9    .data                     ascii    !\\!!:\"\n686  0x000202f3 0x080202f3 5   7    .data                     utf8    Ô P\\rt\n687  0x0002038b 0x0802038b 7   8    .data                     ascii   \\fd\\eE\\vpu\n688  0x0002040b 0x0802040b 4   5    .data                     ascii   E\\vp7\n689  0x0002044a 0x0802044a 4   5    .data                     ascii   E\\vp4\n690  0x0002050d 0x0802050d 4   5    .data                     ascii   L-@'\n691  0x0002058c 0x0802058c 4   5    .data                     ascii   E\\vp;\n692  0x000205f3 0x080205f3 4   5    .data                     ascii   E\\vp4\n693  0x0002062f 0x0802062f 4   5    .data                     ascii   E\\vp4\n694  0x00020a18 0x08020a18 5   6    .data                     ascii   ABt)/\n695  0x00020a34 0x08020a34 5   6    .data                     ascii   ABta/\n696  0x00020ac5 0x08020ac5 4   5    .data                     ascii   V6@\\e\n697  0x00020b0a 0x08020b0a 4   5    .data                     ascii   d6p`\n698  0x00020b2c 0x08020b2c 4   5    .data                     ascii   L-P\\n\n699  0x00020b49 0x08020b49 4   7    .data                     utf8    Ô8@ʐ\n700  0x00020b83 0x08020b83 4   5    .data                     ascii   L-\"t\n701  0x00020ceb 0x08020ceb 4   6    .data                     utf8    ]u°\\n\n702  0x00020e46 0x08020e46 4   5    .data                     ascii   \"tN-\n703  0x00020e5c 0x08020e5c 4   5    .data                     ascii   \"tI.\n704  0x00021173 0x08021173 4   5    .data                     ascii   \"t/%\n705  0x00021277 0x08021277 4   5    .data                     ascii   BXt~\n706  0x000212fb 0x080212fb 4   5    .data                     ascii   @[t\\t\n707  0x00021499 0x08021499 4   5    .data                     ascii   W2@:\n708  0x000216d4 0x080216d4 4   5    .data                     ascii   WF@:\n709  0x00021786 0x08021786 4   5    .data                     ascii   \"t/%\n710  0x000217c3 0x080217c3 5   6    .data                     ascii   B:tA.\n711  0x000217d5 0x080217d5 5   6    .data                     ascii   B:ta.\n712  0x0002191a 0x0802191a 4   5    .data                     ascii   \"t/%\n713  0x000219ca 0x080219ca 4   5    .data                     ascii   MNO`\n714  0x000219f0 0x080219f0 4   5    .data                     ascii   MNO`\n715  0x00021ab8 0x08021ab8 10  21   .data                     utf16le ASICEN COM\n716  0x00021ace 0x08021ace 16  33   .data                     utf16le ASICEN USB DVB-T\n717  0x00021af0 0x08021af0 10  21   .data                     utf16le DTV CONFIG\n718  0x00021b06 0x08021b06 15  31   .data                     utf16le ASICEN IR2HID\n719  0x00021b26 0x08021b26 18  37   .data                     utf16le 123456123456654321\n720  0x00021b6f 0x08021b6f 4   5    .data                     ascii   T\\a$\\f\n721  0x00021b79 0x08021b79 4   6    .data                     utf8    D ȃ@\n722  0x00021d18 0x08021d18 4   5    .data                     ascii   $Pp(\n723  0x00021dcd 0x08021dcd 4   5    .data                     ascii   NeVd\n724  0x00021dde 0x08021dde 4   5    .data                     ascii   Vy\\aV\n725  0x000220a5 0x080220a5 4   5    .data                     ascii   L-P\n726  0x0002221a 0x0802221a 4   5    .data                     ascii   BA\"u\n727  0x0002222a 0x0802222a 5   6    .data                     ascii   B:tA/\n728  0x00022246 0x08022246 5   6    .data                     ascii   B:ta/\n729  0x0002233c 0x0802233c 5   7    .data                     utf8    <9r0í\n730  0x00022393 0x08022393 4   7    .data                     utf8    \\fp\\r\n731  0x0002244d 0x0802244d 6   9    .data                     utf8    p \\fp\\a\n732  0x0002283c 0x0802283c 6   7    .data                     ascii   KANNOU\n733  0x00022844 0x08022844 7   8    .data                     ascii   KBOOTUP\n734  0x00022890 0x08022890 6   7    .gnu.linkonce.this_module ascii   NetUSB\n735  0x000229c5 0x080229c5 5   6    .ARM.attributes           ascii   aeabi\n736  0x000229d6 0x080229d6 4   5    .ARM.attributes           ascii   \\n\\aA\\b\n737  0x000229f2 0x080229f2 7   8    .shstrtab                 ascii   .symtab\n738  0x000229fa 0x080229fa 7   8    .shstrtab                 ascii   .strtab\n739  0x00022a02 0x08022a02 9   10   .shstrtab                 ascii   .shstrtab\n740  0x00022a0c 0x08022a0c 9   10   .shstrtab                 ascii   .rel.text\n741  0x00022a16 0x08022a16 14  15   .shstrtab                 ascii   .rel.init.text\n742  0x00022a25 0x08022a25 14  15   .shstrtab                 ascii   .rel.exit.text\n743  0x00022a34 0x08022a34 13  14   .shstrtab                 ascii   .rel__ksymtab\n744  0x00022a42 0x08022a42 11  12   .shstrtab                 ascii   .rel.rodata\n745  0x00022a4e 0x08022a4e 14  15   .shstrtab                 ascii   .rodata.str1.4\n746  0x00022a5d 0x08022a5d 17  18   .shstrtab                 ascii   __ksymtab_strings\n747  0x00022a6f 0x08022a6f 8   9    .shstrtab                 ascii   .modinfo\n748  0x00022a78 0x08022a78 11  12   .shstrtab                 ascii   .rel__param\n749  0x00022a84 0x08022a84 17  18   .shstrtab                 ascii   .rel.alt.smp.init\n750  0x00022a96 0x08022a96 9   10   .shstrtab                 ascii   .rel.data\n751  0x00022aa0 0x08022aa0 29  30   .shstrtab                 ascii   .rel.gnu.linkonce.this_module\n752  0x00022abe 0x08022abe 4   5    .shstrtab                 ascii   .bss\n753  0x00022ac3 0x08022ac3 15  16   .shstrtab                 ascii   .note.GNU-stack\n754  0x00022ad3 0x08022ad3 15  16   .shstrtab                 ascii   .ARM.attributes\n755  0x0002301c 0x0802301c 4   20   .symtab                   utf32le 8𐀂RŴ\n756  0x0002304c 0x0802304c 6   28   .symtab                   utf32le 0𐀂p䳘L𐀂\n757  0x0002346c 0x0802346c 4   20   .symtab                   utf32le `𐀂ϡ㴘\n758  0x00023a9c 0x08023a9c 4   20   .symtab                   utf32le `𐀂ௌ㴀\n759  0x00023c6c 0x08023c6c 4   20   .symtab                   utf32le ,𐀂ැ襤\n760  0x00023f4c 0x08023f4c 4   20   .symtab                   utf32le |𐀂ᇈ㵄\n761  0x00023f88 0x08023f88 4   20   .symtab                   utf32le 4 𐀂ም\n762  0x0002411c 0x0802411c 4   20   .symtab                   utf32le T𐀂Ꭿ㵨\n763  0x0002423c 0x0802423c 4   20   .symtab                   utf32le x𐀂ᔡ㴄\n764  0x0002451c 0x0802451c 4   20   .symtab                   utf32le l𐀂ᢴ㶠\n765  0x0002462c 0x0802462c 4   20   .symtab                   utf32le p𐀂ᨄ૰\n766  0x0002464c 0x0802464c 4   20   .symtab                   utf32le X𐀂ᨣ㵤\n767  0x00024eb5 0x08024eb5 9   10   .strtab                   ascii   .LANCHOR2\n768  0x00024ebf 0x08024ebf 9   10   .strtab                   ascii   .LANCHOR1\n769  0x00024ec9 0x08024ec9 15  16   .strtab                   ascii   usbGD_pre_reset\n770  0x00024ed9 0x08024ed9 16  17   .strtab                   ascii   usbGD_post_reset\n771  0x00024eea 0x08024eea 4   5    .strtab                   ascii   .LC0\n772  0x00024eef 0x08024eef 4   5    .strtab                   ascii   .LC1\n773  0x00024ef4 0x08024ef4 17  18   .strtab                   ascii   usbGDRemoveDevice\n774  0x00024f06 0x08024f06 4   5    .strtab                   ascii   .LC2\n775  0x00024f0b 0x08024f0b 12  13   .strtab                   ascii   timeout_kill\n776  0x00024f18 0x08024f18 11  12   .strtab                   ascii   intCallback\n777  0x00024f24 0x08024f24 17  18   .strtab                   ascii   release_interface\n778  0x00024f36 0x08024f36 27  28   .strtab                   ascii   usb_api_blocking_completion\n779  0x00024f52 0x08024f52 9   10   .strtab                   ascii   .LANCHOR0\n780  0x00024f5c 0x08024f5c 5   6    .strtab                   ascii   .LC38\n781  0x00024f62 0x08024f62 14  15   .strtab                   ascii   usbGDAddDevice\n782  0x00024f71 0x08024f71 12  13   .strtab                   ascii   tcpConnector\n783  0x00024f7e 0x08024f7e 11  12   .strtab                   ascii   udpAnnounce\n784  0x00024f8a 0x08024f8a 24  25   .strtab                   ascii   AVER_usbGDAutoBulkThread\n785  0x00024fa3 0x08024fa3 24  25   .strtab                   ascii   GIGA_usbGDAutoBulkThread\n786  0x00024fbc 0x08024fbc 25  26   .strtab                   ascii   SoftwareBusWorkThreadProc\n787  0x00024fd6 0x08024fd6 26  27   .strtab                   ascii   SoftwareBus_dispatchThread\n788  0x00024ff1 0x08024ff1 19  20   .strtab                   ascii   usbGDAutoBulkThread\n789  0x00025005 0x08025005 5   6    .strtab                   ascii   .LC82\n790  0x0002500b 0x0802500b 23  24   .strtab                   ascii   run_acktelnetDBGDServer\n791  0x00025023 0x08025023 20  21   .strtab                   ascii   run_telnetDBGDServer\n792  0x00025038 0x08025038 4   5    .strtab                   ascii   .LC3\n793  0x0002503d 0x0802503d 4   5    .strtab                   ascii   .LC4\n794  0x00025042 0x08025042 4   5    .strtab                   ascii   .LC5\n795  0x00025047 0x08025047 4   5    .strtab                   ascii   .LC6\n796  0x0002504c 0x0802504c 4   5    .strtab                   ascii   .LC7\n797  0x00025051 0x08025051 4   5    .strtab                   ascii   .LC8\n798  0x00025056 0x08025056 4   5    .strtab                   ascii   .LC9\n799  0x0002505b 0x0802505b 5   6    .strtab                   ascii   .LC10\n800  0x00025061 0x08025061 10  11   .strtab                   ascii   usblp_poll\n801  0x0002506c 0x0802506c 16  17   .strtab                   ascii   usblp_bulk_write\n802  0x0002507d 0x0802507d 15  16   .strtab                   ascii   usblp_bulk_read\n803  0x0002508d 0x0802508d 10  11   .strtab                   ascii   usblp_open\n804  0x00025098 0x08025098 11  12   .strtab                   ascii   usblp_write\n805  0x000250a4 0x080250a4 10  11   .strtab                   ascii   usblp_read\n806  0x000250af 0x080250af 13  14   .strtab                   ascii   usblp_release\n807  0x000250bd 0x080250bd 11  12   .strtab                   ascii   usblp_ioctl\n808  0x000250c9 0x080250c9 12  13   .strtab                   ascii   kc_read_proc\n809  0x000250d6 0x080250d6 19  20   .strtab                   ascii   clean_proc_root_dir\n810  0x000250ea 0x080250ea 11  12   .strtab                   ascii   in6addr_any\n811  0x000250f6 0x080250f6 20  21   .strtab                   ascii   AVER_pTvAutoBulkUrb7\n812  0x0002510b 0x0802510b 17  18   .strtab                   ascii   fill_num_2_orders\n813  0x0002511d 0x0802511d 5   6    .strtab                   ascii   usbID\n814  0x00025123 0x08025123 31  32   .strtab                   ascii   reset_toggle_for_ubicom_dwc_otg\n815  0x00025143 0x08025143 8   9    .strtab                   ascii   pmModule\n816  0x0002514c 0x0802514c 25  26   .strtab                   ascii   USBLocalBroker_disconnect\n817  0x00025166 0x08025166 19  20   .strtab                   ascii   sendRequestToUseCmd\n818  0x0002517a 0x0802517a 24  25   .strtab                   ascii   KcMACAddressVerifyStatus\n819  0x00025193 0x08025193 7   8    .strtab                   ascii   do_init\n820  0x0002519b 0x0802519b 16  17   .strtab                   ascii   getIntfCurAltNum\n821  0x000251ac 0x080251ac 14  15   .strtab                   ascii   dumpUsbAllDesc\n822  0x000251bb 0x080251bb 28  29   .strtab                   ascii   USBLocalBroker_deviceClaimed\n823  0x000251d8 0x080251d8 49  50   .strtab                   ascii   SoftwareBus_reportSbusClaimOccupiedDeviceResponse\n824  0x0002520a 0x0802520a 23  24   .strtab                   ascii   finishAllUsbDiskCommand\n825  0x00025222 0x08025222 25  26   .strtab                   ascii   init_netusb_proc_root_dir\n826  0x0002523c 0x0802523c 22  23   .strtab                   ascii   checkSBusTimeoutThread\n827  0x00025253 0x08025253 27  28   .strtab                   ascii   USBArbitratorRegisterBroker\n828  0x0002526f 0x0802526f 17  18   .strtab                   ascii   checkReleasedIsoc\n829  0x00025281 0x08025281 4   5    .strtab                   ascii   RCON\n830  0x00025286 0x08025286 14  15   .strtab                   ascii   pipe_readclose\n831  0x00025295 0x08025295 20  21   .strtab                   ascii   GIGA_pTvAutoBulkUrb2\n832  0x000252aa 0x080252aa 18  19   .strtab                   ascii   handleReleasedIsoc\n833  0x000252bd 0x080252bd 19  20   .strtab                   ascii   deviceForceUnlinked\n834  0x000252d1 0x080252d1 25  26   .strtab                   ascii   USBArbitratorRemoveDevice\n835  0x000252eb 0x080252eb 9   10   .strtab                   ascii   KTCP_stop\n836  0x000252f5 0x080252f5 25  26   .strtab                   ascii   findEndpointFromInterface\n837  0x0002530f 0x0802530f 9   10   .strtab                   ascii   inet_pton\n838  0x0002531d 0x0802531d 12  13   .strtab                   ascii   bulkCallback\n839  0x0002532a 0x0802532a 21  22   .strtab                   ascii   _thread_create_helper\n840  0x00025340 0x08025340 25  26   .strtab                   ascii   USBLocalBroker_checkOwner\n841  0x0002535a 0x0802535a 23  24   .strtab                   ascii   rejectDiskCmdCauseStall\n842  0x00025372 0x08025372 22  23   .strtab                   ascii   broadcastDeviceClaimed\n843  0x00025389 0x08025389 16  17   .strtab                   ascii   usblp_disconnect\n844  0x0002539a 0x0802539a 16  17   .strtab                   ascii   ks_gethostbyname\n845  0x000253ab 0x080253ab 29  30   .strtab                   ascii   SoftwareBus_dispatchEP0MsgOut\n846  0x000253c9 0x080253c9 39  40   .strtab                   ascii   USBLocalBroker_sendReleaseDeviceRequest\n847  0x000253f1 0x080253f1 13  14   .strtab                   ascii   ks_getsockopt\n848  0x000253ff 0x080253ff 32  33   .strtab                   ascii   handleClaimDeviceRequest_local_1\n849  0x00025420 0x08025420 51  52   .strtab                   ascii   SoftwareBus_reportSbusClaimUnoccupiedDeviceResponse\n850  0x00025454 0x08025454 17  18   .strtab                   ascii   clean_netusb_proc\n851  0x00025466 0x08025466 7   8    .strtab                   ascii   ks_recv\n852  0x0002546e 0x0802546e 9   10   .strtab                   ascii   pipe_free\n853  0x00025478 0x08025478 22  23   .strtab                   ascii   AVER_gTvAutoBulkStart5\n854  0x0002548f 0x0802548f 21  22   .strtab                   ascii   cleanup_usbArbitrator\n855  0x000254a5 0x080254a5 11  12   .strtab                   ascii   ks_recvfrom\n856  0x000254b1 0x080254b1 27  28   .strtab                   ascii   reportDeviceMasterOwnDevice\n857  0x000254cd 0x080254cd 17  18   .strtab                   ascii   isocWriteCallback\n858  0x000254df 0x080254df 60  61   .strtab                   ascii   specialProcessForTvAutoBulk_StartAutoBulkInThreadWhenConnect\n859  0x0002551c 0x0802551c 12  13   .strtab                   ascii   usbGD_resume\n860  0x00025529 0x08025529 15  16   .strtab                   ascii   gIsocWriteStart\n861  0x00025539 0x08025539 24  25   .strtab                   ascii   cleanup_usbGeneralDriver\n862  0x00025552 0x08025552 16  17   .strtab                   ascii   getServerMessage\n863  0x00025563 0x08025563 19  20   .strtab                   ascii   isocWriteDelayStart\n864  0x00025577 0x08025577 14  15   .strtab                   ascii   dumpConfigDesc\n865  0x00025586 0x08025586 18  19   .strtab                   ascii   getDevInfoListHead\n866  0x00025599 0x08025599 9   10   .strtab                   ascii   pipeReset\n867  0x000255a3 0x080255a3 32  33   .strtab                   ascii   handleReleaseDeviceRequest_local\n868  0x000255c4 0x080255c4 14  15   .strtab                   ascii   cleanup_module\n869  0x000255d3 0x080255d3 42  43   .strtab                   ascii   SoftwareBus_reportSbusUnlockDeviceResponse\n870  0x000255fe 0x080255fe 9   10   .strtab                   ascii   setConfig\n871  0x00025608 0x08025608 12  13   .strtab                   ascii   ks_inet_addr\n872  0x00025615 0x08025615 18  19   .strtab                   ascii   getDevInfoListLock\n873  0x00025628 0x08025628 36  37   .strtab                   ascii   SoftwareBus_responseBulkInInfoReturn\n874  0x0002564d 0x0802564d 12  13   .strtab                   ascii   pipe_bufLeft\n875  0x0002565a 0x0802565a 29  30   .strtab                   ascii   _broadcastCurrentDeviceMaster\n876  0x00025678 0x08025678 20  21   .strtab                   ascii   AVER_pTvAutoBulkUrb6\n877  0x00025691 0x08025691 8   9    .strtab                   ascii   KTCP_get\n878  0x0002569a 0x0802569a 12  13   .strtab                   ascii   ks_inet_aton\n879  0x000256a7 0x080256a7 8   9    .strtab                   ascii   dumpV6IP\n880  0x000256b0 0x080256b0 19  20   .strtab                   ascii   myUnCompleteUrbList\n881  0x000256c4 0x080256c4 15  16   .strtab                   ascii   setupRequestOut\n882  0x000256d4 0x080256d4 24  25   .strtab                   ascii   IODATA_GV_MVP_HZ2W_DATA2\n883  0x000256ed 0x080256ed 9   10   .strtab                   ascii   ks_accept\n884  0x000256f7 0x080256f7 18  19   .strtab                   ascii   kc_usb_control_msg\n885  0x0002570a 0x0802570a 13  14   .strtab                   ascii   getStringItem\n886  0x00025718 0x08025718 13  14   .strtab                   ascii   getUsbDevPath\n887  0x00025726 0x08025726 18  19   .strtab                   ascii   initUsbSoftwareBus\n888  0x00025739 0x08025739 47  48   .strtab                   ascii   USBLocalBroker_sendClaimOccupiedDeviceRequest_1\n889  0x00025769 0x08025769 14  15   .strtab                   ascii   ks_getsockname\n890  0x00025778 0x08025778 8   9    .strtab                   ascii   ks_ioctl\n891  0x00025781 0x08025781 54  55   .strtab                   ascii   AVER_specialProcessForTvAutoBulk_StartAutoBulkInThread\n892  0x000257b8 0x080257b8 31  32   .strtab                   ascii   freeUSBDeviceInfoForLocalServer\n893  0x000257d8 0x080257d8 32  33   .strtab                   ascii   USBLocalBroker_registerUSBDriver\n894  0x000257f9 0x080257f9 17  18   .strtab                   ascii   gTvAutoBulkStart3\n895  0x0002580b 0x0802580b 11  12   .strtab                   ascii   ifHasAnyDev\n896  0x00025817 0x08025817 19  20   .strtab                   ascii   SoftwareBus_fillBuf\n897  0x0002582b 0x0802582b 16  17   .strtab                   ascii   defaultTimeLimit\n898  0x0002583c 0x0802583c 19  20   .strtab                   ascii   ks_getAddrByDevName\n899  0x00025850 0x08025850 31  32   .strtab                   ascii   initUSBDeviceInfoForLocalServer\n900  0x00025874 0x08025874 11  12   .strtab                   ascii   aes_decrypt\n901  0x00025880 0x08025880 43  44   .strtab                   ascii   bulk_intr_transfer_OneByOneWithShortTimeout\n902  0x000258ac 0x080258ac 15  16   .strtab                   ascii   pTvAutoBulkUrb5\n903  0x000258bc 0x080258bc 7   8    .strtab                   ascii   ks_bind\n904  0x000258c4 0x080258c4 11  12   .strtab                   ascii   init_module\n905  0x000258d0 0x080258d0 22  23   .strtab                   ascii   getIsocIntf_2Alt_EpOut\n906  0x000258e7 0x080258e7 9   10   .strtab                   ascii   ks_listen\n907  0x000258f1 0x080258f1 9   10   .strtab                   ascii   kc_printf\n908  0x000258fb 0x080258fb 34  35   .strtab                   ascii   SoftwareBus_processSetDeviceMaster\n909  0x0002591e 0x0802591e 20  21   .strtab                   ascii   setSoftwareBusOption\n910  0x00025933 0x08025933 40  41   .strtab                   ascii   USBLocalBroker_processQueuedDevClaimming\n911  0x0002595c 0x0802595c 8   9    .strtab                   ascii   KcThread\n912  0x00025965 0x08025965 21  22   .strtab                   ascii   getCurrentFrameNumber\n913  0x0002597b 0x0802597b 43  44   .strtab                   ascii   specialProcessForQrobot_FixIsocInPacketSize\n914  0x000259a7 0x080259a7 11  12   .strtab                   ascii   getClientID\n915  0x000259b3 0x080259b3 11  12   .strtab                   ascii   freePageBuf\n916  0x000259bf 0x080259bf 22  23   .strtab                   ascii   __mod_usb_device_table\n917  0x000259da 0x080259da 25  26   .strtab                   ascii   SoftwareBus_processMsgOut\n918  0x000259f4 0x080259f4 34  35   .strtab                   ascii   USBLocalBroker_releaseAccessTicket\n919  0x00025a17 0x08025a17 4   5    .strtab                   ascii   pipe\n920  0x00025a1c 0x08025a1c 13  14   .strtab                   ascii   getServerName\n921  0x00025a2a 0x08025a2a 9   10   .strtab                   ascii   bulkXfer2\n922  0x00025a34 0x08025a34 13  14   .strtab                   ascii   getModuleName\n923  0x00025a42 0x08025a42 29  30   .strtab                   ascii   USBArbitratorDeregisterBroker\n924  0x00025a60 0x08025a60 15  16   .strtab                   ascii   pTvAutoBulkUrb1\n925  0x00025a70 0x08025a70 15  16   .strtab                   ascii   pipe_writeclose\n926  0x00025a80 0x08025a80 20  21   .strtab                   ascii   AVER_pTvAutoBulkUrb1\n927  0x00025a95 0x08025a95 37  38   .strtab                   ascii   SoftwareBus_responseBulkOutInfoReturn\n928  0x00025abb 0x08025abb 29  30   .strtab                   ascii   handleForceClaimDeviceRequest\n929  0x00025ad9 0x08025ad9 34  35   .strtab                   ascii   SoftwareBus_responseIsocReadReturn\n930  0x00025afc 0x08025afc 26  27   .strtab                   ascii   isocInfo_changeRingBufSize\n931  0x00025b17 0x08025b17 20  21   .strtab                   ascii   AVER_pTvAutoBulkUrb8\n932  0x00025b2c 0x08025b2c 13  14   .strtab                   ascii   run_init_sbus\n933  0x00025b3a 0x08025b3a 7   8    .strtab                   ascii   devMode\n934  0x00025b42 0x08025b42 13  14   .strtab                   ascii   KcThread_init\n935  0x00025b54 0x08025b54 21  22   .strtab                   ascii   AVER_gTvAutoBulkStart\n936  0x00025b6e 0x08025b6e 17  18   .strtab                   ascii   deviceClaimed_dev\n937  0x00025b80 0x08025b80 12  13   .strtab                   ascii   filterDevice\n938  0x00025b8d 0x08025b8d 26  27   .strtab                   ascii   mapLinuxStatusToEcosStatus\n939  0x00025ba8 0x08025ba8 21  22   .strtab                   ascii   massStorageAccessMode\n940  0x00025bc2 0x08025bc2 20  21   .strtab                   ascii   run_ipv6_udpAnnounce\n941  0x00025bd7 0x08025bd7 10  11   .strtab                   ascii   ks_connect\n942  0x00025be2 0x08025be2 16  17   .strtab                   ascii   usbGeneralDriver\n943  0x00025bf3 0x08025bf3 9   10   .strtab                   ascii   cancelUrb\n944  0x00025c01 0x08025c01 14  15   .strtab                   ascii   mallocPageBuf2\n945  0x00025c10 0x08025c10 21  22   .strtab                   ascii   GIGA_gTvAutoBulkStart\n946  0x00025c26 0x08025c26 11  12   .strtab                   ascii   initIsoInfo\n947  0x00025c32 0x08025c32 22  23   .strtab                   ascii   AVER_gTvAutoBulkStart4\n948  0x00025c49 0x08025c49 14  15   .strtab                   ascii   setupRequestIn\n949  0x00025c58 0x08025c58 22  23   .strtab                   ascii   getIntervalForLinux2_4\n950  0x00025c6f 0x08025c6f 20  21   .strtab                   ascii   kc_usb_interrupt_msg\n951  0x00025c84 0x08025c84 18  19   .strtab                   ascii   freeUsbSoftwareBus\n952  0x00025c97 0x08025c97 22  23   .strtab                   ascii   init_ipv6_tcpConnector\n953  0x00025cae 0x08025cae 11  12   .strtab                   ascii   usblp_probe\n954  0x00025cba 0x08025cba 24  25   .strtab                   ascii   IODATA_GV_MVP_HZ2W_DATA4\n955  0x00025cd3 0x08025cd3 16  17   .strtab                   ascii   threadCreateLock\n956  0x00025ce4 0x08025ce4 58  59   .strtab                   ascii   specialProcessForTvAutoBulk_StartAutoBulkInThreadByBulkOut\n957  0x00025d1f 0x08025d1f 9   10   .strtab                   ascii   c_tolower\n958  0x00025d29 0x08025d29 13  14   .strtab                   ascii   pipe_dataLeft\n959  0x00025d37 0x08025d37 20  21   .strtab                   ascii   GIGA_pTvAutoBulkUrb1\n960  0x00025d4c 0x08025d4c 10  11   .strtab                   ascii   myIsocInfo\n961  0x00025d57 0x08025d57 28  29   .strtab                   ascii   handleSetDeviceMasterRequest\n962  0x00025d74 0x08025d74 34  35   .strtab                   ascii   SoftwareBus_dispatchNormalEPMsgOut\n963  0x00025d97 0x08025d97 49  50   .strtab                   ascii   specialProcessForTvAutoBulk_StartAutoBulkInThread\n964  0x00025dc9 0x08025dc9 10  11   .strtab                   ascii   getDevName\n965  0x00025dd4 0x08025dd4 61  62   .strtab                   ascii   specialProcessForTvAutoBulk_StopAutoBulkInThreadWhenCancelUrb\n966  0x00025e12 0x08025e12 12  13   .strtab                   ascii   kc_dbgD_send\n967  0x00025e1f 0x08025e1f 29  30   .strtab                   ascii   USBLocalBroker_deviceReleased\n968  0x00025e3d 0x08025e3d 34  35   .strtab                   ascii   USBLocalBroker_deviceForceUnlinked\n969  0x00025e60 0x08025e60 7   8    .strtab                   ascii   startV6\n970  0x00025e68 0x08025e68 21  22   .strtab                   ascii   isAlreadySetInterface\n971  0x00025e7e 0x08025e7e 16  17   .strtab                   ascii   gTvAutoBulkStart\n972  0x00025e8f 0x08025e8f 11  12   .strtab                   ascii   init_DebugD\n973  0x00025e9b 0x08025e9b 28  29   .strtab                   ascii   processRequestToUseDeviceCmd\n974  0x00025eb8 0x08025eb8 26  27   .strtab                   ascii   _handleUnlockDeviceRequest\n975  0x00025ed7 0x08025ed7 14  15   .strtab                   ascii   brokerListLock\n976  0x00025ee6 0x08025ee6 22  23   .strtab                   ascii   AVER_gTvAutoBulkStart2\n977  0x00025efd 0x08025efd 30  31   .strtab                   ascii   getConfigDescriptorTotalLength\n978  0x00025f1c 0x08025f1c 16  17   .strtab                   ascii   init_netusb_proc\n979  0x00025f2d 0x08025f2d 14  15   .strtab                   ascii   ks_getpeername\n980  0x00025f3c 0x08025f3c 9   10   .strtab                   ascii   setUserID\n981  0x00025f46 0x08025f46 30  31   .strtab                   ascii   proc_usbPortInfo_read_str_proc\n982  0x00025f65 0x08025f65 22  23   .strtab                   ascii   isocInfo_changeBufSize\n983  0x00025f7c 0x08025f7c 33  34   .strtab                   ascii   HostStatus_handleHostDisconnected\n984  0x00025f9e 0x08025f9e 12  13   .strtab                   ascii   close_DebugD\n985  0x00025fab 0x08025fab 20  21   .strtab                   ascii   AVER_pTvAutoBulkUrb3\n986  0x00025fc0 0x08025fc0 18  19   .strtab                   ascii   initUSBLocalBroker\n987  0x00025fd3 0x08025fd3 14  15   .strtab                   ascii   isocInCallback\n988  0x00025fe2 0x08025fe2 29  30   .strtab                   ascii   specialInitialForIodataHz2wTv\n989  0x00026000 0x08026000 18  19   .strtab                   ascii   init_usbArbitrator\n990  0x00026013 0x08026013 13  14   .strtab                   ascii   mallocPageBuf\n991  0x00026021 0x08026021 24  25   .strtab                   ascii   IODATA_GV_MVP_HZ2W_DATA1\n992  0x0002603a 0x0802603a 10  11   .strtab                   ascii   pipe_write\n993  0x00026045 0x08026045 18  19   .strtab                   ascii   deviceInfoListHead\n994  0x00026058 0x08026058 27  28   .strtab                   ascii   _handleReleaseDeviceRequest\n995  0x00026074 0x08026074 7   8    .strtab                   ascii   closeV6\n996  0x0002607c 0x0802607c 15  16   .strtab                   ascii   pTvAutoBulkUrb3\n997  0x0002608c 0x0802608c 43  44   .strtab                   ascii   SoftwareBus_reportSbusReleaseDeviceResponse\n998  0x000260b8 0x080260b8 15  16   .strtab                   ascii   pTvAutoBulkUrb8\n999  0x000260c8 0x080260c8 8   9    .strtab                   ascii   ks_close\n1000 0x000260d1 0x080260d1 14  15   .strtab                   ascii   KcThread_clean\n1001 0x000260e0 0x080260e0 11  12   .strtab                   ascii   resetDevice\n1002 0x000260ec 0x080260ec 38  39   .strtab                   ascii   specialProcessForTv_StopAutoBulkThread\n1003 0x00026113 0x08026113 8   9    .strtab                   ascii   KTCP_put\n1004 0x0002611c 0x0802611c 19  20   .strtab                   ascii   getConfigDescriptor\n1005 0x00026130 0x08026130 14  15   .strtab                   ascii   maxIsocBufSize\n1006 0x0002613f 0x0802613f 31  32   .strtab                   ascii   SoftwareBus_reportConfigDescGot\n1007 0x0002615f 0x0802615f 9   10   .strtab                   ascii   getUserID\n1008 0x00026169 0x08026169 19  20   .strtab                   ascii   getStringDescriptor\n1009 0x00026181 0x08026181 17  18   .strtab                   ascii   gTvAutoBulkStart2\n1010 0x00026193 0x08026193 10  11   .strtab                   ascii   threadList\n1011 0x0002619e 0x0802619e 9   10   .strtab                   ascii   tcpV6Main\n1012 0x000261a8 0x080261a8 12  13   .strtab                   ascii   freePageBuf2\n1013 0x000261b5 0x080261b5 7   8    .strtab                   ascii   udpPort\n1014 0x000261bd 0x080261bd 17  18   .strtab                   ascii   dumpInterfaceDesc\n1015 0x000261cf 0x080261cf 11  12   .strtab                   ascii   parseConfig\n1016 0x000261df 0x080261df 40  41   .strtab                   ascii   SoftwareBus_processRequestToUseDeviceCmd\n1017 0x00026210 0x08026210 47  48   .strtab                   ascii   SoftwareBus_responseGetCurrentFrameNumberReturn\n1018 0x00026240 0x08026240 9   10   .strtab                   ascii   ks_socket\n1019 0x0002624a 0x0802624a 9   10   .strtab                   ascii   udpV6Main\n1020 0x00026254 0x08026254 14  15   .strtab                   ascii   usb_get_string\n1021 0x00026263 0x08026263 17  18   .strtab                   ascii   gTvAutoBulkStart5\n1022 0x00026275 0x08026275 11  12   .strtab                   ascii   terminating\n1023 0x00026281 0x08026281 25  26   .strtab                   ascii   handleUnlockDeviceRequest\n1024 0x0002629b 0x0802629b 14  15   .strtab                   ascii   aes_gen_tables\n1025 0x000262aa 0x080262aa 18  19   .strtab                   ascii   hostStatusListLock\n1026 0x000262bd 0x080262bd 31  32   .strtab                   ascii   findInterfaceNumberFromEndpoint\n1027 0x000262dd 0x080262dd 14  15   .strtab                   ascii   dumpDeviceDesc\n1028 0x000262ec 0x080262ec 26  27   .strtab                   ascii   getStringDescriptorByIndex\n1029 0x00026307 0x08026307 9   10   .strtab                   ascii   sendToNew\n1030 0x00026311 0x08026311 13  14   .strtab                   ascii   getDevPortNum\n1031 0x0002631f 0x0802631f 19  20   .strtab                   ascii   embedded_usblp_init\n1032 0x00026333 0x08026333 17  18   .strtab                   ascii   parseDiskCmdStage\n1033 0x00026345 0x08026345 54  55   .strtab                   ascii   GIGA_specialProcessForTvAutoBulk_StartAutoBulkInThread\n1034 0x0002637c 0x0802637c 14  15   .strtab                   ascii   _myAnnounceMsg\n1035 0x0002638b 0x0802638b 29  30   .strtab                   ascii   specialResetDeviceForIodataTv\n1036 0x000263ad 0x080263ad 17  18   .strtab                   ascii   KCgetMACByDevName\n1037 0x000263bf 0x080263bf 21  22   .strtab                   ascii   init_usbGeneralDriver\n1038 0x000263d5 0x080263d5 20  21   .strtab                   ascii   AVER_pTvAutoBulkUrb2\n1039 0x000263ea 0x080263ea 16  17   .strtab                   ascii   toPrintableAscii\n1040 0x000263fb 0x080263fb 17  18   .strtab                   ascii   isRealtekRtl2832u\n1041 0x0002640d 0x0802640d 14  15   .strtab                   ascii   initHostStatus\n1042 0x0002641c 0x0802641c 14  15   .strtab                   ascii   handleReleased\n1043 0x0002642b 0x0802642b 17  18   .strtab                   ascii   softwareBusOption\n1044 0x0002643d 0x0802643d 16  17   .strtab                   ascii   initSocketServer\n1045 0x0002644e 0x0802644e 16  17   .strtab                   ascii   dumpEndpointDesc\n1046 0x0002645f 0x0802645f 13  14   .strtab                   ascii   ks_setsockopt\n1047 0x0002646d 0x0802646d 21  22   .strtab                   ascii   init_ipv6_udpAnnounce\n1048 0x00026483 0x08026483 15  16   .strtab                   ascii   pTvAutoBulkUrb2\n1049 0x00026493 0x08026493 15  16   .strtab                   ascii   pTvAutoBulkUrb7\n1050 0x000264a3 0x080264a3 29  30   .strtab                   ascii   reportSbusDeviceForceUnlinked\n1051 0x000264c1 0x080264c1 44  45   .strtab                   ascii   specialProcessForQrobot_skipEmptySoundPacket\n1052 0x000264ee 0x080264ee 20  21   .strtab                   ascii   USBLocalBroker_probe\n1053 0x00026503 0x08026503 20  21   .strtab                   ascii   AVER_pTvAutoBulkUrb5\n1054 0x00026518 0x08026518 14  15   .strtab                   ascii   getDeviceIndex\n1055 0x00026527 0x08026527 31  32   .strtab                   ascii   SoftwareBus_processHostCommands\n1056 0x00026547 0x08026547 18  19   .strtab                   ascii   deviceInfoListLock\n1057 0x0002655a 0x0802655a 10  11   .strtab                   ascii   KTCP_flush\n1058 0x00026565 0x08026565 14  15   .strtab                   ascii   threadListLock\n1059 0x00026574 0x08026574 16  17   .strtab                   ascii   _clientBootupMsg\n1060 0x00026585 0x08026585 24  25   .strtab                   ascii   IODATA_GV_MVP_HZ2W_DATA3\n1061 0x0002659e 0x0802659e 46  47   .strtab                   ascii   specialProcessForQrobot_waitForIsocWriteFinish\n1062 0x000265cd 0x080265cd 10  11   .strtab                   ascii   pipe_reset\n1063 0x000265d8 0x080265d8 22  23   .strtab                   ascii   USBArbitratorAddDevice\n1064 0x000265ef 0x080265ef 16  17   .strtab                   ascii   dump_kc_net_addr\n1065 0x00026600 0x08026600 9   10   .strtab                   ascii   pipe_read\n1066 0x0002660a 0x0802660a 24  25   .strtab                   ascii   kc_usb_set_configuration\n1067 0x00026623 0x08026623 29  30   .strtab                   ascii   SoftwareBus_reportLinkCreated\n1068 0x00026645 0x08026645 9   10   .strtab                   ascii   inet_ntop\n1069 0x0002664f 0x0802664f 15  16   .strtab                   ascii   kc_net_addr_cmp\n1070 0x0002665f 0x0802665f 32  33   .strtab                   ascii   SoftwareBus_dispatchHostCommands\n1071 0x00026680 0x08026680 8   9    .strtab                   ascii   bulkXfer\n1072 0x00026689 0x08026689 14  15   .strtab                   ascii   isocInfo_setup\n1073 0x00026698 0x08026698 17  18   .strtab                   ascii   _isUSBMassStorage\n1074 0x000266aa 0x080266aa 18  19   .strtab                   ascii   _tunnelAnnounceSig\n1075 0x000266bd 0x080266bd 40  41   .strtab                   ascii   SoftwareBus_reportSbusLockDeviceResponse\n1076 0x000266e6 0x080266e6 11  12   .strtab                   ascii   aes_set_key\n1077 0x000266f2 0x080266f2 13  14   .strtab                   ascii   isQrobotAudio\n1078 0x00026700 0x08026700 23  24   .strtab                   ascii   handleLockDeviceRequest\n1079 0x00026718 0x08026718 33  34   .strtab                   ascii   SoftwareBus_processNormalEPMsgOut\n1080 0x0002673a 0x0802673a 4   5    .strtab                   ascii   port\n1081 0x0002673f 0x0802673f 7   8    .strtab                   ascii   ks_send\n1082 0x00026747 0x08026747 32  33   .strtab                   ascii   bulkXferOneByOneWithShortTimeout\n1083 0x00026768 0x08026768 22  23   .strtab                   ascii   AVER_gTvAutoBulkStart3\n1084 0x0002677f 0x0802677f 31  32   .strtab                   ascii   intXferOneByOneWithShortTimeout\n1085 0x0002679f 0x0802679f 18  19   .strtab                   ascii   isHidDevOrEndpoint\n1086 0x000267b2 0x080267b2 12  13   .strtab                   ascii   setInterface\n1087 0x000267bf 0x080267bf 29  30   .strtab                   ascii   sendRequestToUseCmd_WorkHorse\n1088 0x000267dd 0x080267dd 28  29   .strtab                   ascii   SoftwareBus_processEP0MsgOut\n1089 0x000267fa 0x080267fa 15  16   .strtab                   ascii   pTvAutoBulkUrb6\n1090 0x0002680a 0x0802680a 17  18   .strtab                   ascii   isoc_setPlayStage\n1091 0x0002681c 0x0802681c 14  15   .strtab                   ascii   cleanStausList\n1092 0x0002682b 0x0802682b 10  11   .strtab                   ascii   checkOwner\n1093 0x00026836 0x08026836 13  14   .strtab                   ascii   setDeviceBusy\n1094 0x00026844 0x08026844 7   8    .strtab                   ascii   intXfer\n1095 0x0002684c 0x0802684c 20  21   .strtab                   ascii   AVER_pTvAutoBulkUrb4\n1096 0x00026861 0x08026861 13  14   .strtab                   ascii   usbGD_suspend\n1097 0x0002686f 0x0802686f 9   10   .strtab                   ascii   ks_sendto\n1098 0x00026879 0x08026879 49  50   .strtab                   ascii   USBLocalBroker_sendClaimUnoccupiedDeviceRequest_1\n1099 0x000268ab 0x080268ab 12  13   .strtab                   ascii   ks_inet_ntoa\n1100 0x000268b8 0x080268b8 10  11   .strtab                   ascii   dumpV6IP02\n1101 0x000268c3 0x080268c3 19  20   .strtab                   ascii   embedded_usblp_exit\n1102 0x000268d7 0x080268d7 17  18   .strtab                   ascii   gTvAutoBulkStart4\n1103 0x000268e9 0x080268e9 42  43   .strtab                   ascii   SoftwareBus_reportSbusRequestInResponseGot\n1104 0x00026914 0x08026914 21  22   .strtab                   ascii   run_ipv6_tcpConnector\n1105 0x0002692a 0x0802692a 15  16   .strtab                   ascii   pTvAutoBulkUrb4\n1106 0x0002693a 0x0802693a 24  25   .strtab                   ascii   initContext4InterruptUrb\n1107 0x00026953 0x08026953 21  22   .strtab                   ascii   generalBrokerListHead\n1108 0x00026969 0x08026969 26  27   .strtab                   ascii   handleReleaseDeviceRequest\n1109 0x00026984 0x08026984 11  12   .strtab                   ascii   aes_encrypt\n1110 0x00026990 0x08026990 7   8    .strtab                   ascii   KT_init\n1111 0x00026998 0x08026998 6   7    .strtab                   ascii   strcpy\n1112 0x0002699f 0x0802699f 9   10   .strtab                   ascii   daemonize\n1113 0x000269a9 0x080269a9 18  19   .strtab                   ascii   gpl_usb_submit_urb\n1114 0x000269bc 0x080269bc 15  16   .strtab                   ascii   dev_get_drvdata\n1115 0x000269cc 0x080269cc 19  20   .strtab                   ascii   gpl_usb_buffer_free\n1116 0x000269e0 0x080269e0 8   9    .strtab                   ascii   vsprintf\n1117 0x000269e9 0x080269e9 13  14   .strtab                   ascii   __this_module\n1118 0x000269f7 0x080269f7 8   9    .strtab                   ascii   snprintf\n1119 0x00026a00 0x08026a00 8   9    .strtab                   ascii   complete\n1120 0x00026a09 0x08026a09 16  17   .strtab                   ascii   gpl_dev_set_name\n1121 0x00026a1a 0x08026a1a 21  22   .strtab                   ascii   gpl_usb_set_interface\n1122 0x00026a30 0x08026a30 11  12   .strtab                   ascii   finish_wait\n1123 0x00026a3c 0x08026a3c 16  17   .strtab                   ascii   gpl_usb_free_urb\n1124 0x00026a4d 0x08026a4d 11  12   .strtab                   ascii   kernel_bind\n1125 0x00026a5c 0x08026a5c 11  12   .strtab                   ascii   sock_create\n1126 0x00026a68 0x08026a68 18  19   .strtab                   ascii   __printk_ratelimit\n1127 0x00026a7b 0x08026a7b 15  16   .strtab                   ascii   prepare_to_wait\n1128 0x00026a8b 0x08026a8b 19  20   .strtab                   ascii   gpl_usb_control_msg\n1129 0x00026a9f 0x08026a9f 6   7    .strtab                   ascii   memcpy\n1130 0x00026aa6 0x08026aa6 22  23   .strtab                   ascii   gpl_usb_deregister_dev\n1131 0x00026abd 0x08026abd 5   6    .strtab                   ascii   kfree\n1132 0x00026ac3 0x08026ac3 18  19   .strtab                   ascii   gpl_usb_unlink_urb\n1133 0x00026ad6 0x08026ad6 15  16   .strtab                   ascii   gpl_usb_put_dev\n1134 0x00026ae6 0x08026ae6 9   10   .strtab                   ascii   __wake_up\n1135 0x00026af0 0x08026af0 13  14   .strtab                   ascii   kernel_accept\n1136 0x00026afe 0x08026afe 10  11   .strtab                   ascii   free_pages\n1137 0x00026b09 0x08026b09 28  29   .strtab                   ascii   gpl_usb_autopm_get_interface\n1138 0x00026b26 0x08026b26 22  23   .strtab                   ascii   _raw_spin_lock_irqsave\n1139 0x00026b3d 0x08026b3d 16  17   .strtab                   ascii   __per_cpu_offset\n1140 0x00026b4e 0x08026b4e 14  15   .strtab                   ascii   _raw_spin_lock\n1141 0x00026b5d 0x08026b5d 20  21   .strtab                   ascii   msleep_interruptible\n1142 0x00026b72 0x08026b72 15  16   .strtab                   ascii   wake_up_process\n1143 0x00026b82 0x08026b82 17  18   .strtab                   ascii   create_proc_entry\n1144 0x00026b94 0x08026b94 22  23   .strtab                   ascii   gpl_usb_get_descriptor\n1145 0x00026bab 0x08026bab 28  29   .strtab                   ascii   gpl_usb_autopm_put_interface\n1146 0x00026bc8 0x08026bc8 32  33   .strtab                   ascii   gpl_usb_get_current_frame_number\n1147 0x00026be9 0x08026be9 16  17   .strtab                   ascii   schedule_timeout\n1148 0x00026bfa 0x08026bfa 8   9    .strtab                   ascii   schedule\n1149 0x00026c03 0x08026c03 16  17   .strtab                   ascii   msecs_to_jiffies\n1150 0x00026c14 0x08026c14 16  17   .strtab                   ascii   __get_free_pages\n1151 0x00026c25 0x08026c25 18  19   .strtab                   ascii   gpl_usb_deregister\n1152 0x00026c38 0x08026c38 18  19   .strtab                   ascii   gpl_klist_add_head\n1153 0x00026c4b 0x08026c4b 16  17   .strtab                   ascii   kmem_cache_alloc\n1154 0x00026c5c 0x08026c5c 17  18   .strtab                   ascii   kernel_getsockopt\n1155 0x00026c6e 0x08026c6e 16  17   .strtab                   ascii   gpl_usb_kill_urb\n1156 0x00026c7f 0x08026c7f 12  13   .strtab                   ascii   allow_signal\n1157 0x00026c8c 0x08026c8c 16  17   .strtab                   ascii   gpl_usb_register\n1158 0x00026c9d 0x08026c9d 8   9    .strtab                   ascii   init_net\n1159 0x00026ca6 0x08026ca6 9   10   .strtab                   ascii   add_timer\n1160 0x00026cb0 0x08026cb0 18  19   .strtab                   ascii   kernel_getpeername\n1161 0x00026cc3 0x08026cc3 18  19   .strtab                   ascii   kernel_getsockname\n1162 0x00026cd6 0x08026cd6 4   5    .strtab                   ascii   down\n1163 0x00026cdb 0x08026cdb 6   7    .strtab                   ascii   strstr\n1164 0x00026ce2 0x08026ce2 10  11   .strtab                   ascii   mutex_lock\n1165 0x00026ced 0x08026ced 18  19   .strtab                   ascii   warn_slowpath_null\n1166 0x00026d00 0x08026d00 18  19   .strtab                   ascii   gpl_usb_clear_halt\n1167 0x00026d13 0x08026d13 16  17   .strtab                   ascii   gpl_klist_remove\n1168 0x00026d24 0x08026d24 7   8    .strtab                   ascii   strncmp\n1169 0x00026d2c 0x08026d2c 15  16   .strtab                   ascii   gpl_usb_get_dev\n1170 0x00026d3c 0x08026d3c 14  15   .strtab                   ascii   gpl_usb_string\n1171 0x00026d4b 0x08026d4b 7   8    .strtab                   ascii   strncpy\n1172 0x00026d53 0x08026d53 12  13   .strtab                   ascii   sock_sendmsg\n1173 0x00026d60 0x08026d60 6   7    .strtab                   ascii   memcmp\n1174 0x00026d67 0x08026d67 6   7    .strtab                   ascii   sscanf\n1175 0x00026d6e 0x08026d6e 6   7    .strtab                   ascii   printk\n1176 0x00026d75 0x08026d75 12  13   .strtab                   ascii   __mutex_init\n1177 0x00026d82 0x08026d82 24  25   .strtab                   ascii   mutex_lock_interruptible\n1178 0x00026d9b 0x08026d9b 27  28   .strtab                   ascii   _raw_spin_unlock_irqrestore\n1179 0x00026db7 0x08026db7 15  16   .strtab                   ascii   param_ops_short\n1180 0x00026dc7 0x08026dc7 10  11   .strtab                   ascii   proc_mkdir\n1181 0x00026dd2 0x08026dd2 14  15   .strtab                   ascii   kernel_connect\n1182 0x00026de1 0x08026de1 17  18   .strtab                   ascii   gpl_usb_alloc_urb\n1183 0x00026df3 0x08026df3 6   7    .strtab                   ascii   memset\n1184 0x00026dfa 0x08026dfa 14  15   .strtab                   ascii   del_timer_sync\n1185 0x00026e09 0x08026e09 9   10   .strtab                   ascii   __memzero\n1186 0x00026e13 0x08026e13 17  18   .strtab                   ascii   kernel_setsockopt\n1187 0x00026e25 0x08026e25 15  16   .strtab                   ascii   param_ops_charp\n1188 0x00026e35 0x08026e35 19  20   .strtab                   ascii   wait_for_completion\n1189 0x00026e49 0x08026e49 21  22   .strtab                   ascii   __init_waitqueue_head\n1190 0x00026e5f 0x08026e5f 17  18   .strtab                   ascii   kernel_sock_ioctl\n1191 0x00026e71 0x08026e71 20  21   .strtab                   ascii   gpl_usb_reset_device\n1192 0x00026e86 0x08026e86 6   7    .strtab                   ascii   strcmp\n1193 0x00026e8d 0x08026e8d 7   8    .strtab                   ascii   jiffies\n1194 0x00026e95 0x08026e95 22  23   .strtab                   ascii   kthread_create_on_node\n1195 0x00026eac 0x08026eac 7   8    .strtab                   ascii   sprintf\n1196 0x00026eb4 0x08026eb4 16  17   .strtab                   ascii   gpl_usb_bulk_msg\n1197 0x00026ec5 0x08026ec5 13  14   .strtab                   ascii   kernel_listen\n1198 0x00026ed3 0x08026ed3 5   6    .strtab                   ascii   vfree\n1199 0x00026ed9 0x08026ed9 12  13   .strtab                   ascii   mutex_unlock\n1200 0x00026ee6 0x08026ee6 20  21   .strtab                   ascii   gpl_usb_buffer_alloc\n1201 0x00026efb 0x08026efb 14  15   .strtab                   ascii   init_timer_key\n1202 0x00026f0a 0x08026f0a 19  20   .strtab                   ascii   gpl_usb_ifnum_to_if\n1203 0x00026f1e 0x08026f1e 20  21   .strtab                   ascii   gpl_usb_register_dev\n1204 0x00026f33 0x08026f33 17  18   .strtab                   ascii   remove_proc_entry\n1205 0x00026f45 0x08026f45 12  13   .strtab                   ascii   sock_recvmsg\n1206 0x00026f52 0x08026f52 15  16   .strtab                   ascii   dev_get_by_name\n1207 0x00026f62 0x08026f62 12  13   .strtab                   ascii   sock_release\n1208 0x00026f6f 0x08026f6f 11  12   .strtab                   ascii   gpl_dev_dbg\n1209 0x00026f7b 0x08026f7b 19  20   .strtab                   ascii   current_kernel_time\n1210 0x00026f8f 0x08026f8f 16  17   .strtab                   ascii   get_random_bytes\n1211 0x00026fa0 0x08026fa0 8   9    .strtab                   ascii   send_sig\n1212 0x00026fa9 0x08026fa9 24  25   .strtab                   ascii   autoremove_wake_function\n1213 0x00026fc2 0x08026fc2 15  16   .strtab                   ascii   dev_set_drvdata\n1214 0x00026fd2 0x08026fd2 6   7    .strtab                   ascii   strlen\n1215 0x00026fd9 0x08026fd9 14  15   .strtab                   ascii   __copy_to_user\n1216 0x00026fe8 0x08026fe8 6   7    .strtab                   ascii   strchr\n1217 0x00026fef 0x08026fef 7   8    .strtab                   ascii   vmalloc\n1218 0x00026ff7 0x08026ff7 28  29   .strtab                   ascii   gpl_usb_altnum_to_altsetting\n1219 0x00027014 0x08027014 16  17   .strtab                   ascii   __copy_from_user\n1220 0x00027025 0x08027025 17  18   .strtab                   ascii   complete_and_exit\n1221 0x00027037 0x08027037 29  30   .strtab                   ascii   gpl_usb_lock_device_for_reset\n1222 0x00027055 0x08027055 6   7    .strtab                   ascii   msleep\n1223 0x0002705c 0x0802705c 11  12   .strtab                   ascii   get_seconds\n1224 0x00027068 0x08027068 9   10   .strtab                   ascii   __kmalloc\n1225 0x00027072 0x08027072 14  15   .strtab                   ascii   kmalloc_caches", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"基于对NetUSB.ko的深入分析，我已经验证了警报中的关键点。从反汇编代码中确认了栈缓冲区大小为0x324字节（804字节），sprintf调用在0x08018cdc处，循环最多运行10次，且格式字符串为'usblp%d\\\\n%s\\\\n%s\\\\n%s\\\\n%d\\\\n'。输入通过getStringItem从USB设备获取，攻击者可控制这些字符串。证据支持完整的攻击链：恶意USB设备提供长字符串 → 读取proc文件 → sym.kc_read_proc格式化字符串到固定缓冲区 → 无边界检查导致溢出。漏洞实际可利用，风险高。\",\n  \"action\": \"finish\",\n  \"action_input\": {\n    \"final_response\": {\n      \"accuracy\": \"accurate\",\n      \"vulnerability\": true,\n      \"risk_level\": \"High\",\n      \"reason\": \"警报描述准确基于以下证据：1) 反汇编代码显示sym.kc_read_proc在0x08018b18分配0x324字节栈缓冲区（804字节）；2) sprintf调用在0x08018cdc，使用格式字符串'usblp%d\\\\n%s\\\\n%s\\\\n%s\\\\n%d\\\\n'（从字符串列表确认）；3) 循环在0x08018cec运行最多10次，累积数据而无大小检查；4) 输入通过getStringItem调用（0x08018ba8等处）从USB设备检索产品、制造商和序列号字符串，攻击者可控制这些字符串。完整攻击链验证：攻击者连接恶意USB设备（提供长字符串，如每个200字节）→ 用户读取/proc/netusb/device → sym.kc_read_proc执行 → sprintf格式化字符串到固定缓冲区 → 超过804字节时溢出内核栈。漏洞实际可利用，因攻击者（已连接设备并拥有登录凭据）可触发溢出导致内核栈破坏，可能实现代码执行或信息泄露。PoC步骤：1) 制作恶意USB设备，设置产品、制造商和序列号为长字符串（例如，每个200字符）；2) 连接设备到系统；3) 执行'cat /proc/netusb/device'命令；4) 观察系统崩溃或执行任意代码。风险高因涉及内核内存破坏。\"\n    }\n  },\n  \"status\": \"complete\"\n}"}
