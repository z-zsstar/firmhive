{"role": "system", "content": "\n你是一个固件文件系统静态分析代理。你的任务是基于当前分析焦点（特定目录）进行探索和分析。请专注于当前焦点，当你认为对其分析已完成或无法进一步推进时，继续下一个任务或结束任务。\n\n工作方法：\n\n1.  **理解需求**\n    *   始终关注当前分析对象或特定任务，同时也要参考用户的整体或初始需求。\n    *   仔细理解用户当前想要分析的固件内容和目标。除非你非常确定不符合要求，否则不要遗漏符合用户要求的目录和文件。\n    *   如果用户需求不清楚，根据固件特征选择最佳分析路径，适当分解复杂任务，合理调用分析助手。\n\n2.  **制定分析计划**\n    *   根据固件特征选择最佳分析路径。\n    *   对于复杂任务，将其分解为多个具有明确目标和步骤的子任务，合理调用分析助手和工具。\n    *   根据助手反馈合理调整分析计划，确保计划准确完整。如果助手无法完成任务，重新制定分析计划。如果助手尝试两次后仍无法完成任务，继续分析下一个任务。\n\n3.  **分析期间的问题处理**\n    *   记录分析过程中遇到的技术难点和独特挑战。\n    *   评估问题在实际固件环境中的影响。\n    *   谨慎使用某些工具，避免结果过长导致分析失败，例如 `strings` 工具。\n\n4.  **提交分析结果**\n    *   总结所有分析结果并回答当前任务对应的问题。\n    *   如实报告证据不足或不确定的情况或困难（缺少什么证据，缺少什么信息）。\n\n**核心工作流程：**\n\n1.  **理解需求**\n    *   始终关注具体任务，同时也要参考用户的整体或初始需求。注意，如果任务与当前分析焦点不匹配，你需要停止分析并及时向用户反馈。不要执行跨目录分析。\n    *   仔细理解用户当前想要分析的固件内容和目标。除非你非常确定不符合要求，否则不要遗漏符合用户要求的目录和文件。如果用户需求不清楚，根据固件特征选择最佳分析路径，分解复杂任务，合理调用分析助手。\n\n2.  **理解上下文**：使用工具精确了解你当前的分析焦点和位置。\n\n3.  **委托任务**：需要深入分析时，调用适当的分析助手：\n    *   **探索目录**：使用子目录分析助手或其并行版本切换到指定目录进行分析。\n    *   **分析文件**：使用文件分析助手或其并行版本分析指定文件。\n\n4.  **总结并完成**：完成当前焦点的所有分析任务后，总结你的发现。如果所有任务都已完成，使用 `finish` 动作结束。\n\n*   在 'action' 字段中选择工具或 'finish'，并在 'action_input' 中提供参数或最终响应。\n\n\n当前可用工具：\n- Name: get_context_info\n  Description: 获取当前分析任务的上下文信息，例如正在分析的文件或目录。\n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {},\n  \"required\": []\n}\n\n- Name: execute_shell\n  Description: 在当前目录（squashfs-root）中执行只读 shell 命令。\n    **警告：** 此工具严格限制在当前工作目录内。所有文件操作不得引用父目录或任何其他目录。建议使用 `file` 工具在当前目录内进行探索和识别。\n    **注意：** 所有命令都在当前目录中执行。所有路径参数应相对于当前目录。禁止包含 '/' 或 '..' 的路径。\n    支持的命令：file, find, strings, grep, head, tail, readelf, cat, sort, ls。\n    禁止输出重定向（'>'、'>>'）、命令链接和目录更改。\n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"command\": {\n      \"type\": \"string\",\n      \"description\": \"要执行的 shell 命令。命令将在 'squashfs-root' 目录中执行。命令中的所有路径应相对于此目录。\"\n    }\n  },\n  \"required\": [\n    \"command\"\n  ]\n}\n\n- Name: r2_file_target\n  Description: \n    与 Radare2 交互式会话交互以分析指定的二进制文件。注意，此工具会自动为目标分析对象建立并维护 r2 会话。\n\n    主要功能：\n    - 发送 Radare2 命令并获取输出\n    - 会话状态在调用之间保持（对于同一文件）\n    - 支持使用 r2ghidra 插件进行反编译：\n    * 使用 `pdg` 命令反编译函数\n    * 提供类似 C 的伪代码输出\n\n    \n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"file_name\": {\n      \"type\": \"string\",\n      \"description\": \"要分析的文件名称。提供相对于固件根目录的路径，不要以 ./ 开头。\"\n    },\n    \"command\": {\n      \"type\": \"string\",\n      \"description\": \"直接与 Radare2 交互的命令\"\n    }\n  },\n  \"required\": [\n    \"file_name\",\n    \"command\"\n  ]\n}\n\n- Name: DeepFileAnalysisAssistant\n  Description: \n    用于对当前目录范围内指定文件进行深度分析的代理。\n    只能分析当前目录或其子目录（任意深度）中的文件。\n    对于你作用域内的文件，使用简单的相对路径，如 'config.php' 或 'subdir/file.txt'。\n    适用于单个文件的深度分析任务。你可以在观察单步结果后决定下一个分析任务。对于验证任务等有针对性的分析，强烈建议使用此代理。\n    \n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"file_name\": {\n      \"type\": \"string\",\n      \"description\": \"相对于你当前目录的文件路径（例如，'config.php'、'hnap/Login.xml'）。你只能访问当前目录或其子目录中的文件。\"\n    },\n    \"run_in_background\": {\n      \"type\": \"boolean\",\n      \"description\": \"是否在后台运行此任务。\",\n      \"default\": false\n    }\n  },\n  \"required\": [\n    \"file_name\"\n  ],\n  \"description\": \"包含文件分析目标的对象。使用相对于当前工作目录的路径。\"\n}\n\n- Name: DeepDirectoryAnalysisAssistant\n  Description: \n    用于对当前目录范围内指定子目录进行深度分析的代理。\n    只能分析当前目录中的子目录（直接子目录或更深层的嵌套目录）。\n    对于你作用域内的目录，使用简单的相对路径，如 'hnap' 或 'subdir/nested'。\n    适用于单个子目录的深度分析任务。你可以在观察单步结果后决定下一个分析任务。对于验证任务等有针对性的分析，强烈建议使用此代理。\n    \n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"dir_name\": {\n      \"type\": \"string\",\n      \"description\": \"相对于你当前目录的目录路径（例如，'hnap'、'init.d'）。你只能访问当前目录范围内的子目录。\"\n    },\n    \"run_in_background\": {\n      \"type\": \"boolean\",\n      \"description\": \"是否在后台运行此任务。\",\n      \"default\": false\n    }\n  },\n  \"required\": [\n    \"dir_name\"\n  ],\n  \"description\": \"包含目录分析目标的对象。使用相对于当前工作目录的路径。\"\n}\n\n- Name: ParallelDeepFileAnalysisDelegator\n  Description: \n    深度文件分析委托器 - 将当前目录范围内多个文件的分析任务分配给子代理并行处理。\n    只能分析当前目录或其子目录（任意深度）中的文件。\n    对于你作用域内的文件，使用简单的相对路径。\n    适用于同时对多个文件进行深度分析的任务。对于复杂任务或全面分析，强烈建议使用此委托器。\n    \n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"file_names\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\",\n        \"description\": \"相对于你当前目录的文件路径（例如，'config.php'、'hnap/Login.xml'）。你只能访问当前目录或其子目录中的文件。\"\n      },\n      \"description\": \"要并行分析的文件路径列表。使用相对于当前工作目录的路径。\"\n    },\n    \"run_in_background\": {\n      \"type\": \"boolean\",\n      \"description\": \"是否在后台运行此任务。\",\n      \"default\": false\n    }\n  },\n  \"required\": [\n    \"file_names\"\n  ],\n  \"description\": \"包含当前目录范围内文件分析目标列表的对象。\"\n}\n\n- Name: ParallelDeepDirectoryAnalysisDelegator\n  Description: \n    深度目录分析委托器 - 将当前目录范围内多个子目录的分析任务分配给子代理并行处理。\n    只能分析当前目录中的子目录（直接子目录或更深层的嵌套目录）。\n    对于你作用域内的目录，使用简单的相对路径。\n    适用于同时对多个子目录进行深度分析的任务。对于复杂任务或全面分析，强烈建议使用此委托器。\n    \n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"dir_names\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\",\n        \"description\": \"相对于你当前目录的目录路径（例如，'hnap'、'init.d'）。你只能访问当前目录范围内的子目录。\"\n      },\n      \"description\": \"要并行分析的目录路径列表。使用相对于当前工作目录的路径。\"\n    },\n    \"run_in_background\": {\n      \"type\": \"boolean\",\n      \"description\": \"是否在后台运行此任务。\",\n      \"default\": false\n    }\n  },\n  \"required\": [\n    \"dir_names\"\n  ],\n  \"description\": \"包含当前目录范围内目录分析目标列表的对象。\"\n}\n\n**后台执行和任务调度**：\n- 在 action_input 中设置 `run_in_background: true` 可异步运行任务。\n- 后台任务完成时，结果会自动注入。\n- 当需要后台结果才能继续时，使用 'wait' 动作。\n\n调度策略（避免遗漏和重复，最大化效率）：\n1. 识别独立任务，如果不立即需要结果，在后台启动它们。\n2. 在后台任务并行运行时继续其他工作。\n3. 当依赖任务需要后台结果时使用 'wait'。\n4. 在脑海中跟踪所有启动的后台任务以避免重复。\n5. 在 'finish' 之前，确保所有后台任务都已完成并整合结果。\n\n响应格式要求：\n\n你必须以严格的 JSON 格式响应。不要在 JSON 对象之外添加任何其他文本。\n不要使用 markdown 格式（如 ```json）。直接输出单个 JSON 对象。\n\n响应必须是符合以下模式的有效 JSON 对象：\n\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"thought\": {\n      \"type\": \"string\",\n      \"description\": \"在这里逐步思考。分析当前情况、目标、可用工具和对话历史。决定是调用工具还是使用 'finish' 动作提供最终答案。\"\n    },\n    \"action\": {\n      \"type\": \"string\",\n      \"description\": \"选择下一个动作。必须是可用工具名称之一、'wait' 或 'finish'。\"\n    },\n    \"action_input\": {\n      \"oneOf\": [\n        {\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"string\"\n        }\n      ],\n      \"description\": \"工具调用的参数或最终响应。如果 action 是工具名称，提供该工具所需的参数（通常是对象）；如果是 'finish'，使用 'final_response' 作为 action_input 的键提供最终响应（通常是包含字符串的对象）。\"\n    },\n    \"status\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"continue\",\n        \"complete\"\n      ],\n      \"description\": \"必须是 'continue'（如果选择了工具）或 'complete'（如果选择了 'finish'）。\"\n    }\n  },\n  \"required\": [\n    \"thought\",\n    \"action\",\n    \"action_input\",\n    \"status\"\n  ]\n}\n\n"}
{"role": "user", "content": "你的唯一任务是严格、客观地验证以下安全警报。你的分析必须完全基于所提供的证据。\n\n**核心原则**：\n1.  **证据驱动**：警报中的所有声明都必须通过分析所提供的证据来验证。严禁猜测或分析无关的信息和文件。\n2.  **逻辑审查**：不要仅仅确认代码的存在；你必须理解其执行逻辑。仔细检查条件语句、数据清理以及决定代码路径是否可达的其他因素。\n3.  **可利用性验证**：通过确认以下内容来验证漏洞是否**实际可利用**：\n    - **输入可控性**：攻击者可以控制污染的输入。\n    - **路径可达性**：在现实条件下可以到达易受攻击的代码路径。\n    - **实际影响**：汇聚操作可能造成实际的安全损害。\n4.  **完整攻击链**：验证从攻击者控制的输入到危险汇聚点的**完整传播路径**，每一步都有证据支持。\n\n**注意**：警报中的函数名可能来自反编译。请仔细搜索；不要仅仅因为它们不在符号表或字符串中就轻易断定它们不存在。\n\n验证以下发现：\n```json\n{\n  \"description\": \"A command injection vulnerability was identified in the 'udhcpc' DHCP client. The attack chain begins with untrusted input from DHCP response packets (network interface). The IP address from the DHCP packet is parsed and used in a sprintf call to construct a command string, which is then executed via system. The specific code path involves: 1) Receiving a DHCP packet (untrusted input), 2) Extracting the IP address using fcn.0000b728 (DHCP option parsing), 3) Using sprintf with format strings from memory to build a command (e.g., '/sbin/ipconflict <IP>'), 4) Executing the command with system. The trigger condition is when a DHCP response is processed, and the IP address is used in the command. Exploitable because the IP address is not sanitized for shell metacharacters, allowing command injection if an attacker controls the DHCP server.\",\n  \"location\": \"Function fcn.000090c0 (main) at address 0x9e60 (system call) and surrounding code involving sprintf at address 0x... (from decompilation).\",\n  \"code_snippet\": \"// From decompiled code:\\npuVar10 = fcn.0000b728(puVar22,1); // Extract IP address from DHCP packet\\nif ((puVar10 != NULL) && (uVar21 = *(puVar2 + 0xb), uVar21 == 0)) {\\n    uVar11 = *(puVar26 + 0xfffffd98); // IP address\\n    // ... other assignments ...\\n    sym.imp.sprintf(puVar26 + 0xfffffd08, *0xa118, *0xa11c, uVar11); // Build command string\\n    iVar3 = sym.imp.system(puVar26 + 0xfffffd08); // Execute command\\n}\",\n  \"risk_score\": 8.5,\n  \"file_path\": \"sbin/udhcpc\"\n}\n```\n**要求**：\n1.  **专注验证**：你的所有操作都必须围绕验证此发现进行。\n2.  **证据支持**：你的结论必须基于工具返回的实际证据。\n3.  **不做无关分析**：不要探索此发现之外的任何其他潜在问题。\n\n\n**提供结论**：在分析结束时，`final_response` 必须是包含以下字段的 JSON 对象：\n    - `accuracy`: (字符串) 对警报描述准确性的评估。必须是 'accurate'（准确）、'inaccurate'（不准确）或 'partially'（部分准确）。\n    - `vulnerability`: (布尔值) 判断该描述是否足以构成真实漏洞。必须是 True 或 False。前提条件是攻击者是已连接到设备并拥有有效登录凭据的用户。\n    - `risk_level`: (字符串) 如果 `vulnerability` 为 `true`，则为漏洞的风险级别。必须是 'Low'（低）、'Medium'（中）或 'High'（高）。\n    - `reason`: (字符串) 对你判断的详细解释，必须支持以上所有结论。对于确认为真实漏洞的发现，此字段还必须提供可重现的攻击载荷或概念验证（PoC）步骤，清楚地描述如何利用该漏洞。\n"}
{"role": "assistant", "content": "{\n  \"thought\": \"我将开始验证这个安全警报。首先，我需要获取当前上下文信息，确认我所在的位置和可访问的文件。然后，我将专注于分析 'sbin/udhcpc' 文件，使用 Radare2 工具来检查反编译代码，验证警报中提到的函数、代码路径和漏洞细节。关键点是确认输入可控性、路径可达性和实际影响。\",\n  \"action\": \"get_context_info\",\n  \"action_input\": {},\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：get_context_info\n参数：{}\n结果：\n 当前分析焦点：\n- 文件：未指定\n- 目录：squashfs-root\n- 相对于固件根目录的目录路径：.", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"我需要验证安全警报中描述的 'udhcpc' 命令注入漏洞。首先，确认 'sbin/udhcpc' 文件是否存在，然后使用 Radare2 分析该文件，检查反编译代码以验证警报中的函数、代码路径和漏洞细节。关键点是确认输入可控性（DHCP 响应中的 IP 地址）、路径可达性（DHCP 响应处理）和实际影响（命令注入）。\",\n  \"action\": \"execute_shell\",\n  \"action_input\": {\n    \"command\": \"file sbin/udhcpc\"\n  },\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：execute_shell\n参数：{\"command\": \"file sbin/udhcpc\"}\n结果：\n 退出代码：0\n标准输出：\nsbin/udhcpc: ELF 32-bit LSB executable, ARM, EABI5 version 1 (SYSV), dynamically linked, interpreter /lib/ld-uClibc.so.0, no section header\n\n", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"我将使用 Radare2 分析 'sbin/udhcpc' 文件，以验证安全警报。首先，我需要检查反编译代码，特别是函数 fcn.000090c0 和 fcn.0000b728，以及 system 和 sprintf 调用。警报提到地址 0x9e60 有 system 调用，但函数名是 fcn.000090c0，所以我需要仔细分析代码路径。我将发送 Radare2 命令来反编译相关函数，并检查输入处理、命令构建和执行逻辑。\",\n  \"action\": \"r2_file_target\",\n  \"action_input\": {\n    \"file_name\": \"sbin/udhcpc\",\n    \"command\": \"pdf @ fcn.000090c0\"\n  },\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：r2_file_target\n参数：{\"file_name\": \"sbin/udhcpc\", \"command\": \"pdf @ fcn.000090c0\"}\n结果：\n ; DATA XREF from entry0 @ 0xa208(r)\n            ; NULL XREF from entry0 @ +0x34(r)\n┌ 4000: fcn.000090c0 (int32_t arg1, int32_t arg2, int32_t arg_4h, int32_t arg_1ch); // noreturn\n│ `- args(r0, r1, sp[0x4..0x1c]) vars(30:sp[0x28..0x428])\n│           0x000090c0      f04f2de9       push {r4, r5, r6, r7, r8, sb, sl, fp, lr}\n│           0x000090c4      01db4de2       sub sp, sp, 0x400\n│           0x000090c8      04d04de2       sub sp, sp, 4\n│           0x000090cc      4020a0e3       mov r2, 0x40                ; '@'\n│           0x000090d0      e45f9fe5       ldr r5, obj.optarg          ; [0x15650:4]=0\n│                                                                      ; loc._edata\n│           0x000090d4      0080a0e1       mov r8, r0                  ; arg1\n│           0x000090d8      01a0a0e1       mov sl, r1                  ; arg2\n│           0x000090dc      4c008de2       add r0, dest                ; void *s\n│           0x000090e0      0010a0e3       mov r1, 0                   ; int c\n│           0x000090e4      9affffeb       bl sym.imp.memset           ; void *memset(void *s, int c, size_t n)\n│           0x000090e8      d01f9fe5       ldr r1, [0x0000a0c0]        ; [0xa0c0:4]=0xc4e7 \"ac:fbH:h:d:i:np:qr:s:v\" ; const char *src\n│           0x000090ec      4c008de2       add r0, dest                ; char *dest\n│           0x000090f0      0070a0e3       mov r7, 0\n│           0x000090f4      18ffffeb       bl sym.imp.strcpy           ; char *strcpy(char *dest, const char *src)\n│           0x000090f8      4c008de2       add r0, dest                ; const char *s\n│           0x000090fc      beffffeb       bl sym.imp.strlen           ; size_t strlen(const char *s)\n│           0x00009100      4c108de2       add r1, dest\n│           0x00009104      000081e0       add r0, r1, r0              ; char *dest\n│           0x00009108      b41f9fe5       ldr r1, str.V:              ; [0xc4fe:4]=0x4e003a56 ; \"V:\" ; const char *src\n│           0x0000910c      12ffffeb       bl sym.imp.strcpy           ; char *strcpy(char *dest, const char *src)\n│           0x00009110      4c008de2       add r0, dest                ; const char *s\n│           0x00009114      b8ffffeb       bl sym.imp.strlen           ; size_t strlen(const char *s)\n│           0x00009118      4c208de2       add r2, dest\n│           0x0000911c      a41f9fe5       ldr r1, [0x0000a0c8]        ; [0xa0c8:4]=0xc501 \"N:\" ; const char *src\n│           0x00009120      000082e0       add r0, r2, r0              ; char *dest\n│           0x00009124      0cffffeb       bl sym.imp.strcpy           ; char *strcpy(char *dest, const char *src)\n│           ; XREFS: CODE 0x0000926c  CODE 0x00009278  CODE 0x00009300  \n│           ; XREFS: CODE 0x0000930c  CODE 0x00009318  CODE 0x00009324  \n│           ; XREFS: CODE 0x00009338  CODE 0x0000934c  CODE 0x0000935c  \n│           ; XREFS: CODE 0x000093c4  CODE 0x000093d0  \n│ ┌┌┌┌┌┌┌─> 0x00009128      9c4f9fe5       ldr r4, [0x0000a0cc]        ; [0xa0cc:4]=0x15290\n│ ╎╎╎╎╎╎╎   0x0000912c      019b8de2       add sb, var_400h\n│ ╎╎╎╎╎╎╎   0x00009130      0030a0e3       mov r3, 0\n│ ╎╎╎╎╎╎╎   0x00009134      0800a0e1       mov r0, r8                  ; int argc\n│ ╎╎╎╎╎╎╎   0x00009138      0a10a0e1       mov r1, sl                  ; char **argv\n│ ╎╎╎╎╎╎╎   0x0000913c      743229e5       str r3, [sb, -0x274]!\n│ ╎╎╎╎╎╎╎   0x00009140      4c208de2       add r2, dest\n│ ╎╎╎╎╎╎╎   0x00009144      00908de5       str sb, [sp]\n│ ╎╎╎╎╎╎╎   0x00009148      303084e2       add r3, r4, 0x30\n│ ╎╎╎╎╎╎╎   0x0000914c      0460a0e1       mov r6, r4\n│ ╎╎╎╎╎╎╎   0x00009150      19ffffeb       bl sym.imp.getopt_long      ; int getopt_long(int argc, char **argv, const char*optstring, void *longopts, int longidx)\n│ ╎╎╎╎╎╎╎   0x00009154      010070e3       cmn r0, 1                   ; 1\n│ ────────< 0x00009158      a100000a       beq 0x93e4\n│ ╎╎╎╎╎╎╎   0x0000915c      480040e2       sub r0, r0, 0x48\n│ ╎╎╎╎╎╎╎   0x00009160      2e0050e3       cmp r0, 0x2e                ; 46\n│ ╎╎╎╎╎╎╎   ;-- switch:\n│ ╎╎╎╎╎╎╎   0x00009164      00f19f97       ldrls pc, [pc, r0, lsl 2]   ; [0x916c:4]=0x927c case.0x9164.32 ; switch table (47 cases) at 0x916c\n│ ╎╎╎╎╎╎╎   ;-- default:                                               ; from 0x9164\n│ ╎╎╎╎╎╎╎   ; CODE XREF from fcn.000090c0 @ 0x9164(x)\n│ ────────< 0x00009168      990000ea       b case.0x9164.1\n  ╎╎╎╎╎╎╎   ; CODE XREF from fcn.000090c0 @ 0x9164(x)\n..\n│ ╎╎╎╎╎╎╎   ;-- case 27:                                               ; from 0x00009164\n│ ╎╎╎╎╎╎╎   ; CODE XREF from fcn.000090c0 @ 0x9164(x)\n│ ╎╎╎╎╎╎╎   ; NULL XREF from case.default.0x9164 @ +0x70(x)\n│ ╎╎╎╎╎╎╎   0x00009228      000095e5       ldr r0, [r5]                ; const char *s\n│ ╎╎╎╎╎╎╎   0x0000922c      72ffffeb       bl sym.imp.strlen           ; size_t strlen(const char *s)\n│ ╎╎╎╎╎╎╎   0x00009230      ff0050e3       cmp r0, 0xff                ; 255\n│ ╎╎╎╎╎╎╎   0x00009234      0060a031       movlo r6, r0\n│ ╎╎╎╎╎╎╎   0x00009238      100094e5       ldr r0, [r4, 0x10]\n│ ╎╎╎╎╎╎╎   0x0000923c      ff60a023       movhs r6, 0xff\n│ ╎╎╎╎╎╎╎   0x00009240      000050e3       cmp r0, 0\n│ ────────< 0x00009244      0000000a       beq 0x924c\n│ ╎╎╎╎╎╎╎   0x00009248      74ffffeb       bl sym.imp.free             ; void free(void *ptr)\n│ ╎╎╎╎╎╎╎   ; CODE XREF from fcn.000090c0 @ 0x9244(x)\n│ ────────> 0x0000924c      020086e2       add r0, r6, 2               ; size_t size\n│ ╎╎╎╎╎╎╎   0x00009250      f1feffeb       bl sym.imp.malloc           ;  void *malloc(size_t size)\n│ ╎╎╎╎╎╎╎   0x00009254      3d30a0e3       mov r3, 0x3d                ; '='\n│ ╎╎╎╎╎╎╎   0x00009258      100084e5       str r0, [r4, 0x10]\n│ ╎╎╎╎╎╎╎   0x0000925c      0030c0e5       strb r3, [r0]\n│ ────────< 0x00009260      500000ea       b 0x93a8\n│ ╎╎╎╎╎╎╎   ;-- case 30:                                               ; from 0x00009164\n│ ╎╎╎╎╎╎╎   ; CODE XREF from fcn.000090c0 @ 0x9164(x)\n│ ╎╎╎╎╎╎╎   ; NULL XREF from case.default.0x9164 @ +0x7c(x)\n│ ╎╎╎╎╎╎╎   0x00009264      0130a0e3       mov r3, 1\n│ ╎╎╎╎╎╎╎   0x00009268      0030c4e5       strb r3, [r4]\n│ ────────< 0x0000926c      adffffea       b 0x9128\n│ ╎╎╎╎╎╎╎   ;-- case 26:                                               ; from 0x00009164\n│ ╎╎╎╎╎╎╎   ; CODE XREF from fcn.000090c0 @ 0x9164(x)\n│ ╎╎╎╎╎╎╎   ; NULL XREF from case.default.0x9164 @ +0x6c(x)\n│ ╎╎╎╎╎╎╎   0x00009270      0130a0e3       mov r3, 1\n│ ╎╎╎╎╎╎╎   0x00009274      0330c4e5       strb r3, [r4, 3]\n│ ────────< 0x00009278      aaffffea       b 0x9128\n│ ╎╎╎╎╎╎╎   ;-- case 0:                                                ; from 0x00009164\n│ ╎╎╎╎╎╎╎   ; CODE XREF from fcn.000090c0 @ 0x9164(x)\n│ ╎╎╎╎╎╎╎   ; NULL XREFS from case.default.0x9164 @ +0x4(x), +0x84(r)\n│ ╎╎╎╎╎╎╎   0x0000927c      000095e5       ldr r0, [r5]                ; 0x15650\n│ ╎╎╎╎╎╎╎                                                              ; loc._edata ; const char *s\n│ ╎╎╎╎╎╎╎   0x00009280      5dffffeb       bl sym.imp.strlen           ; size_t strlen(const char *s)\n│ ╎╎╎╎╎╎╎   0x00009284      ff0050e3       cmp r0, 0xff                ; 255\n│ ╎╎╎╎╎╎╎   0x00009288      0060a031       movlo r6, r0\n│ ╎╎╎╎╎╎╎   0x0000928c      140094e5       ldr r0, [r4, 0x14]\n│ ╎╎╎╎╎╎╎   0x00009290      ff60a023       movhs r6, 0xff\n│ ╎╎╎╎╎╎╎   0x00009294      000050e3       cmp r0, 0\n│ ────────< 0x00009298      0000000a       beq 0x92a0\n│ ╎╎╎╎╎╎╎   0x0000929c      5fffffeb       bl sym.imp.free             ; void free(void *ptr)\n│ ╎╎╎╎╎╎╎   ; CODE XREF from fcn.000090c0 @ 0x9298(x)\n│ ────────> 0x000092a0      020086e2       add r0, r6, 2               ; size_t size\n│ ╎╎╎╎╎╎╎   0x000092a4      dcfeffeb       bl sym.imp.malloc           ;  void *malloc(size_t size)\n│ ╎╎╎╎╎╎╎   0x000092a8      140084e5       str r0, [r4, 0x14]\n│ ╎╎╎╎╎╎╎   0x000092ac      0c30a0e3       mov r3, 0xc\n│ ────────< 0x000092b0      0c0000ea       b 0x92e8\n│ ╎╎╎╎╎╎╎   ;-- case 28:                                               ; from 0x00009164\n│ ╎╎╎╎╎╎╎   ; CODE XREF from fcn.000090c0 @ 0x9164(x)\n│ ╎╎╎╎╎╎╎   ; NULL XREF from case.default.0x9164 @ +0x74(x)\n│ ╎╎╎╎╎╎╎   0x000092b4      000095e5       ldr r0, [r5]                ; const char *s\n│ ╎╎╎╎╎╎╎   0x000092b8      4fffffeb       bl sym.imp.strlen           ; size_t strlen(const char *s)\n│ ╎╎╎╎╎╎╎   0x000092bc      ff0050e3       cmp r0, 0xff                ; 255\n│ ╎╎╎╎╎╎╎   0x000092c0      0060a031       movlo r6, r0\n│ ╎╎╎╎╎╎╎   0x000092c4      180094e5       ldr r0, [r4, 0x18]\n│ ╎╎╎╎╎╎╎   0x000092c8      ff60a023       movhs r6, 0xff\n│ ╎╎╎╎╎╎╎   0x000092cc      000050e3       cmp r0, 0\n│ ────────< 0x000092d0      0000000a       beq 0x92d8\n│ ╎╎╎╎╎╎╎   0x000092d4      51ffffeb       bl sym.imp.free             ; void free(void *ptr)\n│ ╎╎╎╎╎╎╎   ; CODE XREF from fcn.000090c0 @ 0x92d0(x)\n│ ────────> 0x000092d8      020086e2       add r0, r6, 2               ; size_t size\n│ ╎╎╎╎╎╎╎   0x000092dc      cefeffeb       bl sym.imp.malloc           ;  void *malloc(size_t size)\n│ ╎╎╎╎╎╎╎   0x000092e0      0f30a0e3       mov r3, 0xf\n│ ╎╎╎╎╎╎╎   0x000092e4      180084e5       str r0, [r4, 0x18]\n│ ╎╎╎╎╎╎╎   ; CODE XREF from fcn.000090c0 @ 0x92b0(x)\n│ ────────> 0x000092e8      0030c0e5       strb r3, [r0]\n│ ╎╎╎╎╎╎╎   0x000092ec      020080e2       add r0, r0, 2\n│ ╎╎╎╎╎╎╎   0x000092f0      016040e5       strb r6, [r0, -1]\n│ ────────< 0x000092f4      2e0000ea       b 0x93b4\n│ ╎╎╎╎╎╎╎   ;-- case 33:                                               ; from 0x00009164\n│ ╎╎╎╎╎╎╎   ; CODE XREF from fcn.000090c0 @ 0x9164(x)\n│ ╎╎╎╎╎╎╎   ; NULL XREF from case.default.0x9164 @ +0x88(x)\n│ ╎╎╎╎╎╎╎   0x000092f8      003095e5       ldr r3, [r5]\n│ ╎╎╎╎╎╎╎   0x000092fc      043084e5       str r3, [r4, 4]\n│ ────────< 0x00009300      88ffffea       b 0x9128\n│ ╎╎╎╎╎╎╎   ;-- case 38:                                               ; from 0x00009164\n│ ╎╎╎╎╎╎╎   ; CODE XREF from fcn.000090c0 @ 0x9164(x)\n│ ╎╎╎╎╎╎╎   ; NULL XREF from case.default.0x9164 @ +0x9c(x)\n│ ╎╎╎╎╎╎╎   0x00009304      0130a0e3       mov r3, 1\n│ ╎╎╎╎╎╎╎   0x00009308      0230c4e5       strb r3, [r4, 2]\n│ ────────< 0x0000930c      85ffffea       b 0x9128\n│ ╎╎╎╎╎╎╎   ;-- case 40:                                               ; from 0x00009164\n│ ╎╎╎╎╎╎╎   ; CODE XREF from fcn.000090c0 @ 0x9164(x)\n│ ╎╎╎╎╎╎╎   ; NULL XREF from case.default.0x9164 @ +0xa4(x)\n│ ╎╎╎╎╎╎╎   0x00009310      003095e5       ldr r3, [r5]\n│ ╎╎╎╎╎╎╎   0x00009314      083084e5       str r3, [r4, 8]\n│ └───────< 0x00009318      82ffffea       b 0x9128\n│  ╎╎╎╎╎╎   ;-- case 41:                                               ; from 0x00009164\n│  ╎╎╎╎╎╎   ; CODE XREF from fcn.000090c0 @ 0x9164(x)\n│  ╎╎╎╎╎╎   ; NULL XREF from case.default.0x9164 @ +0xa8(x)\n│  ╎╎╎╎╎╎   0x0000931c      0130a0e3       mov r3, 1\n│  ╎╎╎╎╎╎   0x00009320      0130c4e5       strb r3, [r4, 1]\n│  └──────< 0x00009324      7fffffea       b 0x9128\n│   ╎╎╎╎╎   ;-- case 42:                                               ; from 0x00009164\n│   ╎╎╎╎╎   ; CODE XREF from fcn.000090c0 @ 0x9164(x)\n│   ╎╎╎╎╎   ; NULL XREF from case.default.0x9164 @ +0xac(x)\n│   ╎╎╎╎╎   0x00009328      000095e5       ldr r0, [r5]\n│   ╎╎╎╎╎   0x0000932c      d8feffeb       bl sym.imp.inet_addr\n│   ╎╎╎╎╎   0x00009330      983d9fe5       ldr r3, [0x0000a0d0]        ; [0xa0d0:4]=0x15660\n│   ╎╎╎╎╎   0x00009334      100083e5       str r0, [r3, 0x10]\n│   └─────< 0x00009338      7affffea       b 0x9128\n│    ╎╎╎╎   ;-- case 6:                                                ; from 0x00009164\n│    ╎╎╎╎   ; CODE XREF from fcn.000090c0 @ 0x9164(x)\n│    ╎╎╎╎   ; NULL XREF from case.default.0x9164 @ +0x1c(x)\n│    ╎╎╎╎   0x0000933c      000095e5       ldr r0, [r5]\n│    ╎╎╎╎   0x00009340      d3feffeb       bl sym.imp.inet_addr\n│    ╎╎╎╎   0x00009344      843d9fe5       ldr r3, [0x0000a0d0]        ; [0xa0d0:4]=0x15660\n│    ╎╎╎╎   0x00009348      200083e5       str r0, [r3, 0x20]\n│    └────< 0x0000934c      75ffffea       b 0x9128\n│     ╎╎╎   ;-- case 43:                                               ; from 0x00009164\n│     ╎╎╎   ; CODE XREF from fcn.000090c0 @ 0x9164(x)\n│     ╎╎╎   ; NULL XREF from case.default.0x9164 @ +0xb0(x)\n│     ╎╎╎   0x00009350      003095e5       ldr r3, [r5]\n│     ╎╎╎   0x00009354      0170a0e3       mov r7, 1\n│     ╎╎╎   0x00009358      0c3084e5       str r3, [r4, 0xc]\n│     └───< 0x0000935c      71ffffea       b 0x9128\n│      ╎╎   ;-- case 46:                                               ; from 0x00009164\n│      ╎╎   ; CODE XREF from fcn.000090c0 @ 0x9164(x)\n│      ╎╎   ; NULL XREF from case.default.0x9164 @ +0xbc(x)\n│      ╎╎   0x00009360      6c1d9fe5       ldr r1, [0x0000a0d4]        ; [0xa0d4:4]=0xc51a \"0.9.8\"\n│      ╎╎   0x00009364      6c0d9fe5       ldr r0, aav.0x0000c504      ; [0xa0d8:4]=0xc504 aav.0x0000c504 ; const char *format\n│      ╎╎   0x00009368      87feffeb       bl sym.imp.printf           ; int printf(const char *format)\n│     ┌───< 0x0000936c      9b0300ea       b 0xa1e0\n│     │╎╎   ;-- case 14:                                               ; from 0x00009164\n│     │╎╎   ; CODE XREF from fcn.000090c0 @ 0x9164(x)\n│     │╎╎   ; NULL XREF from case.default.0x9164 @ +0x3c(x)\n│     │╎╎   0x00009370      000095e5       ldr r0, [r5]                ; const char *s\n│     │╎╎   0x00009374      20ffffeb       bl sym.imp.strlen           ; size_t strlen(const char *s)\n│     │╎╎   0x00009378      ff0050e3       cmp r0, 0xff                ; 255\n│     │╎╎   0x0000937c      0060a031       movlo r6, r0\n│     │╎╎   0x00009380      280094e5       ldr r0, [r4, 0x28]\n│     │╎╎   0x00009384      ff60a023       movhs r6, 0xff\n│     │╎╎   0x00009388      000050e3       cmp r0, 0\n│    ┌────< 0x0000938c      0000000a       beq 0x9394\n│    ││╎╎   0x00009390      22ffffeb       bl sym.imp.free             ; void free(void *ptr)\n│    ││╎╎   ; CODE XREF from fcn.000090c0 @ 0x938c(x)\n│    └────> 0x00009394      020086e2       add r0, r6, 2               ; size_t size\n│     │╎╎   0x00009398      9ffeffeb       bl sym.imp.malloc           ;  void *malloc(size_t size)\n│     │╎╎   0x0000939c      3c20a0e3       mov r2, 0x3c                ; '<'\n│     │╎╎   0x000093a0      280084e5       str r0, [r4, 0x28]\n│     │╎╎   0x000093a4      0020c0e5       strb r2, [r0]\n│     │╎╎   ; CODE XREF from fcn.000090c0 @ 0x9260(x)\n│ ────────> 0x000093a8      0030a0e3       mov r3, 0\n│     │╎╎   0x000093ac      0160c0e5       strb r6, [r0, 1]\n│     │╎╎   0x000093b0      0230e0e5       strb r3, [r0, 2]!\n│     │╎╎   ; CODE XREF from fcn.000090c0 @ 0x92f4(x)\n│ ────────> 0x000093b4      003d9fe5       ldr r3, obj.optarg          ; [0x15650:4]=0\n│     │╎╎                                                              ; loc._edata\n│     │╎╎   0x000093b8      0620a0e1       mov r2, r6\n│     │╎╎   0x000093bc      001093e5       ldr r1, [r3]                ; 0x15650\n│     │╎╎                                                              ; loc._edata ; const char *src\n│     │╎╎   0x000093c0      cefeffeb       bl sym.imp.strncpy          ; char *strncpy(char *dest, const char *src, size_t  n)\n│     │└──< 0x000093c4      57ffffea       b 0x9128\n│     │ ╎   ;-- case 25:                                               ; from 0x00009164\n│     │ ╎   ; CODE XREF from fcn.000090c0 @ 0x9164(x)\n│     │ ╎   ; NULL XREF from case.default.0x9164 @ +0x68(x)\n│     │ ╎   0x000093c8      0130a0e3       mov r3, 1\n│     │ ╎   0x000093cc      2c30c4e5       strb r3, [r4, 0x2c]\n│     │ └─< 0x000093d0      54ffffea       b 0x9128\n│     │     ;-- case 1...5:                                            ; from 0x00009164\n│     │     ;-- case 7:                                                ; from 0x00009164\n│     │     ;-- case 8...13:                                           ; from 0x00009164\n│     │     ;-- case 15:                                               ; from 0x00009164\n│     │     ;-- case 16...24:                                          ; from 0x00009164\n│     │     ;-- case 29:                                               ; from 0x00009164\n│     │     ;-- case 31:                                               ; from 0x00009164\n│     │     ;-- case 35...37:                                          ; from 0x00009164\n│     │     ;-- case 39:                                               ; from 0x00009164\n│     │     ;-- case 44...45:                                          ; from 0x00009164\n│     │     ; XREFS(33)\n│ ────────> 0x000093d4      000d9fe5       ldr r0, str.Usage:_udhcpc__OPTIONS____c____clientidCLIENTID_________Client_identifier___H____hostnameHOSTNAME_________Client_hostname___h______________________________Alias_for__H___f____foreground________________Do_not_fork_after_getting_lease___b____backgro ; [0xc520:4]=0x67617355 ; \"Usage: udhcpc [OPTIONS]\\n\\n  -c, --clientid=CLIENTID         Client identifier\\n  -H, --hostname=HOSTNAME         Client hostname\\n  -h                              Alias for -H\\n  -f, --foreground                Do not fork after getting lease\\n  -b, --background                Fork to background if lease cannot be\\n                                  immediately negotiated.\\n  -i, --interface=INTERFACE       Interface to use (default: eth0)\\n  -n, --now                       Exit with failure if lease cannot be\\n                                  immediately negotiated.\\n  -p, --pidfile=file              Store process ID of daemon in file\\n  -d, --domain_name               domain name\\n  -q, --quit                      Quit after obtaining lease\\n  -r, --request=IP                IP address to request (default: none)\\n  -s, --script=file               Run file at dhcp events (default:\\n                                  /usr/share/udhcpc/default.script)\\n  -v, --version                   Display version\\n  -V, --vendor                    Set vendor identifier\\n  -N,  --oldip                    Ip address of last time\\n  -a, --apmode                    DUT is running in AP mode\" ; const char *s\n│     │     0x000093d8      86feffeb       bl sym.imp.puts             ; int puts(const char *s)\n│     │     0x000093dc      0000a0e3       mov r0, 0                   ; int status\n│     │     0x000093e0      fffeffeb       bl sym.imp.exit             ; void exit(int status)\n│     │     ; CODE XREF from fcn.000090c0 @ 0x9158(x)\n│ ────────> 0x000093e4      000057e3       cmp r7, 0\n│     │ ┌─< 0x000093e8      0400001a       bne 0x9400\n│     │ │   0x000093ec      2c30d4e5       ldrb r3, [r4, 0x2c]\n│     │ │   0x000093f0      000053e3       cmp r3, 0\n│     │ │   0x000093f4      e43c9f15       ldrne r3, [0x0000a0e0]      ; [0xa0e0:4]=0xc9b6 \"/usr/share/udhcpc/default.script.ap\"\n│     │ │   0x000093f8      e43c9f05       ldreq r3, str._usr_share_udhcpc_default.script ; [0xc9da:4]=0x7273752f ; \"/usr/share/udhcpc/default.script\"\n│     │ │   0x000093fc      0c3084e5       str r3, [r4, 0xc]\n│     │ │   ; CODE XREF from fcn.000090c0 @ 0x93e8(x)\n│     │ └─> 0x00009400      0010a0e3       mov r1, 0\n│     │     0x00009404      dc0c9fe5       ldr r0, [0x0000a0e8]        ; [0xa0e8:4]=0xc9fb \"udhcpc\"\n│     │     0x00009408      0120a0e1       mov r2, r1\n│     │     0x0000940c      b84c9fe5       ldr r4, [0x0000a0cc]        ; [0xa0cc:4]=0x15290\n│     │     0x00009410      b1feffeb       bl sym.imp.openlog\n│     │     0x00009414      b81c9fe5       ldr r1, [0x0000a0d4]        ; [0xa0d4:4]=0xc51a \"0.9.8\"\n│     │     0x00009418      cc0c9fe5       ldr r0, str.udhcp_client__v_s__started ; [0xca02:4]=0x63686475 ; \"udhcp client (v%s) started\" ; const char *format\n│     │     0x0000941c      5afeffeb       bl sym.imp.printf           ; int printf(const char *format)\n│     │     0x00009420      0a00a0e3       mov r0, 0xa                 ; int c\n│     │     0x00009424      205084e2       add r5, r4, 0x20            ; 0x152b0\n│     │                                                                ; str.clientid\n│     │     0x00009428      48feffeb       bl sym.imp.putchar          ; int putchar(int c)\n│     │     0x0000942c      b81c9fe5       ldr r1, str.udhcp_client__v_s__started ; [0xca02:4]=0x63686475 ; \"udhcp client (v%s) started\"\n│     │     0x00009430      0600a0e3       mov r0, 6\n│     │     0x00009434      982c9fe5       ldr r2, [0x0000a0d4]        ; [0xa0d4:4]=0xc51a \"0.9.8\"\n│     │     0x00009438      d7feffeb       bl sym.imp.syslog\n│     │     0x0000943c      080096e5       ldr r0, [r6, 8]             ; int32_t arg1\n│     │     0x00009440      c90b00eb       bl fcn.0000c36c\n│     │     0x00009444      ea0b00eb       bl fcn.0000c3f4\n│     │     0x00009448      040096e5       ldr r0, [r6, 4]             ; int32_t arg1\n│     │     0x0000944c      1c1084e2       add r1, r4, 0x1c            ; int32_t arg2\n│     │     0x00009450      0020a0e3       mov r2, 0\n│     │     0x00009454      0530a0e1       mov r3, r5                  ; 0x152b0\n│     │                                                                ; str.clientid\n│     │     0x00009458      910900eb       bl fcn.0000baa4\n│     │     0x0000945c      000050e3       cmp r0, 0\n│     │ ┌─< 0x00009460      010000aa       bge 0x946c\n│     │ │   ; CODE XREF from fcn.000090c0 @ 0x97d0(x)\n│     │┌──> 0x00009464      0100a0e3       mov r0, 1\n│     │╎│   ; CODE XREF from fcn.000090c0 @ 0xa1e4(x)\n│    ┌────> 0x00009468      ee0300eb       bl fcn.0000a428\n│    ╎│╎│   ; CODE XREF from fcn.000090c0 @ 0x9460(x)\n│    ╎│╎└─> 0x0000946c      103094e5       ldr r3, [r4, 0x10]\n│    ╎│╎    0x00009470      000053e3       cmp r3, 0\n│    ╎│╎┌─< 0x00009474      0d00001a       bne 0x94b0\n│    ╎│╎│   0x00009478      0900a0e3       mov r0, 9                   ; size_t size\n│    ╎│╎│   0x0000947c      66feffeb       bl sym.imp.malloc           ;  void *malloc(size_t size)\n│    ╎│╎│   0x00009480      3d30a0e3       mov r3, 0x3d                ; '='\n│    ╎│╎│   0x00009484      0020a0e1       mov r2, r0\n│    ╎│╎│   0x00009488      100084e5       str r0, [r4, 0x10]\n│    ╎│╎│   0x0000948c      0030c0e5       strb r3, [r0]\n│    ╎│╎│   0x00009490      0730a0e3       mov r3, 7\n│    ╎│╎│   0x00009494      0130c0e5       strb r3, [r0, 1]\n│    ╎│╎│   0x00009498      0130a0e3       mov r3, 1\n│    ╎│╎│   0x0000949c      0230c0e5       strb r3, [r0, 2]\n│    ╎│╎│   0x000094a0      000095e5       ldr r0, [r5]                ; 0x152b0\n│    ╎│╎│                                                              ; str.clientid\n│    ╎│╎│   0x000094a4      b430d5e1       ldrh r3, [r5, 4]\n│    ╎│╎│   0x000094a8      030082e5       str r0, [r2, 3]\n│    ╎│╎│   0x000094ac      b730c2e1       strh r3, [r2, 7]\n│    ╎│╎│   ; CODE XREF from fcn.000090c0 @ 0x9474(x)\n│    ╎│╎└─> 0x000094b0      185c9fe5       ldr r5, [0x0000a0d0]        ; [0xa0d0:4]=0x15660\n│    ╎│╎    0x000094b4      0100a0e3       mov r0, 1\n│    ╎│╎    0x000094b8      0020a0e3       mov r2, 0\n│    ╎│╎    0x000094bc      0010a0e1       mov r1, r0\n│    ╎│╎    0x000094c0      00a0a0e3       mov sl, 0\n│    ╎│╎    0x000094c4      0a70a0e1       mov r7, sl\n│    ╎│╎    0x000094c8      183085e2       add r3, r5, 0x18\n│    ╎│╎    0x000094cc      0540a0e1       mov r4, r5\n│    ╎│╎    0x000094d0      bdfeffeb       bl sym.imp.socketpair\n│    ╎│╎    0x000094d4      141c9fe5       ldr r1, aav.0x0000a44c      ; [0xa44c:4]=0xe59f3064 ; \"d0\\x9f\\xe5\\x04 \\xa0\\xe3\\x13@-\\xe9\\b\\x10\\x8d\\xe2\\x04\" ; void *func\n│    ╎│╎    0x000094d8      0a00a0e3       mov r0, 0xa                 ; int sig\n│    ╎│╎    0x000094dc      78feffeb       bl sym.imp.signal           ; void signal(int sig, void *func)\n│    ╎│╎    0x000094e0      081c9fe5       ldr r1, aav.0x0000a44c      ; [0xa44c:4]=0xe59f3064 ; \"d0\\x9f\\xe5\\x04 \\xa0\\xe3\\x13@-\\xe9\\b\\x10\\x8d\\xe2\\x04\" ; void *func\n│    ╎│╎    0x000094e4      0c00a0e3       mov r0, 0xc                 ; int sig\n│    ╎│╎    0x000094e8      75feffeb       bl sym.imp.signal           ; void signal(int sig, void *func)\n│    ╎│╎    0x000094ec      fc1b9fe5       ldr r1, aav.0x0000a44c      ; [0xa44c:4]=0xe59f3064 ; \"d0\\x9f\\xe5\\x04 \\xa0\\xe3\\x13@-\\xe9\\b\\x10\\x8d\\xe2\\x04\" ; void *func\n│    ╎│╎    0x000094f0      0f00a0e3       mov r0, 0xf                 ; int sig\n│    ╎│╎    0x000094f4      72feffeb       bl sym.imp.signal           ; void signal(int sig, void *func)\n│    ╎│╎    0x000094f8      0a00a0e1       mov r0, sl                  ; int32_t arg1\n│    ╎│╎    0x000094fc      381c9fe5       ldr r1, [0x0000a13c]        ; [0xa13c:4]=0xc4a1 \"deconfig\" ; int32_t arg2\n│    ╎│╎    0x00009500      08a085e5       str sl, [r5, 8]\n│    ╎│╎    0x00009504      fe0500eb       bl fcn.0000ad04\n│    ╎│╎    0x00009508      0200a0e3       mov r0, 2                   ; int32_t arg1\n│    ╎│╎    0x0000950c      800300eb       bl fcn.0000a314\n│    ╎│╎    0x00009510      30a08de5       str sl, [var_30h]\n│    ╎│╎    0x00009514      2ca08de5       str sl, [var_2ch]\n│    ╎│╎    ;-- case 5:                                                ; from 0x00009638\n│    ╎│╎    ; XREFS(25)\n│ ┌┌┌───┌─> 0x00009518      148095e5       ldr r8, [r5, 0x14]\n│ ╎╎╎╎│╎╎   0x0000951c      850300eb       bl fcn.0000a338\n│ ╎╎╎╎│╎╎   0x00009520      0030a0e3       mov r3, 0\n│ ╎╎╎╎│╎╎   0x00009524      0320a0e1       mov r2, r3\n│ ╎╎╎╎│╎╎   0x00009528      080060e0       rsb r0, r0, r8\n│ ╎╎╎╎│╎╎   0x0000952c      8c808de2       add r8, readfds\n│ ╎╎╎╎│╎╎   0x00009530      48308de5       str r3, [var_48h]\n│ ╎╎╎╎│╎╎   0x00009534      44008de5       str r0, [var_44h]\n│ ╎╎╎╎│╎╎   ; CODE XREF from fcn.000090c0 @ 0x9544(x)\n│ ────────> 0x00009538      082083e7       str r2, [r3, r8]\n│ ╎╎╎╎│╎╎   0x0000953c      043083e2       add r3, r3, 4\n│ ╎╎╎╎│╎╎   0x00009540      800053e3       cmp r3, 0x80                ; 128\n│ ────────< 0x00009544      fbffff1a       bne 0x9538\n│ ╎╎╎╎│╎╎   0x00009548      043094e5       ldr r3, [r4, 4]\n│ ╎╎╎╎│╎╎   0x0000954c      000053e3       cmp r3, 0\n│ ────────< 0x00009550      1000000a       beq 0x9598\n│ ╎╎╎╎│╎╎   0x00009554      002095e5       ldr r2, [r5]\n│ ╎╎╎╎│╎╎   0x00009558      000052e3       cmp r2, 0\n│ ────────< 0x0000955c      0d0000aa       bge 0x9598\n│ ╎╎╎╎│╎╎   0x00009560      010053e3       cmp r3, 1                   ; 1\n│ ────────< 0x00009564      0400001a       bne 0x957c\n│ ╎╎╎╎│╎╎   0x00009568      4410a0e3       mov r1, 0x44                ; 'D' ; int32_t arg2\n│ ╎╎╎╎│╎╎   0x0000956c      042096e5       ldr r2, [r6, 4]\n│ ╎╎╎╎│╎╎   0x00009570      0000a0e3       mov r0, 0                   ; int32_t arg1\n│ ╎╎╎╎│╎╎   0x00009574      c30900eb       bl fcn.0000bc88\n│ ────────< 0x00009578      020000ea       b 0x9588\n│ ╎╎╎╎│╎╎   ; CODE XREF from fcn.000090c0 @ 0x9564(x)\n│ ────────> 0x0000957c      1c0096e5       ldr r0, [r6, 0x1c]          ; int32_t arg1\n│ ╎╎╎╎│╎╎   0x00009580      4410a0e3       mov r1, 0x44                ; 'D' ; int32_t arg2\n│ ╎╎╎╎│╎╎   0x00009584      070a00eb       bl fcn.0000bda8\n│ ╎╎╎╎│╎╎   ; CODE XREF from fcn.000090c0 @ 0x9578(x)\n│ ────────> 0x00009588      000085e5       str r0, [r5]\n│ ╎╎╎╎│╎╎   0x0000958c      003094e5       ldr r3, [r4]\n│ ╎╎╎╎│╎╎   0x00009590      000053e3       cmp r3, 0\n│ ────────< 0x00009594      940100ba       blt 0x9bec\n│ ╎╎╎╎│╎╎   ; CODE XREFS from fcn.000090c0 @ 0x9550(x), 0x955c(x)\n│ ────────> 0x00009598      003094e5       ldr r3, [r4]\n│ ╎╎╎╎│╎╎   0x0000959c      000053e3       cmp r3, 0\n│ ────────< 0x000095a0      070000ba       blt 0x95c4\n│ ╎╎╎╎│╎╎   0x000095a4      a322a0e1       lsr r2, r3, 5\n│ ╎╎╎╎│╎╎   0x000095a8      011b8de2       add r1, var_400h\n│ ╎╎╎╎│╎╎   0x000095ac      01c0a0e3       mov ip, 1\n│ ╎╎╎╎│╎╎   0x000095b0      022181e0       add r2, r1, r2, lsl 2\n│ ╎╎╎╎│╎╎   0x000095b4      1f1003e2       and r1, r3, 0x1f\n│ ╎╎╎╎│╎╎   0x000095b8      740312e5       ldr r0, [r2, -0x374]\n│ ╎╎╎╎│╎╎   0x000095bc      1c1180e1       orr r1, r0, ip, lsl r1\n│ ╎╎╎╎│╎╎   0x000095c0      741302e5       str r1, [r2, -0x374]\n│ ╎╎╎╎│╎╎   ; CODE XREF from fcn.000090c0 @ 0x95a0(x)\n│ ────────> 0x000095c4      180094e5       ldr r0, [r4, 0x18]\n│ ╎╎╎╎│╎╎   0x000095c8      011b8de2       add r1, var_400h\n│ ╎╎╎╎│╎╎   0x000095cc      01e0a0e3       mov lr, 1\n│ ╎╎╎╎│╎╎   0x000095d0      a022a0e1       lsr r2, r0, 5\n│ ╎╎╎╎│╎╎   0x000095d4      022181e0       add r2, r1, r2, lsl 2\n│ ╎╎╎╎│╎╎   0x000095d8      1f1000e2       and r1, r0, 0x1f\n│ ╎╎╎╎│╎╎   0x000095dc      74c312e5       ldr ip, [r2, -0x374]\n│ ╎╎╎╎│╎╎   0x000095e0      1e118ce1       orr r1, ip, lr, lsl r1\n│ ╎╎╎╎│╎╎   0x000095e4      741302e5       str r1, [r2, -0x374]\n│ ╎╎╎╎│╎╎   0x000095e8      44209de5       ldr r2, [var_44h]\n│ ╎╎╎╎│╎╎   0x000095ec      000052e3       cmp r2, 0\n│ ╎╎╎╎│╎╎   0x000095f0      00b0a0d3       movle fp, 0\n│ ────────< 0x000095f4      090000da       ble 0x9620\n│ ╎╎╎╎│╎╎   0x000095f8      030050e1       cmp r0, r3\n│ ╎╎╎╎│╎╎   0x000095fc      0020a0e3       mov r2, 0\n│ ╎╎╎╎│╎╎   0x00009600      0300a0b1       movlt r0, r3\n│ ╎╎╎╎│╎╎   0x00009604      44308de2       add r3, var_44h\n│ ╎╎╎╎│╎╎   0x00009608      0e0080e0       add r0, r0, lr              ; int nfds\n│ ╎╎╎╎│╎╎   0x0000960c      0810a0e1       mov r1, r8                  ; fd_set *readfds\n│ ╎╎╎╎│╎╎   0x00009610      00308de5       str r3, [sp]\n│ ╎╎╎╎│╎╎   0x00009614      0230a0e1       mov r3, r2\n│ ╎╎╎╎│╎╎   0x00009618      0bfeffeb       bl sym.imp.select           ; int select(int nfds, fd_set *readfds, fd_set *writefds, fd_set *exceptfds, struct timeval *timeout)\n│ ╎╎╎╎│╎╎   0x0000961c      00b0a0e1       mov fp, r0\n│ ╎╎╎╎│╎╎   ; CODE XREF from fcn.000090c0 @ 0x95f4(x)\n│ ────────> 0x00009620      440300eb       bl fcn.0000a338\n│ ╎╎╎╎│╎╎   0x00009624      00005be3       cmp fp, 0\n│ ╎╎╎╎│╎╎   0x00009628      0080a0e1       mov r8, r0\n│ ────────< 0x0000962c      d200001a       bne 0x997c\n│ ╎╎╎╎│╎╎   0x00009630      083094e5       ldr r3, [r4, 8]\n│ ╎╎╎╎│╎╎   0x00009634      070053e3       cmp r3, 7                   ; 7\n│ ╎╎╎╎│╎╎   ;-- switch:\n│ ╎╎╎╎│╎╎   0x00009638      03f19f97       ldrls pc, [pc, r3, lsl 2]   ; [0x9640:4]=0x9660 case.0x9638.0 ; switch table (8 cases) at 0x9640\n│ ╎╎╎╎│╎╎   ;-- default:                                               ; from 0x9638\n│ ╎╎╎╎│╎╎   ; CODE XREF from fcn.000090c0 @ 0x9638(x)\n│ ────────< 0x0000963c      b5ffffea       b case.0x9638.5\n  ╎╎╎╎│╎╎   ; DATA XREF from fcn.000090c0 @ 0x9638(r)\n..\n│ ╎╎╎╎│╎╎   ;-- case 0:                                                ; from 0x00009638\n│ ╎╎╎╎│╎╎   ; CODE XREF from fcn.000090c0 @ 0x9638(x)\n│ ╎╎╎╎│╎╎   ; NULL XREF from case.default.0x9638 @ +0x4(x)\n│ ╎╎╎╎│╎╎   0x00009660      2c30d6e5       ldrb r3, [r6, 0x2c]\n│ ╎╎╎╎│╎╎   0x00009664      24b094e5       ldr fp, [r4, 0x24]\n│ ╎╎╎╎│╎╎   0x00009668      000053e3       cmp r3, 0\n│ ╎╎╎╎│╎╎   0x0000966c      0330a003       moveq r3, 3\n│ ────────< 0x00009670      0100000a       beq 0x967c\n│ ╎╎╎╎│╎╎   0x00009674      0f0300eb       bl fcn.0000a2b8\n│ ╎╎╎╎│╎╎   0x00009678      0530a0e3       mov r3, 5\n│ ╎╎╎╎│╎╎   ; CODE XREF from fcn.000090c0 @ 0x9670(x)\n│ ────────> 0x0000967c      03005be1       cmp fp, r3\n│ ────────< 0x00009680      380000aa       bge 0x9768\n│ ╎╎╎╎│╎╎   0x00009684      680a9fe5       ldr r0, str._tmp_port_status ; [0xca42:4]=0x706d742f ; \"/tmp/port_status\" ; const char *path\n│ ╎╎╎╎│╎╎   0x00009688      0010a0e3       mov r1, 0                   ; int oflag\n│ ╎╎╎╎│╎╎   0x0000968c      b62100e3       movw r2, 0x1b6\n│ ╎╎╎╎│╎╎   0x00009690      5cfeffeb       bl sym.imp.open             ; int open(const char *path, int oflag)\n│ ╎╎╎╎│╎╎   0x00009694      003050e2       subs r3, r0, 0              ; 0xca42 ; \"/tmp/port_status\"\n│ ────────< 0x00009698      0e0000ba       blt 0x96d8\n│ ╎╎╎╎│╎╎   0x0000969c      431f8de2       add r1, string              ; void *buf\n│ ╎╎╎╎│╎╎   0x000096a0      0120a0e3       mov r2, 1\n│ ╎╎╎╎│╎╎   0x000096a4      28308de5       str r3, [fildes]\n│ ╎╎╎╎│╎╎   0x000096a8      08feffeb       bl sym.imp.read             ; ssize_t read(int fildes, void *buf, size_t nbyte)\n│ ╎╎╎╎│╎╎   0x000096ac      010050e3       cmp r0, 1                   ; 1\n│ ╎╎╎╎│╎╎   0x000096b0      28309de5       ldr r3, [fildes]\n│ ╎╎╎╎│╎╎   0x000096b4      0cb1dd05       ldrbeq fp, [sp, 0x10c]\n│ ╎╎╎╎│╎╎   0x000096b8      00b0a013       movne fp, 0\n│ ╎╎╎╎│╎╎   0x000096bc      0300a0e1       mov r0, r3                  ; int fildes\n│ ╎╎╎╎│╎╎   0x000096c0      31b04b02       subeq fp, fp, 0x31\n│ ╎╎╎╎│╎╎   0x000096c4      1bbf6f01       clzeq fp, fp\n│ ╎╎╎╎│╎╎   0x000096c8      abb2a001       lsreq fp, fp, 5\n│ ╎╎╎╎│╎╎   0x000096cc      50feffeb       bl sym.imp.close            ; int close(int fildes)\n│ ╎╎╎╎│╎╎   0x000096d0      00005be3       cmp fp, 0\n│ ────────< 0x000096d4      0e00001a       bne 0x9714\n│ ╎╎╎╎│╎╎   ; CODE XREF from fcn.000090c0 @ 0x9698(x)\n│ ────────> 0x000096d8      2c20d6e5       ldrb r2, [r6, 0x2c]         ; 0xca42 ; \"/tmp/port_status\"\n│ ╎╎╎╎│╎╎   0x000096dc      e8399fe5       ldr r3, [0x0000a0cc]        ; [0xa0cc:4]=0x15290\n│ ╎╎╎╎│╎╎   0x000096e0      000052e3       cmp r2, 0\n│ ────────< 0x000096e4      0a00001a       bne 0x9714\n│ ╎╎╎╎│╎╎   0x000096e8      0320d3e5       ldrb r2, [r3, 3]\n│ ╎╎╎╎│╎╎   0x000096ec      000052e3       cmp r2, 0\n│ ────────< 0x000096f0      0300000a       beq 0x9704\n│ ╎╎╎╎│╎╎   0x000096f4      0030d3e5       ldrb r3, [r3]\n│ ╎╎╎╎│╎╎   0x000096f8      000053e3       cmp r3, 0\n│ ────────< 0x000096fc      0000001a       bne 0x9704\n│ ╎╎╎╎│╎╎   0x00009700      6e0300eb       bl fcn.0000a4c0\n│ ╎╎╎╎│╎╎   ; CODE XREFS from fcn.000090c0 @ 0x96f0(x), 0x96fc(x)\n│ ────────> 0x00009704      0030a0e3       mov r3, 0\n│ ╎╎╎╎│╎╎   0x00009708      028088e2       add r8, r8, 2\n│ ╎╎╎╎│╎╎   0x0000970c      243084e5       str r3, [r4, 0x24]\n│ ────────< 0x00009710      3c0000ea       b 0x9808\n│ ╎╎╎╎│╎╎   ; CODE XREFS from fcn.000090c0 @ 0x96d4(x), 0x96e4(x)\n│ ────────> 0x00009714      243094e5       ldr r3, [r4, 0x24]\n│ ╎╎╎╎│╎╎   0x00009718      000053e3       cmp r3, 0\n│ ────────< 0x0000971c      0100001a       bne 0x9728\n│ ╎╎╎╎│╎╎   0x00009720      d00300eb       bl fcn.0000a668\n│ ╎╎╎╎│╎╎   0x00009724      0070a0e1       mov r7, r0                  ; 0xca42 ; \"/tmp/port_status\"\n│ ╎╎╎╎│╎╎   ; CODE XREF from fcn.000090c0 @ 0x971c(x)\n│ ────────> 0x00009728      101094e5       ldr r1, [r4, 0x10]          ; int32_t arg2\n│ ╎╎╎╎│╎╎   0x0000972c      0700a0e1       mov r0, r7                  ; int32_t arg1\n│ ╎╎╎╎│╎╎   0x00009730      fc0300eb       bl fcn.0000a728\n│ ╎╎╎╎│╎╎   0x00009734      ff0200eb       bl fcn.0000a338\n│ ╎╎╎╎│╎╎   0x00009738      2c30d6e5       ldrb r3, [r6, 0x2c]\n│ ╎╎╎╎│╎╎   0x0000973c      000053e3       cmp r3, 0\n│ ╎╎╎╎│╎╎   0x00009740      0530a013       movne r3, 5\n│ ────────< 0x00009744      0300001a       bne 0x9758\n│ ╎╎╎╎│╎╎   0x00009748      243095e5       ldr r3, [r5, 0x24]\n│ ╎╎╎╎│╎╎   0x0000974c      020053e3       cmp r3, 2                   ; 2\n│ ╎╎╎╎│╎╎   0x00009750      0230a013       movne r3, 2\n│ ╎╎╎╎│╎╎   0x00009754      0430a003       moveq r3, 4\n│ ╎╎╎╎│╎╎   ; CODE XREF from fcn.000090c0 @ 0x9744(x)\n│ ────────> 0x00009758      003083e0       add r3, r3, r0\n│ ╎╎╎╎│╎╎   0x0000975c      143084e5       str r3, [r4, 0x14]\n│ ╎╎╎╎│╎╎   0x00009760      243094e5       ldr r3, [r4, 0x24]\n│ ────────< 0x00009764      3a0000ea       b 0x9854\n│ ╎╎╎╎│╎╎   ; CODE XREF from fcn.000090c0 @ 0x9680(x)\n│ ────────> 0x00009768      0330d6e5       ldrb r3, [r6, 3]\n│ ╎╎╎╎│╎╎   0x0000976c      000053e3       cmp r3, 0\n│ ────────< 0x00009770      0c00000a       beq 0x97a8\n│ ╎╎╎╎│╎╎   0x00009774      50399fe5       ldr r3, [0x0000a0cc]        ; [0xa0cc:4]=0x15290\n│ ╎╎╎╎│╎╎   0x00009778      0030d3e5       ldrb r3, [r3]\n│ ╎╎╎╎│╎╎   0x0000977c      000053e3       cmp r3, 0\n│ ────────< 0x00009780      0800001a       bne 0x97a8\n│ ╎╎╎╎│╎╎   0x00009784      6c099fe5       ldr r0, [0x0000a0f8]        ; [0xa0f8:4]=0xca53 \"No lease, forking to background.\" ; const char *format\n│ ╎╎╎╎│╎╎   0x00009788      7ffdffeb       bl sym.imp.printf           ; int printf(const char *format)\n│ ╎╎╎╎│╎╎   0x0000978c      0a00a0e3       mov r0, 0xa                 ; int c\n│ ╎╎╎╎│╎╎   0x00009790      6efdffeb       bl sym.imp.putchar          ; int putchar(int c)\n│ ╎╎╎╎│╎╎   0x00009794      0600a0e3       mov r0, 6\n│ ╎╎╎╎│╎╎   0x00009798      58199fe5       ldr r1, [0x0000a0f8]        ; [0xa0f8:4]=0xca53 \"No lease, forking to background.\"\n│ ╎╎╎╎│╎╎   0x0000979c      fefdffeb       bl sym.imp.syslog\n│ ╎╎╎╎│╎╎   0x000097a0      460300eb       bl fcn.0000a4c0\n│ ────────< 0x000097a4      0a0000ea       b 0x97d4\n│ ╎╎╎╎│╎╎   ; CODE XREFS from fcn.000090c0 @ 0x9770(x), 0x9780(x)\n│ ────────> 0x000097a8      0230d6e5       ldrb r3, [r6, 2]\n│ ╎╎╎╎│╎╎   0x000097ac      000053e3       cmp r3, 0\n│ ────────< 0x000097b0      0700000a       beq 0x97d4\n│ ╎╎╎╎│╎╎   0x000097b4      40099fe5       ldr r0, str.No_lease__failing. ; [0xca74:4]=0x6c206f4e ; \"No lease, failing.\" ; const char *format\n│ ╎╎╎╎│╎╎   0x000097b8      73fdffeb       bl sym.imp.printf           ; int printf(const char *format)\n│ ╎╎╎╎│╎╎   0x000097bc      0a00a0e3       mov r0, 0xa                 ; int c\n│ ╎╎╎╎│╎╎   0x000097c0      62fdffeb       bl sym.imp.putchar          ; int putchar(int c)\n│ ╎╎╎╎│╎╎   0x000097c4      0600a0e3       mov r0, 6\n│ ╎╎╎╎│╎╎   0x000097c8      2c199fe5       ldr r1, str.No_lease__failing. ; [0xca74:4]=0x6c206f4e ; \"No lease, failing.\"\n│ ╎╎╎╎│╎╎   0x000097cc      f2fdffeb       bl sym.imp.syslog\n│ ╎╎╎╎│└──< 0x000097d0      23ffffea       b 0x9464\n│ ╎╎╎╎│ ╎   ; CODE XREFS from fcn.000090c0 @ 0x97a4(x), 0x97b0(x)\n│ ────────> 0x000097d4      2c30d6e5       ldrb r3, [r6, 0x2c]\n│ ╎╎╎╎│ ╎   0x000097d8      000053e3       cmp r3, 0\n│ ╎╎╎╎│┌──< 0x000097dc      0200000a       beq 0x97ec\n│ ╎╎╎╎││╎   0x000097e0      0000a0e3       mov r0, 0                   ; int32_t arg1\n│ ╎╎╎╎││╎   0x000097e4      54199fe5       ldr r1, [0x0000a140]        ; [0xa140:4]=0xca87 \"runzcip\" ; int32_t arg2\n│ ╎╎╎╎││╎   0x000097e8      450500eb       bl fcn.0000ad04\n│ ╎╎╎╎││╎   ; CODE XREF from fcn.000090c0 @ 0x97dc(x)\n│ ╎╎╎╎│└──> 0x000097ec      0030a0e3       mov r3, 0\n│ ╎╎╎╎│ ╎   0x000097f0      243084e5       str r3, [r4, 0x24]\n│ ╎╎╎╎│ ╎   0x000097f4      2c30d6e5       ldrb r3, [r6, 0x2c]\n│ ╎╎╎╎│ ╎   0x000097f8      000053e3       cmp r3, 0\n│ ╎╎╎╎│┌──< 0x000097fc      0000000a       beq 0x9804\n│ ╎╎╎╎││╎   0x00009800      ac0200eb       bl fcn.0000a2b8\n│ ╎╎╎╎││╎   ; CODE XREF from fcn.000090c0 @ 0x97fc(x)\n│ ╎╎╎╎│└──> 0x00009804      0a8088e2       add r8, r8, 0xa\n│ ╎╎╎╎│ ╎   ; CODE XREFS from fcn.000090c0 @ 0x9710(x), 0x98c4(x), 0x9a8c(x)\n│ ─────┌──> 0x00009808      148084e5       str r8, [r4, 0x14]\n│ ────────< 0x0000980c      41ffffea       b case.0x9638.5\n│ ╎╎╎╎│╎╎   ;-- case 1:                                                ; from 0x00009638\n│ ╎╎╎╎│╎╎   ; CODE XREF from fcn.000090c0 @ 0x9638(x)\n│ ╎╎╎╎│╎╎   ; NULL XREFS from case.default.0x9638 @ +0x8(x), +0x1c(r)\n│ ╎╎╎╎│╎╎   0x00009810      242094e5       ldr r2, [r4, 0x24]\n│ ╎╎╎╎│╎╎   0x00009814      020052e3       cmp r2, 2                   ; 2\n│ ────────< 0x00009818      100000ca       bgt 0x9860\n│ ╎╎╎╎│╎╎   0x0000981c      060053e3       cmp r3, 6                   ; 6\n│ ╎╎╎╎│╎╎   0x00009820      0700a0e1       mov r0, r7\n│ ╎╎╎╎│╎╎   0x00009824      0c1095e5       ldr r1, [r5, 0xc]\n│ ╎╎╎╎│╎╎   0x00009828      102095e5       ldr r2, [r5, 0x10]\n│ ────────< 0x0000982c      0100001a       bne 0x9838\n│ ╎╎╎╎│╎╎   0x00009830      160400eb       bl fcn.0000a890\n│ ────────< 0x00009834      000000ea       b 0x983c\n│ ╎╎╎╎│╎╎   ; CODE XREF from fcn.000090c0 @ 0x982c(x)\n│ ────────> 0x00009838      e20300eb       bl fcn.0000a7c8\n│ ╎╎╎╎│╎╎   ; CODE XREF from fcn.000090c0 @ 0x9834(x)\n│ ────────> 0x0000983c      243094e5       ldr r3, [r4, 0x24]\n│ ╎╎╎╎│╎╎   0x00009840      020053e3       cmp r3, 2                   ; 2\n│ ╎╎╎╎│╎╎   0x00009844      0120a013       movne r2, 1\n│ ╎╎╎╎│╎╎   0x00009848      0a20a003       moveq r2, 0xa\n│ ╎╎╎╎│╎╎   0x0000984c      028088e0       add r8, r8, r2\n│ ╎╎╎╎│╎╎   0x00009850      148084e5       str r8, [r4, 0x14]\n│ ╎╎╎╎│╎╎   ; CODE XREF from fcn.000090c0 @ 0x9764(x)\n│ ────────> 0x00009854      013083e2       add r3, r3, 1\n│ ╎╎╎╎│╎╎   0x00009858      243084e5       str r3, [r4, 0x24]\n│ ────────< 0x0000985c      2dffffea       b case.0x9638.5\n│ ╎╎╎╎│╎╎   ; CODE XREF from fcn.000090c0 @ 0x9818(x)\n│ ────────> 0x00009860      060053e3       cmp r3, 6                   ; 6\n│ ────────< 0x00009864      0200001a       bne 0x9874\n│ ╎╎╎╎│╎╎   0x00009868      0000a0e3       mov r0, 0                   ; int32_t arg1\n│ ╎╎╎╎│╎╎   0x0000986c      c8189fe5       ldr r1, [0x0000a13c]        ; [0xa13c:4]=0xc4a1 \"deconfig\" ; int32_t arg2\n│ ╎╎╎╎│╎╎   0x00009870      230500eb       bl fcn.0000ad04\n│ ╎╎╎╎│╎╎   ; CODE XREF from fcn.000090c0 @ 0x9864(x)\n│ ────────> 0x00009874      0030a0e3       mov r3, 0\n│ ╎╎╎╎│╎╎   0x00009878      148084e5       str r8, [r4, 0x14]\n│ ╎╎╎╎│╎╎   0x0000987c      083084e5       str r3, [r4, 8]\n│ ╎╎╎╎│╎╎   0x00009880      243084e5       str r3, [r4, 0x24]\n│ ────────< 0x00009884      2e0000ea       b 0x9944\n│ ╎╎╎╎│╎╎   ;-- case 2:                                                ; from 0x00009638\n│ ╎╎╎╎│╎╎   ; CODE XREF from fcn.000090c0 @ 0x9638(x)\n│ ╎╎╎╎│╎╎   ; NULL XREF from case.default.0x9638 @ +0xc(x)\n│ ╎╎╎╎│╎╎   0x00009888      0330a0e3       mov r3, 3\n│ ╎╎╎╎│╎╎   0x0000988c      0100a0e3       mov r0, 1                   ; int32_t arg1\n│ ╎╎╎╎│╎╎   0x00009890      083084e5       str r3, [r4, 8]\n│ ╎╎╎╎│╎╎   0x00009894      9e0200eb       bl fcn.0000a314\n│ ╎╎╎╎│╎╎   ;-- case 3:                                                ; from 0x00009638\n│ ╎╎╎╎│╎╎   ; CODE XREF from fcn.000090c0 @ 0x9638(x)\n│ ╎╎╎╎│╎╎   ; NULL XREF from case.default.0x9638 @ +0x10(x)\n│ ╎╎╎╎│╎╎   0x00009898      30209de5       ldr r2, [var_30h]\n│ ╎╎╎╎│╎╎   0x0000989c      e11da0e3       mov r1, 0x3840              ; '@8'\n│ ╎╎╎╎│╎╎   0x000098a0      2c309de5       ldr r3, [var_2ch]\n│ ╎╎╎╎│╎╎   0x000098a4      3c009de5       ldr r0, [var_3ch]\n│ ╎╎╎╎│╎╎   0x000098a8      02b063e0       rsb fp, r3, r2\n│ ╎╎╎╎│╎╎   0x000098ac      7bfdffeb       bl sym.imp.__aeabi_uidiv\n│ ╎╎╎╎│╎╎   0x000098b0      010080e2       add r0, r0, 1\n│ ╎╎╎╎│╎╎   0x000098b4      00005be1       cmp fp, r0\n│ ╎╎╎╎│╎╎   0x000098b8      0430a093       movls r3, 4\n│ ╎╎╎╎│╎╎   0x000098bc      0b808890       addls r8, r8, fp\n│ ╎╎╎╎│╎╎   0x000098c0      08308495       strls r3, [r4, 8]\n│ ────────< 0x000098c4      cfffff9a       bls 0x9808\n│ ╎╎╎╎│╎╎   0x000098c8      0c1094e5       ldr r1, [r4, 0xc]           ; int32_t arg2\n│ ╎╎╎╎│╎╎   0x000098cc      0700a0e1       mov r0, r7                  ; int32_t arg1\n│ ╎╎╎╎│╎╎   0x000098d0      102094e5       ldr r2, [r4, 0x10]\n│ ╎╎╎╎│╎╎   0x000098d4      ed0300eb       bl fcn.0000a890\n│ ╎╎╎╎│╎╎   0x000098d8      2c109de5       ldr r1, [var_2ch]\n│ ╎╎╎╎│╎╎   0x000098dc      ab1081e0       add r1, r1, fp, lsr 1\n│ ╎╎╎╎│╎╎   0x000098e0      0a3081e0       add r3, r1, sl\n│ ╎╎╎╎│╎╎   0x000098e4      2c108de5       str r1, [var_2ch]\n│ ────────< 0x000098e8      240200ea       b 0xa180\n│ ╎╎╎╎│╎╎   ;-- case 4:                                                ; from 0x00009638\n│ ╎╎╎╎│╎╎   ; CODE XREF from fcn.000090c0 @ 0x9638(x)\n│ ╎╎╎╎│╎╎   ; NULL XREF from case.default.0x9638 @ +0x14(x)\n│ ╎╎╎╎│╎╎   0x000098ec      3c009de5       ldr r0, [sp, 0x3c]\n│ ╎╎╎╎│╎╎   0x000098f0      e11da0e3       mov r1, 0x3840              ; '@8'\n│ ╎╎╎╎│╎╎   0x000098f4      30209de5       ldr r2, [sp, 0x30]\n│ ╎╎╎╎│╎╎   0x000098f8      00b062e0       rsb fp, r2, r0\n│ ╎╎╎╎│╎╎   0x000098fc      67fdffeb       bl sym.imp.__aeabi_uidiv\n│ ╎╎╎╎│╎╎   0x00009900      010080e2       add r0, r0, 1\n│ ╎╎╎╎│╎╎   0x00009904      00005be1       cmp fp, r0\n│ ────────< 0x00009908      1000008a       bhi 0x9950\n│ ╎╎╎╎│╎╎   0x0000990c      00b0a0e3       mov fp, 0\n│ ╎╎╎╎│╎╎   0x00009910      e8079fe5       ldr r0, [0x0000a100]        ; [0xa100:4]=0xca8f \"Lease lost, entering init state\" ; const char *format\n│ ╎╎╎╎│╎╎   0x00009914      08b084e5       str fp, [r4, 8]\n│ ╎╎╎╎│╎╎   0x00009918      1bfdffeb       bl sym.imp.printf           ; int printf(const char *format)\n│ ╎╎╎╎│╎╎   0x0000991c      0a00a0e3       mov r0, 0xa                 ; int c\n│ ╎╎╎╎│╎╎   0x00009920      0afdffeb       bl sym.imp.putchar          ; int putchar(int c)\n│ ╎╎╎╎│╎╎   0x00009924      0600a0e3       mov r0, 6\n│ ╎╎╎╎│╎╎   0x00009928      d0179fe5       ldr r1, [0x0000a100]        ; [0xa100:4]=0xca8f \"Lease lost, entering init state\"\n│ ╎╎╎╎│╎╎   0x0000992c      9afdffeb       bl sym.imp.syslog\n│ ╎╎╎╎│╎╎   0x00009930      0b00a0e1       mov r0, fp                  ; int32_t arg1\n│ ╎╎╎╎│╎╎   0x00009934      00189fe5       ldr r1, [0x0000a13c]        ; [0xa13c:4]=0xc4a1 \"deconfig\" ; int32_t arg2\n│ ╎╎╎╎│╎╎   0x00009938      f10400eb       bl fcn.0000ad04\n│ ╎╎╎╎│╎╎   0x0000993c      148084e5       str r8, [r4, 0x14]\n│ ╎╎╎╎│╎╎   0x00009940      24b084e5       str fp, [r4, 0x24]\n│ ╎╎╎╎│╎╎   ; CODE XREF from fcn.000090c0 @ 0x9884(x)\n│ ────────> 0x00009944      0200a0e3       mov r0, 2\n│ ╎╎╎╎│╎╎   ; CODE XREF from fcn.000090c0 @ 0x99e0(x)\n│ ────────> 0x00009948      710200eb       bl fcn.0000a314\n│ ────────< 0x0000994c      f1feffea       b case.0x9638.5\n│ ╎╎╎╎│╎╎   ; CODE XREF from fcn.000090c0 @ 0x9908(x)\n│ ────────> 0x00009950      0700a0e1       mov r0, r7                  ; int32_t arg1\n│ ╎╎╎╎│╎╎   0x00009954      0010a0e3       mov r1, 0                   ; int32_t arg2\n│ ╎╎╎╎│╎╎   0x00009958      102094e5       ldr r2, [r4, 0x10]\n│ ╎╎╎╎│╎╎   0x0000995c      cb0300eb       bl fcn.0000a890\n│ ╎╎╎╎│╎╎   0x00009960      30309de5       ldr r3, [sp, 0x30]\n│ ╎╎╎╎│╎╎   0x00009964      ab3083e0       add r3, r3, fp, lsr 1\n│ ╎╎╎╎│╎╎   0x00009968      30308de5       str r3, [sp, 0x30]\n│ ╎╎╎╎│╎╎   0x0000996c      0a3083e0       add r3, r3, sl\n│ ────────< 0x00009970      020200ea       b 0xa180\n│ ╎╎╎╎│╎╎   ;-- case 7:                                                ; from 0x00009638\n│ ╎╎╎╎│╎╎   ; CODE XREF from fcn.000090c0 @ 0x9638(x)\n│ ╎╎╎╎│╎╎   ; NULL XREF from case.default.0x9638 @ +0x20(x)\n│ ╎╎╎╎│╎╎   0x00009974      0231e0e3       mvn r3, 0x80000000\n│ ────────< 0x00009978      000200ea       b 0xa180\n│ ╎╎╎╎│╎╎   ; CODE XREF from fcn.000090c0 @ 0x962c(x)\n│ ────────< 0x0000997c      e5feffda       ble case.0x9638.5\n│ ╎╎╎╎│╎╎   0x00009980      043094e5       ldr r3, [r4, 4]\n│ ╎╎╎╎│╎╎   0x00009984      000053e3       cmp r3, 0\n│ ────────< 0x00009988      a301000a       beq 0xa01c\n│ ╎╎╎╎│╎╎   0x0000998c      001095e5       ldr r1, [r5]\n│ ╎╎╎╎│╎╎   0x00009990      012b8de2       add r2, var_400h\n│ ╎╎╎╎│╎╎   0x00009994      a102a0e1       lsr r0, r1, 5\n│ ╎╎╎╎│╎╎   0x00009998      000182e0       add r0, r2, r0, lsl 2\n│ ╎╎╎╎│╎╎   0x0000999c      1f2001e2       and r2, r1, 0x1f\n│ ╎╎╎╎│╎╎   0x000099a0      740310e5       ldr r0, [r0, -0x374]\n│ ╎╎╎╎│╎╎   0x000099a4      5022a0e1       asr r2, r0, r2\n│ ╎╎╎╎│╎╎   0x000099a8      010012e3       tst r2, 1                   ; 1\n│ ────────< 0x000099ac      9a01000a       beq 0xa01c\n│ ╎╎╎╎│╎╎   0x000099b0      010053e3       cmp r3, 1                   ; 1\n│ ╎╎╎╎│╎╎   0x000099b4      0900a0e1       mov r0, sb\n│ ────────< 0x000099b8      0100001a       bne 0x99c4\n│ ╎╎╎╎│╎╎   0x000099bc      3f0900eb       bl fcn.0000bec0\n│ ────────< 0x000099c0      000000ea       b 0x99c8\n│ ╎╎╎╎│╎╎   ; CODE XREF from fcn.000090c0 @ 0x99b8(x)\n│ ────────> 0x000099c4      2e0400eb       bl fcn.0000aa84\n│ ╎╎╎╎│╎╎   ; CODE XREF from fcn.000090c0 @ 0x99c0(x)\n│ ────────> 0x000099c8      010070e3       cmn r0, 1                   ; 1\n│ ────────< 0x000099cc      0500001a       bne 0x99e8\n│ ╎╎╎╎│╎╎   0x000099d0      80fdffeb       bl sym.imp.__errno_location\n│ ╎╎╎╎│╎╎   0x000099d4      003090e5       ldr r3, [r0]\n│ ╎╎╎╎│╎╎   0x000099d8      040053e3       cmp r3, 4                   ; 4\n│ ╎╎╎╎│╎╎   0x000099dc      04009415       ldrne r0, [r4, 4]\n│ ────────< 0x000099e0      d8ffff1a       bne 0x9948\n│ ────────< 0x000099e4      cbfeffea       b case.0x9638.5\n│ ╎╎╎╎│╎╎   ; CODE XREF from fcn.000090c0 @ 0x99cc(x)\n│ ────────> 0x000099e8      000050e3       cmp r0, 0\n│ ────────< 0x000099ec      c9feffba       blt case.0x9638.5\n│ ╎╎╎╎│╎╎   0x000099f0      90b19de5       ldr fp, [var_190h]\n│ ╎╎╎╎│╎╎   0x000099f4      07005be1       cmp fp, r7\n│ ────────< 0x000099f8      c6feff1a       bne case.0x9638.5\n│ ╎╎╎╎│╎╎   0x000099fc      0900a0e1       mov r0, sb                  ; int32_t arg1\n│ ╎╎╎╎│╎╎   0x00009a00      3510a0e3       mov r1, 0x35                ; '5' ; uint32_t arg2\n│ ╎╎╎╎│╎╎   0x00009a04      470700eb       bl fcn.0000b728\n│ ╎╎╎╎│╎╎   0x00009a08      000050e3       cmp r0, 0\n│ ────────< 0x00009a0c      c1feff0a       beq case.0x9638.5\n│ ╎╎╎╎│╎╎   0x00009a10      083094e5       ldr r3, [r4, 8]\n│ ╎╎╎╎│╎╎   0x00009a14      060053e3       cmp r3, 6                   ; 6\n│ ────────< 0x00009a18      befeff8a       bhi case.0x9638.5\n│ ╎╎╎╎│╎╎   0x00009a1c      0120a0e3       mov r2, 1\n│ ╎╎╎╎│╎╎   0x00009a20      1233a0e1       lsl r3, r2, r3\n│ ╎╎╎╎│╎╎   0x00009a24      5ac013e2       ands ip, r3, 0x5a\n│ ────────< 0x00009a28      a200001a       bne 0x9cb8\n│ ╎╎╎╎│╎╎   0x00009a2c      010013e3       tst r3, 1                   ; 1\n│ ────────< 0x00009a30      b8feff0a       beq case.0x9638.5\n│ ╎╎╎╎│╎╎   0x00009a34      0030d0e5       ldrb r3, [r0]\n│ ╎╎╎╎│╎╎   0x00009a38      020053e3       cmp r3, 2                   ; 2\n│ ────────< 0x00009a3c      b5feff1a       bne case.0x9638.5\n│ ╎╎╎╎│╎╎   0x00009a40      0900a0e1       mov r0, sb                  ; int32_t arg1\n│ ╎╎╎╎│╎╎   0x00009a44      3610a0e3       mov r1, 0x36                ; '6' ; uint32_t arg2\n│ ╎╎╎╎│╎╎   0x00009a48      28208de5       str r2, [fildes]\n│ ╎╎╎╎│╎╎   0x00009a4c      24c08de5       str ip, [var_24h]\n│ ╎╎╎╎│╎╎   0x00009a50      340700eb       bl fcn.0000b728\n│ ╎╎╎╎│╎╎   0x00009a54      000050e3       cmp r0, 0\n│ ╎╎╎╎│╎╎   0x00009a58      28209de5       ldr r2, [fildes]\n│ ╎╎╎╎│╎╎   0x00009a5c      24c09de5       ldr ip, [var_24h]\n│ ────────< 0x00009a60      acfeff0a       beq case.0x9638.5\n│ ╎╎╎╎│╎╎   0x00009a64      98369fe5       ldr r3, [0x0000a104]        ; [0xa104:4]=0x1566c\n│ ╎╎╎╎│╎╎   0x00009a68      082085e5       str r2, [r5, 8]\n│ ╎╎╎╎│╎╎   0x00009a6c      000090e5       ldr r0, [r0]\n│ ╎╎╎╎│╎╎   0x00009a70      24c085e5       str ip, [r5, 0x24]\n│ ╎╎╎╎│╎╎   0x00009a74      202095e5       ldr r2, [r5, 0x20]\n│ ╎╎╎╎│╎╎   0x00009a78      90719de5       ldr r7, [var_190h]\n│ ╎╎╎╎│╎╎   0x00009a7c      000083e5       str r0, [r3]\n│ ╎╎╎╎│╎╎   0x00009a80      9c319de5       ldr r3, [in]\n│ ╎╎╎╎│╎╎   0x00009a84      020053e1       cmp r3, r2\n│ ╎╎╎╎│╎╎   0x00009a88      103085e5       str r3, [r5, 0x10]\n│ ╎╎╎╎│└──< 0x00009a8c      5dffff0a       beq 0x9808\n│ ╎╎╎╎│ ╎   0x00009a90      280200eb       bl fcn.0000a338\n│ ╎╎╎╎│ ╎   0x00009a94      013080e2       add r3, r0, 1\n│ ╎╎╎╎│ ╎   0x00009a98      2cb69fe5       ldr fp, [0x0000a0cc]        ; [0xa0cc:4]=0x15290\n│ ╎╎╎╎│ ╎   0x00009a9c      34308de5       str r3, [var_34h]\n│ ╎╎╎╎│┌──< 0x00009aa0      300000ea       b 0x9b68\n│ ╎╎╎╎││╎   ; CODE XREFS from fcn.000090c0 @ 0x9bb4(x), 0x9bc0(x), 0x9be8(x)\n│ ────────> 0x00009aa4      003094e5       ldr r3, [r4]\n│ ╎╎╎╎││╎   0x00009aa8      000053e3       cmp r3, 0\n│ ────────< 0x00009aac      070000ba       blt 0x9ad0\n│ ╎╎╎╎││╎   0x00009ab0      a322a0e1       lsr r2, r3, 5\n│ ╎╎╎╎││╎   0x00009ab4      011b8de2       add r1, var_400h\n│ ╎╎╎╎││╎   0x00009ab8      01c0a0e3       mov ip, 1\n│ ╎╎╎╎││╎   0x00009abc      022181e0       add r2, r1, r2, lsl 2\n│ ╎╎╎╎││╎   0x00009ac0      1f1003e2       and r1, r3, 0x1f\n│ ╎╎╎╎││╎   0x00009ac4      740312e5       ldr r0, [r2, -0x374]\n│ ╎╎╎╎││╎   0x00009ac8      1c1180e1       orr r1, r0, ip, lsl r1\n│ ╎╎╎╎││╎   0x00009acc      741302e5       str r1, [r2, -0x374]\n│ ╎╎╎╎││╎   ; CODE XREF from fcn.000090c0 @ 0x9aac(x)\n│ ────────> 0x00009ad0      180094e5       ldr r0, [r4, 0x18]\n│ ╎╎╎╎││╎   0x00009ad4      011b8de2       add r1, var_400h\n│ ╎╎╎╎││╎   0x00009ad8      01e0a0e3       mov lr, 1\n│ ╎╎╎╎││╎   0x00009adc      a022a0e1       lsr r2, r0, 5\n│ ╎╎╎╎││╎   0x00009ae0      022181e0       add r2, r1, r2, lsl 2\n│ ╎╎╎╎││╎   0x00009ae4      1f1000e2       and r1, r0, 0x1f\n│ ╎╎╎╎││╎   0x00009ae8      74c312e5       ldr ip, [r2, -0x374]\n│ ╎╎╎╎││╎   0x00009aec      1e118ce1       orr r1, ip, lr, lsl r1\n│ ╎╎╎╎││╎   0x00009af0      741302e5       str r1, [r2, -0x374]\n│ ╎╎╎╎││╎   0x00009af4      44209de5       ldr r2, [var_44h]\n│ ╎╎╎╎││╎   0x00009af8      000052e3       cmp r2, 0\n│ ────────< 0x00009afc      6b0000da       ble 0x9cb0\n│ ╎╎╎╎││╎   0x00009b00      030050e1       cmp r0, r3\n│ ╎╎╎╎││╎   0x00009b04      0020a0e3       mov r2, 0\n│ ╎╎╎╎││╎   0x00009b08      0300a0b1       movlt r0, r3\n│ ╎╎╎╎││╎   0x00009b0c      44308de2       add r3, var_44h\n│ ╎╎╎╎││╎   0x00009b10      0e0080e0       add r0, r0, lr              ; int nfds\n│ ╎╎╎╎││╎   0x00009b14      8c108de2       add r1, readfds             ; fd_set *readfds\n│ ╎╎╎╎││╎   0x00009b18      00308de5       str r3, [sp]\n│ ╎╎╎╎││╎   0x00009b1c      0230a0e1       mov r3, r2\n│ ╎╎╎╎││╎   0x00009b20      c9fcffeb       bl sym.imp.select           ; int select(int nfds, fd_set *readfds, fd_set *writefds, fd_set *exceptfds, struct timeval *timeout)\n│ ╎╎╎╎││╎   0x00009b24      000050e3       cmp r0, 0\n│ ────────< 0x00009b28      6000000a       beq 0x9cb0\n│ ╎╎╎╎││╎   0x00009b2c      043095e5       ldr r3, [r5, 4]\n│ ╎╎╎╎││╎   0x00009b30      630f8de2       add r0, var_18ch\n│ ╎╎╎╎││╎   0x00009b34      001095e5       ldr r1, [r5]\n│ ╎╎╎╎││╎   0x00009b38      010053e3       cmp r3, 1                   ; 1\n│ ────────< 0x00009b3c      3e00001a       bne 0x9c3c\n│ ╎╎╎╎││╎   0x00009b40      de0800eb       bl fcn.0000bec0\n│ ╎╎╎╎││╎   ; CODE XREF from fcn.000090c0 @ 0x9c40(x)\n│ ────────> 0x00009b44      010070e3       cmn r0, 1                   ; 1\n│ ────────< 0x00009b48      3d00001a       bne 0x9c44\n│ ╎╎╎╎││╎   0x00009b4c      21fdffeb       bl sym.imp.__errno_location\n│ ╎╎╎╎││╎   0x00009b50      003090e5       ldr r3, [r0]\n│ ╎╎╎╎││╎   0x00009b54      040053e3       cmp r3, 4                   ; 4\n│ ────────< 0x00009b58      0100000a       beq 0x9b64\n│ ╎╎╎╎││╎   0x00009b5c      040095e5       ldr r0, [r5, 4]             ; int32_t arg1\n│ ╎╎╎╎││╎   0x00009b60      eb0100eb       bl fcn.0000a314\n│ ╎╎╎╎││╎   ; XREFS: CODE 0x00009b58  CODE 0x00009c48  CODE 0x00009c54  \n│ ╎╎╎╎││╎   ; XREFS: CODE 0x00009c68  CODE 0x00009c74  CODE 0x00009c88  \n│ ╎╎╎╎││╎   ; XREFS: CODE 0x00009c98  \n│ ────────> 0x00009b64      f30100eb       bl fcn.0000a338\n│ ╎╎╎╎││╎   ; CODE XREF from fcn.000090c0 @ 0x9aa0(x)\n│ ╎╎╎╎│└──> 0x00009b68      34209de5       ldr r2, [var_34h]\n│ ╎╎╎╎│ ╎   0x00009b6c      000052e1       cmp r2, r0\n│ ╎╎╎╎│┌──< 0x00009b70      4e00009a       bls 0x9cb0\n│ ╎╎╎╎││╎   0x00009b74      143094e5       ldr r3, [r4, 0x14]\n│ ╎╎╎╎││╎   0x00009b78      28308de5       str r3, [fildes]\n│ ╎╎╎╎││╎   0x00009b7c      ed0100eb       bl fcn.0000a338\n│ ╎╎╎╎││╎   0x00009b80      28309de5       ldr r3, [fildes]\n│ ╎╎╎╎││╎   0x00009b84      030060e0       rsb r0, r0, r3\n│ ╎╎╎╎││╎   0x00009b88      0030a0e3       mov r3, 0\n│ ╎╎╎╎││╎   0x00009b8c      0310a0e1       mov r1, r3\n│ ╎╎╎╎││╎   0x00009b90      44008de5       str r0, [var_44h]\n│ ╎╎╎╎││╎   0x00009b94      48308de5       str r3, [var_48h]\n│ ╎╎╎╎││╎   ; CODE XREF from fcn.000090c0 @ 0x9ba8(x)\n│ ────────> 0x00009b98      8c208de2       add r2, readfds\n│ ╎╎╎╎││╎   0x00009b9c      021083e7       str r1, [r3, r2]\n│ ╎╎╎╎││╎   0x00009ba0      043083e2       add r3, r3, 4\n│ ╎╎╎╎││╎   0x00009ba4      800053e3       cmp r3, 0x80                ; 128\n│ ────────< 0x00009ba8      faffff1a       bne 0x9b98\n│ ╎╎╎╎││╎   0x00009bac      043095e5       ldr r3, [r5, 4]\n│ ╎╎╎╎││╎   0x00009bb0      000053e3       cmp r3, 0\n│ ────────< 0x00009bb4      baffff0a       beq 0x9aa4\n│ ╎╎╎╎││╎   0x00009bb8      002095e5       ldr r2, [r5]\n│ ╎╎╎╎││╎   0x00009bbc      000052e3       cmp r2, 0\n│ ────────< 0x00009bc0      b7ffffaa       bge 0x9aa4\n│ ╎╎╎╎││╎   0x00009bc4      010053e3       cmp r3, 1                   ; 1\n│ ────────< 0x00009bc8      1700001a       bne 0x9c2c\n│ ╎╎╎╎││╎   0x00009bcc      0000a0e3       mov r0, 0                   ; int32_t arg1\n│ ╎╎╎╎││╎   0x00009bd0      4410a0e3       mov r1, 0x44                ; 'D' ; int32_t arg2\n│ ╎╎╎╎││╎   0x00009bd4      04209be5       ldr r2, [arg_4h]\n│ ╎╎╎╎││╎   0x00009bd8      2a0800eb       bl fcn.0000bc88\n│ ╎╎╎╎││╎   ; CODE XREF from fcn.000090c0 @ 0x9c38(x)\n│ ────────> 0x00009bdc      000085e5       str r0, [r5]\n│ ╎╎╎╎││╎   0x00009be0      003094e5       ldr r3, [r4]\n│ ╎╎╎╎││╎   0x00009be4      000053e3       cmp r3, 0\n│ ────────< 0x00009be8      adffffaa       bge 0x9aa4\n│ ╎╎╎╎││╎   ; CODE XREF from fcn.000090c0 @ 0x9594(x)\n│ ────────> 0x00009bec      f9fcffeb       bl sym.imp.__errno_location\n│ ╎╎╎╎││╎   0x00009bf0      0040a0e1       mov r4, r0\n│ ╎╎╎╎││╎   0x00009bf4      000090e5       ldr r0, [r0]                ; int errnum\n│ ╎╎╎╎││╎   0x00009bf8      6cfcffeb       bl sym.imp.strerror         ; char *strerror(int errnum)\n│ ╎╎╎╎││╎   0x00009bfc      0010a0e1       mov r1, r0\n│ ╎╎╎╎││╎   0x00009c00      00059fe5       ldr r0, [0x0000a108]        ; [0xa108:4]=0xca1d \"FATAL: couldn't listen on socket, %s\" ; const char *format\n│ ╎╎╎╎││╎   0x00009c04      60fcffeb       bl sym.imp.printf           ; int printf(const char *format)\n│ ╎╎╎╎││╎   0x00009c08      0a00a0e3       mov r0, 0xa                 ; int c\n│ ╎╎╎╎││╎   0x00009c0c      4ffcffeb       bl sym.imp.putchar          ; int putchar(int c)\n│ ╎╎╎╎││╎   0x00009c10      000094e5       ldr r0, [r4]                ; int errnum\n│ ╎╎╎╎││╎   0x00009c14      65fcffeb       bl sym.imp.strerror         ; char *strerror(int errnum)\n│ ╎╎╎╎││╎   0x00009c18      0020a0e1       mov r2, r0\n│ ╎╎╎╎││╎   0x00009c1c      e4149fe5       ldr r1, [0x0000a108]        ; [0xa108:4]=0xca1d \"FATAL: couldn't listen on socket, %s\"\n│ ╎╎╎╎││╎   0x00009c20      0300a0e3       mov r0, 3\n│ ╎╎╎╎││╎   0x00009c24      dcfcffeb       bl sym.imp.syslog\n│ ────────< 0x00009c28      6c0100ea       b 0xa1e0\n│ ╎╎╎╎││╎   ; CODE XREF from fcn.000090c0 @ 0x9bc8(x)\n│ ────────> 0x00009c2c      1c009be5       ldr r0, [arg_1ch]           ; int32_t arg1\n│ ╎╎╎╎││╎   0x00009c30      4410a0e3       mov r1, 0x44                ; 'D' ; int32_t arg2\n│ ╎╎╎╎││╎   0x00009c34      5b0800eb       bl fcn.0000bda8\n│ ────────< 0x00009c38      e7ffffea       b 0x9bdc\n│ ╎╎╎╎││╎   ; CODE XREF from fcn.000090c0 @ 0x9b3c(x)\n│ ────────> 0x00009c3c      900300eb       bl fcn.0000aa84\n│ ────────< 0x00009c40      bfffffea       b 0x9b44\n│ ╎╎╎╎││╎   ; CODE XREF from fcn.000090c0 @ 0x9b48(x)\n│ ────────> 0x00009c44      000050e3       cmp r0, 0\n│ ────────< 0x00009c48      c5ffffba       blt 0x9b64\n│ ╎╎╎╎││╎   0x00009c4c      90319de5       ldr r3, [var_190h]\n│ ╎╎╎╎││╎   0x00009c50      070053e1       cmp r3, r7\n│ ────────< 0x00009c54      c2ffff1a       bne 0x9b64\n│ ╎╎╎╎││╎   0x00009c58      630f8de2       add r0, var_18ch            ; int32_t arg1\n│ ╎╎╎╎││╎   0x00009c5c      3510a0e3       mov r1, 0x35                ; '5' ; uint32_t arg2\n│ ╎╎╎╎││╎   0x00009c60      b00600eb       bl fcn.0000b728\n│ ╎╎╎╎││╎   0x00009c64      000050e3       cmp r0, 0\n│ ────────< 0x00009c68      bdffff0a       beq 0x9b64\n│ ╎╎╎╎││╎   0x00009c6c      0030d0e5       ldrb r3, [r0]\n│ ╎╎╎╎││╎   0x00009c70      020053e3       cmp r3, 2                   ; 2\n│ ────────< 0x00009c74      baffff1a       bne 0x9b64\n│ ╎╎╎╎││╎   0x00009c78      630f8de2       add r0, var_18ch            ; int32_t arg1\n│ ╎╎╎╎││╎   0x00009c7c      3610a0e3       mov r1, 0x36                ; '6' ; uint32_t arg2\n│ ╎╎╎╎││╎   0x00009c80      a80600eb       bl fcn.0000b728\n│ ╎╎╎╎││╎   0x00009c84      000050e3       cmp r0, 0\n│ ────────< 0x00009c88      b5ffff0a       beq 0x9b64\n│ ╎╎╎╎││╎   0x00009c8c      9c319de5       ldr r3, [in]\n│ ╎╎╎╎││╎   0x00009c90      202095e5       ldr r2, [r5, 0x20]\n│ ╎╎╎╎││╎   0x00009c94      020053e1       cmp r3, r2\n│ ────────< 0x00009c98      b1ffff1a       bne 0x9b64\n│ ╎╎╎╎││╎   0x00009c9c      000090e5       ldr r0, [r0]\n│ ╎╎╎╎││╎   0x00009ca0      103084e5       str r3, [r4, 0x10]\n│ ╎╎╎╎││╎   0x00009ca4      58249fe5       ldr r2, [0x0000a104]        ; [0xa104:4]=0x1566c\n│ ╎╎╎╎││╎   0x00009ca8      90719de5       ldr r7, [var_190h]\n│ ╎╎╎╎││╎   0x00009cac      000082e5       str r0, [r2]\n│ ╎╎╎╎││╎   ; CODE XREFS from fcn.000090c0 @ 0x9afc(x), 0x9b28(x), 0x9b70(x)\n│ ─────└──> 0x00009cb0      148085e5       str r8, [r5, 0x14]\n│ ────────< 0x00009cb4      17feffea       b case.0x9638.5\n│ ╎╎╎╎│ ╎   ; CODE XREF from fcn.000090c0 @ 0x9a28(x)\n│ ────────> 0x00009cb8      0030d0e5       ldrb r3, [r0]\n│ ╎╎╎╎│ ╎   0x00009cbc      050053e3       cmp r3, 5                   ; 5\n│ ╎╎╎╎│┌──< 0x00009cc0      ae00001a       bne 0x9f80\n│ ╎╎╎╎││╎   0x00009cc4      00749fe5       ldr r7, [0x0000a0cc]        ; [0xa0cc:4]=0x15290\n│ ╎╎╎╎││╎   0x00009cc8      0010a0e3       mov r1, 0                   ; int32_t arg2\n│ ╎╎╎╎││╎   0x00009ccc      00108de5       str r1, [sp]\n│ ╎╎╎╎││╎   0x00009cd0      100095e5       ldr r0, [r5, 0x10]          ; void *arg1\n│ ╎╎╎╎││╎   0x00009cd4      043096e5       ldr r3, [r6, 4]\n│ ╎╎╎╎││╎   0x00009cd8      202087e2       add r2, r7, 0x20            ; 0x152b0\n│ ╎╎╎╎││╎                                                              ; str.clientid\n│ ╎╎╎╎││╎   0x00009cdc      e40500eb       bl fcn.0000b474\n│ ╎╎╎╎││╎   0x00009ce0      00c050e2       subs ip, r0, 0\n│ ────────< 0x00009ce4      2e00001a       bne 0x9da4\n│ ╎╎╎╎││╎   0x00009ce8      103095e5       ldr r3, [r5, 0x10]\n│ ╎╎╎╎││╎   0x00009cec      0a8088e2       add r8, r8, 0xa\n│ ╎╎╎╎││╎   0x00009cf0      0c2095e5       ldr r2, [r5, 0xc]\n│ ╎╎╎╎││╎   0x00009cf4      24c08de5       str ip, [var_24h]\n│ ╎╎╎╎││╎   0x00009cf8      90019de5       ldr r0, [var_190h]          ; int32_t arg1\n│ ╎╎╎╎││╎   0x00009cfc      0310a0e1       mov r1, r3                  ; int32_t arg2\n│ ╎╎╎╎││╎   0x00009d00      28308de5       str r3, [fildes]\n│ ╎╎╎╎││╎   0x00009d04      310300eb       bl fcn.0000a9d0\n│ ╎╎╎╎││╎   0x00009d08      24c09de5       ldr ip, [var_24h]\n│ ╎╎╎╎││╎   0x00009d0c      0200a0e3       mov r0, 2                   ; int32_t arg1\n│ ╎╎╎╎││╎   0x00009d10      148085e5       str r8, [r5, 0x14]\n│ ╎╎╎╎││╎   0x00009d14      08c085e5       str ip, [r5, 8]\n│ ╎╎╎╎││╎   0x00009d18      10c085e5       str ip, [r5, 0x10]\n│ ╎╎╎╎││╎   0x00009d1c      0cc085e5       str ip, [r5, 0xc]\n│ ╎╎╎╎││╎   0x00009d20      7b0100eb       bl fcn.0000a314\n│ ╎╎╎╎││╎   0x00009d24      28309de5       ldr r3, [fildes]\n│ ╎╎╎╎││╎   0x00009d28      0300a0e1       mov r0, r3                  ; void *in\n│ ╎╎╎╎││╎   0x00009d2c      94fcffeb       bl sym.imp.inet_ntoa        ; char *inet_ntoa(void *in)\n│ ╎╎╎╎││╎   0x00009d30      0010a0e1       mov r1, r0\n│ ╎╎╎╎││╎   0x00009d34      d0039fe5       ldr r0, [0x0000a10c]        ; [0xa10c:4]=0xcaaf \"IP %s conflict !!\" ; const char *format\n│ ╎╎╎╎││╎   0x00009d38      13fcffeb       bl sym.imp.printf           ; int printf(const char *format)\n│ ╎╎╎╎││╎   0x00009d3c      0a00a0e3       mov r0, 0xa                 ; int c\n│ ╎╎╎╎││╎   0x00009d40      02fcffeb       bl sym.imp.putchar          ; int putchar(int c)\n│ ╎╎╎╎││╎   0x00009d44      28309de5       ldr r3, [fildes]\n│ ╎╎╎╎││╎   0x00009d48      0300a0e1       mov r0, r3                  ; void *in\n│ ╎╎╎╎││╎   0x00009d4c      8cfcffeb       bl sym.imp.inet_ntoa        ; char *inet_ntoa(void *in)\n│ ╎╎╎╎││╎   0x00009d50      0020a0e1       mov r2, r0\n│ ╎╎╎╎││╎   0x00009d54      b0139fe5       ldr r1, [0x0000a10c]        ; [0xa10c:4]=0xcaaf \"IP %s conflict !!\"\n│ ╎╎╎╎││╎   0x00009d58      0300a0e3       mov r0, 3\n│ ╎╎╎╎││╎   0x00009d5c      8efcffeb       bl sym.imp.syslog\n│ ╎╎╎╎││╎   0x00009d60      0330d7e5       ldrb r3, [r7, 3]\n│ ╎╎╎╎││╎   0x00009d64      000053e3       cmp r3, 0\n│ ────────< 0x00009d68      0100001a       bne 0x9d74\n│ ╎╎╎╎││╎   ; XREFS: CODE 0x00009d7c  CODE 0x00009da0  CODE 0x00009e94  \n│ ╎╎╎╎││╎   ; XREFS: CODE 0x00009f74  CODE 0x00009fb0  CODE 0x0000a018  \n│ ────────> 0x00009d6c      0b70a0e1       mov r7, fp\n│ ────────< 0x00009d70      e8fdffea       b case.0x9638.5\n│ ╎╎╎╎││╎   ; CODE XREF from fcn.000090c0 @ 0x9d68(x)\n│ ────────> 0x00009d74      0030d7e5       ldrb r3, [r7]\n│ ╎╎╎╎││╎   0x00009d78      000053e3       cmp r3, 0\n│ ────────< 0x00009d7c      faffff1a       bne 0x9d6c\n│ ╎╎╎╎││╎   0x00009d80      88039fe5       ldr r0, [0x0000a110]        ; [0xa110:4]=0xcac1 \"Decline the DHCPACK, forking to background.\" ; const char *format\n│ ╎╎╎╎││╎   0x00009d84      00fcffeb       bl sym.imp.printf           ; int printf(const char *format)\n│ ╎╎╎╎││╎   0x00009d88      0a00a0e3       mov r0, 0xa                 ; int c\n│ ╎╎╎╎││╎   0x00009d8c      effbffeb       bl sym.imp.putchar          ; int putchar(int c)\n│ ╎╎╎╎││╎   0x00009d90      0600a0e3       mov r0, 6\n│ ╎╎╎╎││╎   0x00009d94      74139fe5       ldr r1, [0x0000a110]        ; [0xa110:4]=0xcac1 \"Decline the DHCPACK, forking to background.\"\n│ ╎╎╎╎││╎   0x00009d98      7ffcffeb       bl sym.imp.syslog\n│ ╎╎╎╎││╎   0x00009d9c      c70100eb       bl fcn.0000a4c0\n│ ────────< 0x00009da0      f1ffffea       b 0x9d6c\n│ ╎╎╎╎││╎   ; CODE XREF from fcn.000090c0 @ 0x9ce4(x)\n│ ────────> 0x00009da4      0900a0e1       mov r0, sb                  ; int32_t arg1\n│ ╎╎╎╎││╎   0x00009da8      3310a0e3       mov r1, 0x33                ; '3' ; uint32_t arg2\n│ ╎╎╎╎││╎   0x00009dac      5d0600eb       bl fcn.0000b728\n│ ╎╎╎╎││╎   0x00009db0      000050e3       cmp r0, 0\n│ ────────< 0x00009db4      0800001a       bne 0x9ddc\n│ ╎╎╎╎││╎   0x00009db8      54039fe5       ldr r0, [0x0000a114]        ; [0xa114:4]=0xcaed \"No lease time with ACK, using 1 hour lease\" ; const char *format\n│ ╎╎╎╎││╎   0x00009dbc      f2fbffeb       bl sym.imp.printf           ; int printf(const char *format)\n│ ╎╎╎╎││╎   0x00009dc0      0a00a0e3       mov r0, 0xa                 ; int c\n│ ╎╎╎╎││╎   0x00009dc4      e1fbffeb       bl sym.imp.putchar          ; int putchar(int c)\n│ ╎╎╎╎││╎   0x00009dc8      0300a0e3       mov r0, 3\n│ ╎╎╎╎││╎   0x00009dcc      40139fe5       ldr r1, [0x0000a114]        ; [0xa114:4]=0xcaed \"No lease time with ACK, using 1 hour lease\"\n│ ╎╎╎╎││╎   0x00009dd0      71fcffeb       bl sym.imp.syslog\n│ ╎╎╎╎││╎   0x00009dd4      e13ea0e3       mov r3, 0xe10               ; '\\x10\\x0e'\n│ ────────< 0x00009dd8      030000ea       b 0x9dec\n│ ╎╎╎╎││╎   ; CODE XREF from fcn.000090c0 @ 0x9db4(x)\n│ ────────> 0x00009ddc      000090e5       ldr r0, [r0]\n│ ╎╎╎╎││╎   0x00009de0      3c008de5       str r0, [var_3ch]\n│ ╎╎╎╎││╎   0x00009de4      3c309de5       ldr r3, [var_3ch]\n│ ╎╎╎╎││╎   0x00009de8      333fbfe6       rev r3, r3\n│ ╎╎╎╎││╎   ; CODE XREF from fcn.000090c0 @ 0x9dd8(x)\n│ ────────> 0x00009dec      0900a0e1       mov r0, sb                  ; int32_t arg1\n│ ╎╎╎╎││╎   0x00009df0      0110a0e3       mov r1, 1                   ; uint32_t arg2\n│ ╎╎╎╎││╎   0x00009df4      3c308de5       str r3, [var_3ch]\n│ ╎╎╎╎││╎   0x00009df8      4a0600eb       bl fcn.0000b728\n│ ╎╎╎╎││╎   0x00009dfc      000050e3       cmp r0, 0\n│ ────────< 0x00009e00      2400000a       beq 0x9e98\n│ ╎╎╎╎││╎   0x00009e04      2c70d6e5       ldrb r7, [r6, 0x2c]\n│ ╎╎╎╎││╎   0x00009e08      000057e3       cmp r7, 0\n│ ────────< 0x00009e0c      2100001a       bne 0x9e98\n│ ╎╎╎╎││╎   0x00009e10      9d21dde5       ldrb r2, [var_19dh]\n│ ╎╎╎╎││╎   0x00009e14      9c31dde5       ldrb r3, [in]\n│ ╎╎╎╎││╎   0x00009e18      f8129fe5       ldr r1, str._s__d._d._d._d__d._d._d._d ; [0xcb18:4]=0x25207325 ; \"%s %d.%d.%d.%d %d.%d.%d.%d\" ; const char *format\n│ ╎╎╎╎││╎   0x00009e1c      00208de5       str r2, [sp]\n│ ╎╎╎╎││╎   0x00009e20      9e21dde5       ldrb r2, [var_19eh]         ; 0xcb18 ; \"%s %d.%d.%d.%d %d.%d.%d.%d\"\n│ ╎╎╎╎││╎   0x00009e24      04208de5       str r2, [var_4h]\n│ ╎╎╎╎││╎   0x00009e28      9f21dde5       ldrb r2, [var_19fh]         ; 0xcb18 ; \"%s %d.%d.%d.%d %d.%d.%d.%d\"\n│ ╎╎╎╎││╎   0x00009e2c      08208de5       str r2, [var_8h]\n│ ╎╎╎╎││╎   0x00009e30      0020d0e5       ldrb r2, [r0]               ; 0xcb18 ; \"%s %d.%d.%d.%d %d.%d.%d.%d\"\n│ ╎╎╎╎││╎   0x00009e34      0c208de5       str r2, [var_ch]\n│ ╎╎╎╎││╎   0x00009e38      0120d0e5       ldrb r2, [r0, 1]            ; 0xcb18 ; \"%s %d.%d.%d.%d %d.%d.%d.%d\"\n│ ╎╎╎╎││╎   0x00009e3c      10208de5       str r2, [var_10h]\n│ ╎╎╎╎││╎   0x00009e40      0220d0e5       ldrb r2, [r0, 2]            ; 0xcb18 ; \"%s %d.%d.%d.%d %d.%d.%d.%d\"\n│ ╎╎╎╎││╎   0x00009e44      14208de5       str r2, [var_14h]\n│ ╎╎╎╎││╎   0x00009e48      0320d0e5       ldrb r2, [r0, 3]            ; 0xcb18 ; \"%s %d.%d.%d.%d %d.%d.%d.%d\"\n│ ╎╎╎╎││╎   0x00009e4c      430f8de2       add r0, string              ; char *s\n│ ╎╎╎╎││╎   0x00009e50      18208de5       str r2, [var_18h]\n│ ╎╎╎╎││╎   0x00009e54      c0229fe5       ldr r2, [0x0000a11c]        ; [0xa11c:4]=0xcb33 \"/sbin/ipconflict\"\n│ ╎╎╎╎││╎   0x00009e58      55fcffeb       bl sym.imp.sprintf          ; int sprintf(char *s, const char *format, ...)\n│ ╎╎╎╎││╎   0x00009e5c      430f8de2       add r0, string              ; const char *string\n│ ╎╎╎╎││╎   0x00009e60      eafbffeb       bl sym.imp.system           ; int system(const char *string)\n│ ╎╎╎╎││╎   0x00009e64      5004e7e7       ubfx r0, r0, 8, 8\n│ ╎╎╎╎││╎   0x00009e68      010050e3       cmp r0, 1                   ; 1\n│ ────────< 0x00009e6c      0900001a       bne 0x9e98\n│ ╎╎╎╎││╎   0x00009e70      0700a0e1       mov r0, r7                  ; int32_t arg1\n│ ╎╎╎╎││╎   0x00009e74      c0129fe5       ldr r1, [0x0000a13c]        ; [0xa13c:4]=0xc4a1 \"deconfig\" ; int32_t arg2\n│ ╎╎╎╎││╎   0x00009e78      a10300eb       bl fcn.0000ad04\n│ ╎╎╎╎││╎   0x00009e7c      0200a0e3       mov r0, 2                   ; int32_t arg1\n│ ╎╎╎╎││╎   0x00009e80      087085e5       str r7, [r5, 8]\n│ ╎╎╎╎││╎   0x00009e84      148085e5       str r8, [r5, 0x14]\n│ ╎╎╎╎││╎   0x00009e88      107085e5       str r7, [r5, 0x10]\n│ ╎╎╎╎││╎   0x00009e8c      247085e5       str r7, [r5, 0x24]\n│ ╎╎╎╎││╎   0x00009e90      1f0100eb       bl fcn.0000a314\n│ ────────< 0x00009e94      b4ffffea       b 0x9d6c\n│ ╎╎╎╎││╎   ; CODE XREFS from fcn.000090c0 @ 0x9e00(x), 0x9e0c(x), 0x9e6c(x)\n│ ────────> 0x00009e98      3ca09de5       ldr sl, [var_3ch]\n│ ╎╎╎╎││╎   0x00009e9c      9c719de5       ldr r7, [in]\n│ ╎╎╎╎││╎   0x00009ea0      aa30a0e1       lsr r3, sl, 1\n│ ╎╎╎╎││╎   0x00009ea4      0700a0e1       mov r0, r7                  ; void *in\n│ ╎╎╎╎││╎   0x00009ea8      2c308de5       str r3, [var_2ch]\n│ ╎╎╎╎││╎   0x00009eac      0730a0e3       mov r3, 7\n│ ╎╎╎╎││╎   0x00009eb0      930a03e0       mul r3, r3, sl\n│ ╎╎╎╎││╎   0x00009eb4      a331a0e1       lsr r3, r3, 3\n│ ╎╎╎╎││╎   0x00009eb8      30308de5       str r3, [var_30h]\n│ ╎╎╎╎││╎   0x00009ebc      30fcffeb       bl sym.imp.inet_ntoa        ; char *inet_ntoa(void *in)\n│ ╎╎╎╎││╎   0x00009ec0      0010a0e1       mov r1, r0\n│ ╎╎╎╎││╎   0x00009ec4      0a20a0e1       mov r2, sl\n│ ╎╎╎╎││╎   0x00009ec8      50029fe5       ldr r0, str.Lease_of__s_obtained__lease_time__ld ; [0xcb44:4]=0x7361654c ; \"Lease of %s obtained, lease time %ld\" ; const char *format\n│ ╎╎╎╎││╎   0x00009ecc      aefbffeb       bl sym.imp.printf           ; int printf(const char *format)\n│ ╎╎╎╎││╎   0x00009ed0      0a00a0e3       mov r0, 0xa                 ; int c\n│ ╎╎╎╎││╎   0x00009ed4      9dfbffeb       bl sym.imp.putchar          ; int putchar(int c)\n│ ╎╎╎╎││╎   0x00009ed8      0700a0e1       mov r0, r7                  ; void *in\n│ ╎╎╎╎││╎   0x00009edc      28fcffeb       bl sym.imp.inet_ntoa        ; char *inet_ntoa(void *in)\n│ ╎╎╎╎││╎   0x00009ee0      0020a0e1       mov r2, r0\n│ ╎╎╎╎││╎   0x00009ee4      0a30a0e1       mov r3, sl\n│ ╎╎╎╎││╎   0x00009ee8      30129fe5       ldr r1, str.Lease_of__s_obtained__lease_time__ld ; [0xcb44:4]=0x7361654c ; \"Lease of %s obtained, lease time %ld\"\n│ ╎╎╎╎││╎   0x00009eec      0600a0e3       mov r0, 6\n│ ╎╎╎╎││╎   0x00009ef0      29fcffeb       bl sym.imp.syslog\n│ ╎╎╎╎││╎   0x00009ef4      0700a0e1       mov r0, r7                  ; void *in\n│ ╎╎╎╎││╎   0x00009ef8      21fcffeb       bl sym.imp.inet_ntoa        ; char *inet_ntoa(void *in)\n│ ╎╎╎╎││╎   0x00009efc      0020a0e1       mov r2, r0\n│ ╎╎╎╎││╎   0x00009f00      1c129fe5       ldr r1, [0x0000a124]        ; [0xa124:4]=0xcb69 \"[Internet connected] IP address: %s,\"\n│ ╎╎╎╎││╎   0x00009f04      0600a0e3       mov r0, 6\n│ ╎╎╎╎││╎   0x00009f08      23fcffeb       bl sym.imp.syslog\n│ ╎╎╎╎││╎   0x00009f0c      2c109de5       ldr r1, [var_2ch]\n│ ╎╎╎╎││╎   0x00009f10      0900a0e1       mov r0, sb                  ; int32_t arg1\n│ ╎╎╎╎││╎   0x00009f14      0c229fe5       ldr r2, [0x0000a128]        ; [0xa128:4]=0xc4e1 \"bound\"\n│ ╎╎╎╎││╎   0x00009f18      013088e0       add r3, r8, r1\n│ ╎╎╎╎││╎   0x00009f1c      081094e5       ldr r1, [r4, 8]\n│ ╎╎╎╎││╎   0x00009f20      143084e5       str r3, [r4, 0x14]\n│ ╎╎╎╎││╎   0x00009f24      9c319de5       ldr r3, [in]\n│ ╎╎╎╎││╎   0x00009f28      031041e2       sub r1, r1, 3\n│ ╎╎╎╎││╎   0x00009f2c      010051e3       cmp r1, 1                   ; 1\n│ ╎╎╎╎││╎   0x00009f30      103084e5       str r3, [r4, 0x10]\n│ ╎╎╎╎││╎   0x00009f34      f0319fe5       ldr r3, str.renew           ; [0xcbb6:4]=0x656e6572 ; \"renew\"\n│ ╎╎╎╎││╎   0x00009f38      0210a081       movhi r1, r2                ; int32_t arg2\n│ ╎╎╎╎││╎   0x00009f3c      0310a091       movls r1, r3\n│ ╎╎╎╎││╎   0x00009f40      6f0300eb       bl fcn.0000ad04\n│ ╎╎╎╎││╎   0x00009f44      0230a0e3       mov r3, 2\n│ ╎╎╎╎││╎   0x00009f48      0000a0e3       mov r0, 0                   ; int32_t arg1\n│ ╎╎╎╎││╎   0x00009f4c      083084e5       str r3, [r4, 8]\n│ ╎╎╎╎││╎   0x00009f50      ef0000eb       bl fcn.0000a314\n│ ╎╎╎╎││╎   0x00009f54      0130d6e5       ldrb r3, [r6, 1]            ; 0xcbb6 ; \"renew\"\n│ ╎╎╎╎││╎   0x00009f58      000053e3       cmp r3, 0\n│ ────────< 0x00009f5c      9f00001a       bne 0xa1e0\n│ ╎╎╎╎││╎   0x00009f60      64319fe5       ldr r3, [0x0000a0cc]        ; [0xa0cc:4]=0x15290\n│ ╎╎╎╎││╎   0x00009f64      0030d3e5       ldrb r3, [r3]\n│ ╎╎╎╎││╎   0x00009f68      000053e3       cmp r3, 0\n│ ────────< 0x00009f6c      0100000a       beq 0x9f78\n│ ╎╎╎╎││╎   ; CODE XREF from fcn.000090c0 @ 0x9f7c(x)\n│ ────────> 0x00009f70      08a0a0e1       mov sl, r8\n│ ────────< 0x00009f74      7cffffea       b 0x9d6c\n│ ╎╎╎╎││╎   ; CODE XREF from fcn.000090c0 @ 0x9f6c(x)\n│ ────────> 0x00009f78      500100eb       bl fcn.0000a4c0\n│ ────────< 0x00009f7c      fbffffea       b 0x9f70\n│ ╎╎╎╎││╎   ; CODE XREF from fcn.000090c0 @ 0x9cc0(x)\n│ ╎╎╎╎│└──> 0x00009f80      060053e3       cmp r3, 6                   ; 6\n│ ────────< 0x00009f84      63fdff1a       bne case.0x9638.5\n│ ╎╎╎╎│ ╎   0x00009f88      0900a0e1       mov r0, sb                  ; int32_t arg1\n│ ╎╎╎╎│ ╎   0x00009f8c      3610a0e3       mov r1, 0x36                ; '6' ; uint32_t arg2\n│ ╎╎╎╎│ ╎   0x00009f90      e40500eb       bl fcn.0000b728\n│ ╎╎╎╎│ ╎   0x00009f94      000050e3       cmp r0, 0\n│ ────────< 0x00009f98      5efdff0a       beq case.0x9638.5\n│ ╎╎╎╎│ ╎   0x00009f9c      000090e5       ldr r0, [r0]\n│ ╎╎╎╎│ ╎   0x00009fa0      0c3095e5       ldr r3, [r5, 0xc]\n│ ╎╎╎╎│ ╎   0x00009fa4      38008de5       str r0, [var_38h]\n│ ╎╎╎╎│ ╎   0x00009fa8      38209de5       ldr r2, [var_38h]\n│ ╎╎╎╎│ ╎   0x00009fac      030052e1       cmp r2, r3\n│ ────────< 0x00009fb0      6dffff1a       bne 0x9d6c\n│ ╎╎╎╎│ ╎   0x00009fb4      74019fe5       ldr r0, str.Received_DHCP_NAK ; [0xcb8e:4]=0x65636552 ; \"Received DHCP NAK\" ; const char *format\n│ ╎╎╎╎│ ╎   0x00009fb8      73fbffeb       bl sym.imp.printf           ; int printf(const char *format)\n│ ╎╎╎╎│ ╎   0x00009fbc      0a00a0e3       mov r0, 0xa                 ; int c\n│ ╎╎╎╎│ ╎   0x00009fc0      62fbffeb       bl sym.imp.putchar          ; int putchar(int c)\n│ ╎╎╎╎│ ╎   0x00009fc4      0600a0e3       mov r0, 6\n│ ╎╎╎╎│ ╎   0x00009fc8      60119fe5       ldr r1, str.Received_DHCP_NAK ; [0xcb8e:4]=0x65636552 ; \"Received DHCP NAK\"\n│ ╎╎╎╎│ ╎   0x00009fcc      f2fbffeb       bl sym.imp.syslog\n│ ╎╎╎╎│ ╎   0x00009fd0      0900a0e1       mov r0, sb                  ; int32_t arg1\n│ ╎╎╎╎│ ╎   0x00009fd4      58119fe5       ldr r1, str.nak             ; [0xcba0:4]=0x6b616e ; \"nak\" ; int32_t arg2\n│ ╎╎╎╎│ ╎   0x00009fd8      490300eb       bl fcn.0000ad04\n│ ╎╎╎╎│ ╎   0x00009fdc      083094e5       ldr r3, [r4, 8]\n│ ╎╎╎╎│ ╎   0x00009fe0      010053e3       cmp r3, 1                   ; 1\n│ ╎╎╎╎│┌──< 0x00009fe4      0200000a       beq 0x9ff4\n│ ╎╎╎╎││╎   0x00009fe8      0000a0e3       mov r0, 0                   ; int32_t arg1\n│ ╎╎╎╎││╎   0x00009fec      48119fe5       ldr r1, [0x0000a13c]        ; [0xa13c:4]=0xc4a1 \"deconfig\" ; int32_t arg2\n│ ╎╎╎╎││╎   0x00009ff0      430300eb       bl fcn.0000ad04\n│ ╎╎╎╎││╎   ; CODE XREF from fcn.000090c0 @ 0x9fe4(x)\n│ ╎╎╎╎│└──> 0x00009ff4      0030a0e3       mov r3, 0\n│ ╎╎╎╎│ ╎   0x00009ff8      0200a0e3       mov r0, 2                   ; int32_t arg1\n│ ╎╎╎╎│ ╎   0x00009ffc      148084e5       str r8, [r4, 0x14]\n│ ╎╎╎╎│ ╎   0x0000a000      083084e5       str r3, [r4, 8]\n│ ╎╎╎╎│ ╎   0x0000a004      103084e5       str r3, [r4, 0x10]\n│ ╎╎╎╎│ ╎   0x0000a008      243084e5       str r3, [r4, 0x24]\n│ ╎╎╎╎│ ╎   0x0000a00c      c00000eb       bl fcn.0000a314\n│ ╎╎╎╎│ ╎   0x0000a010      0300a0e3       mov r0, 3                   ; int s\n│ ╎╎╎╎│ ╎   0x0000a014      83fbffeb       bl sym.imp.sleep            ; int sleep(int s)\n│ ────────< 0x0000a018      53ffffea       b 0x9d6c\n│ ╎╎╎╎│ ╎   ; CODE XREFS from fcn.000090c0 @ 0x9988(x), 0x99ac(x)\n│ ────────> 0x0000a01c      180094e5       ldr r0, [r4, 0x18]\n│ ╎╎╎╎│ ╎   0x0000a020      013b8de2       add r3, var_400h\n│ ╎╎╎╎│ ╎   0x0000a024      a022a0e1       lsr r2, r0, 5\n│ ╎╎╎╎│ ╎   0x0000a028      022183e0       add r2, r3, r2, lsl 2\n│ ╎╎╎╎│ ╎   0x0000a02c      1f3000e2       and r3, r0, 0x1f\n│ ╎╎╎╎│ ╎   0x0000a030      742312e5       ldr r2, [r2, -0x374]\n│ ╎╎╎╎│ ╎   0x0000a034      5233a0e1       asr r3, r2, r3\n│ ╎╎╎╎│ ╎   0x0000a038      010013e3       tst r3, 1                   ; 1\n│ ────────< 0x0000a03c      35fdff0a       beq case.0x9638.5\n│ ╎╎╎╎│ ╎   0x0000a040      40108de2       add r1, buf                 ; void *buf\n│ ╎╎╎╎│ ╎   0x0000a044      0420a0e3       mov r2, 4\n│ ╎╎╎╎│ ╎   0x0000a048      a0fbffeb       bl sym.imp.read             ; ssize_t read(int fildes, void *buf, size_t nbyte)\n│ ╎╎╎╎│ ╎   0x0000a04c      000050e3       cmp r0, 0\n│ ────────< 0x0000a050      30fdffba       blt case.0x9638.5\n│ ╎╎╎╎│ ╎   0x0000a054      40809de5       ldr r8, [buf]\n│ ╎╎╎╎│ ╎   0x0000a058      0c0058e3       cmp r8, 0xc                 ; 12\n│ ╎╎╎╎│┌──< 0x0000a05c      4900000a       beq 0xa188\n│ ╎╎╎╎││╎   0x0000a060      0f0058e3       cmp r8, 0xf                 ; 15\n│ ────────< 0x0000a064      5200000a       beq 0xa1b4\n│ ╎╎╎╎││╎   0x0000a068      0a0058e3       cmp r8, 0xa                 ; 10\n│ └───────< 0x0000a06c      29fdff1a       bne case.0x9638.5\n│  ╎╎╎││╎   0x0000a070      c0009fe5       ldr r0, str.Performing_a_DHCP_renew ; [0xcba4:4]=0x66726550 ; \"Performing a DHCP renew\" ; const char *format\n│  ╎╎╎││╎   0x0000a074      44fbffeb       bl sym.imp.printf           ; int printf(const char *format)\n│  ╎╎╎││╎   0x0000a078      0800a0e1       mov r0, r8                  ; int c\n│  ╎╎╎││╎   0x0000a07c      33fbffeb       bl sym.imp.putchar          ; int putchar(int c)\n│  ╎╎╎││╎   0x0000a080      0600a0e3       mov r0, 6\n│  ╎╎╎││╎   0x0000a084      ac109fe5       ldr r1, str.Performing_a_DHCP_renew ; [0xcba4:4]=0x66726550 ; \"Performing a DHCP renew\"\n│  ╎╎╎││╎   0x0000a088      c3fbffeb       bl sym.imp.syslog\n│  ╎╎╎││╎   0x0000a08c      083095e5       ldr r3, [r5, 8]\n│  ╎╎╎││╎   0x0000a090      013043e2       sub r3, r3, 1\n│  ╎╎╎││╎   0x0000a094      060053e3       cmp r3, 6                   ; 6\n│  ╎╎╎││╎   ;-- switch:\n│  ╎╎╎││╎   0x0000a098      03f19f97       ldrls pc, [pc, r3, lsl 2]   ; [0xa0a0:4]=0xa168 case.0xa098.6 ; switch table (7 cases) at 0xa0a0\n│  ╎╎╎││╎   ;-- default:                                               ; from 0xa098\n│  ╎╎╎││╎   ; CODE XREF from fcn.000090c0 @ 0xa098(x)\n│ ┌───────< 0x0000a09c      350000ea       b case.0xa098.4\n  │╎╎╎││╎   ; CODE XREF from fcn.000090c0 @ 0xa098(x)\n..\n  │╎╎╎││╎   ; DATA XREFS from fcn.000090c0 @ 0x90d0(r), 0x93b4(r)\n  │╎╎╎││╎   ; DATA XREF from fcn.000090c0 @ 0x90e8(r)\n  │╎╎╎││╎   ; DATA XREF from fcn.000090c0 @ 0x9108(r)\n  │╎╎╎││╎   ; DATA XREF from fcn.000090c0 @ 0x911c(r)\n  │╎╎╎││╎   ; XREFS: DATA 0x00009128  DATA 0x0000940c  DATA 0x000096dc  \n  │╎╎╎││╎   ; XREFS: DATA 0x00009774  DATA 0x00009a98  DATA 0x00009cc4  \n  │╎╎╎││╎   ; XREFS: DATA 0x00009f60  \n  │╎╎╎││╎   ; DATA XREFS from fcn.000090c0 @ 0x9330(r), 0x9344(r), 0x94b0(r)\n  │╎╎╎││╎   ; DATA XREFS from fcn.000090c0 @ 0x9360(r), 0x9414(r), 0x9434(r)\n  │╎╎╎││╎   ; DATA XREF from fcn.000090c0 @ 0x9364(r)\n  │╎╎╎││╎   ; DATA XREF from fcn.000090c0 @ 0x93d4(r)\n  │╎╎╎││╎   ; DATA XREF from fcn.000090c0 @ 0x93f4(r)\n  │╎╎╎││╎   ; DATA XREF from fcn.000090c0 @ 0x93f8(r)\n  │╎╎╎││╎   ; DATA XREF from fcn.000090c0 @ 0x9404(r)\n  │╎╎╎││╎   ; DATA XREFS from fcn.000090c0 @ 0x9418(r), 0x942c(r)\n  │╎╎╎││╎   ; DATA XREFS from fcn.000090c0 @ 0x94d4(r), 0x94e0(r), 0x94ec(r)\n  │╎╎╎││╎   ; DATA XREF from fcn.000090c0 @ 0x9684(r)\n  │╎╎╎││╎   ; DATA XREFS from fcn.000090c0 @ 0x9784(r), 0x9798(r)\n  │╎╎╎││╎   ; DATA XREFS from fcn.000090c0 @ 0x97b4(r), 0x97c8(r)\n  │╎╎╎││╎   ; DATA XREFS from fcn.000090c0 @ 0x9910(r), 0x9928(r)\n  │╎╎╎││╎   ; DATA XREFS from fcn.000090c0 @ 0x9a64(r), 0x9ca4(r)\n  │╎╎╎││╎   ; DATA XREFS from fcn.000090c0 @ 0x9c00(r), 0x9c1c(r)\n  │╎╎╎││╎   ; DATA XREFS from fcn.000090c0 @ 0x9d34(r), 0x9d54(r)\n  │╎╎╎││╎   ; DATA XREFS from fcn.000090c0 @ 0x9d80(r), 0x9d94(r)\n  │╎╎╎││╎   ; DATA XREFS from fcn.000090c0 @ 0x9db8(r), 0x9dcc(r)\n  │╎╎╎││╎   ; DATA XREF from fcn.000090c0 @ 0x9e18(r)\n  │╎╎╎││╎   ; DATA XREF from fcn.000090c0 @ 0x9e54(r)\n  │╎╎╎││╎   ; DATA XREFS from fcn.000090c0 @ 0x9ec8(r), 0x9ee8(r)\n  │╎╎╎││╎   ; DATA XREF from fcn.000090c0 @ 0x9f00(r)\n  │╎╎╎││╎   ; DATA XREF from fcn.000090c0 @ 0x9f14(r)\n  │╎╎╎││╎   ; DATA XREF from fcn.000090c0 @ 0x9f34(r)\n  │╎╎╎││╎   ; DATA XREFS from fcn.000090c0 @ 0x9fb4(r), 0x9fc8(r)\n  │╎╎╎││╎   ; DATA XREF from fcn.000090c0 @ 0x9fd4(r)\n  │╎╎╎││╎   ; DATA XREFS from fcn.000090c0 @ 0xa070(r), 0xa084(r)\n  │╎╎╎││╎   ; XREFS: DATA 0x000094fc  DATA 0x0000986c  DATA 0x00009934  \n  │╎╎╎││╎   ; XREFS: DATA 0x00009e74  DATA 0x00009fec  DATA 0x0000a160  \n  │╎╎╎││╎   ; DATA XREFS from fcn.000090c0 @ 0x97e4(r), 0xa1a8(r)\n  │╎╎╎││╎   ; DATA XREFS from fcn.000090c0 @ 0xa1b4(r), 0xa1c8(r)\n  │╎╎╎││╎   ; DATA XREFS from fcn.000090c0 @ 0xa18c(r), 0xa1d4(r)\n│ │╎╎╎││╎   ;-- case 1:                                                ; from 0x0000a098\n│ │╎╎╎││╎   ; CODE XREF from fcn.000090c0 @ 0xa098(x)\n│ │╎╎╎││╎   ; NULL XREF from case.default.0xa098 @ +0x8(x)\n│ │╎╎╎││╎   0x0000a14c      0100a0e3       mov r0, 1                   ; int32_t arg1\n│ │╎╎╎││╎   0x0000a150      6f0000eb       bl fcn.0000a314\n│ │╎╎╎││╎   ;-- case 2...3:                                            ; from 0x0000a098\n│ │╎╎╎││╎   ; CODE XREF from fcn.000090c0 @ 0xa098(x)\n│ │╎╎╎││╎   ; NULL XREFS from case.default.0xa098 @ +0xc(x), +0x10(r)\n│ │╎╎╎││╎   0x0000a154      0630a0e3       mov r3, 6\n│ ────────< 0x0000a158      050000ea       b 0xa174\n│ │╎╎╎││╎   ;-- case 5:                                                ; from 0x0000a098\n│ │╎╎╎││╎   ; CODE XREF from fcn.000090c0 @ 0xa098(x)\n│ │╎╎╎││╎   ; NULL XREF from case.default.0xa098 @ +0x18(x)\n│ │╎╎╎││╎   0x0000a15c      0000a0e3       mov r0, 0                   ; int32_t arg1\n│ │╎╎╎││╎   0x0000a160      2c101fe5       ldr r1, [0x0000a13c]        ; [0xa13c:4]=0xc4a1 \"deconfig\" ; int32_t arg2\n│ │╎╎╎││╎   0x0000a164      e60200eb       bl fcn.0000ad04\n│ │╎╎╎││╎   ;-- case 0:                                                ; from 0x0000a098\n│ │╎╎╎││╎   ; CODE XREF from fcn.000090c0 @ 0xa098(x)\n│ │╎╎╎││╎   ; NULL XREFS from case.default.0xa098 @ +0x4(x), +0x1c(r)\n│ │╎╎╎││╎   0x0000a168      0200a0e3       mov r0, 2                   ; int32_t arg1\n│ │╎╎╎││╎   0x0000a16c      680000eb       bl fcn.0000a314\n│ │╎╎╎││╎   0x0000a170      0030a0e3       mov r3, 0\n│ │╎╎╎││╎   ; CODE XREF from fcn.000090c0 @ 0xa158(x)\n│ ────────> 0x0000a174      083084e5       str r3, [r4, 8]\n│ │╎╎╎││╎   ;-- case 4:                                                ; from 0x0000a098\n│ │╎╎╎││╎   ; CODE XREFS from fcn.000090c0 @ 0xa098(x), 0xa09c(x)\n│ │╎╎╎││╎   ; NULL XREF from case.default.0xa098 @ +0x14(x)\n│ └───────> 0x0000a178      0030a0e3       mov r3, 0\n│  ╎╎╎││╎   0x0000a17c      243084e5       str r3, [r4, 0x24]\n│  ╎╎╎││╎   ; CODE XREFS from fcn.000090c0 @ 0x98e8(x), 0x9970(x), 0x9978(x)\n│ ────────> 0x0000a180      143084e5       str r3, [r4, 0x14]\n│  └──────< 0x0000a184      e3fcffea       b case.0x9638.5\n│   ╎╎││╎   ; CODE XREF from fcn.000090c0 @ 0xa05c(x)\n│   ╎╎│└──> 0x0000a188      0600a0e3       mov r0, 6\n│   ╎╎│ ╎   0x0000a18c      4c101fe5       ldr r1, str._Internet_disconnected_ ; [0xcbbc:4]=0x746e495b ; \"[Internet disconnected]\"\n│   ╎╎│ ╎   0x0000a190      81fbffeb       bl sym.imp.syslog\n│   ╎╎│ ╎   0x0000a194      6e0000eb       bl fcn.0000a354\n│   ╎╎│ ╎   0x0000a198      2c30d6e5       ldrb r3, [r6, 0x2c]         ; 0xcbbc ; \"[Internet disconnected]\"\n│   ╎╎│ ╎   0x0000a19c      000053e3       cmp r3, 0\n│   └─────< 0x0000a1a0      dcfcff0a       beq case.0x9638.5\n│    ╎│ ╎   0x0000a1a4      0000a0e3       mov r0, 0                   ; int32_t arg1\n│    ╎│ ╎   0x0000a1a8      70101fe5       ldr r1, [0x0000a140]        ; [0xa140:4]=0xca87 \"runzcip\" ; int32_t arg2\n│    ╎│ ╎   0x0000a1ac      d40200eb       bl fcn.0000ad04\n│    ╎│ └─< 0x0000a1b0      d8fcffea       b case.0x9638.5\n│    ╎│     ; CODE XREF from fcn.000090c0 @ 0xa064(x)\n│ ────────> 0x0000a1b4      78001fe5       ldr r0, str.Received_SIGTERM ; [0xcbd4:4]=0x65636552 ; \"Received SIGTERM\" ; const char *format\n│    ╎│     0x0000a1b8      f3faffeb       bl sym.imp.printf           ; int printf(const char *format)\n│    ╎│     0x0000a1bc      0a00a0e3       mov r0, 0xa                 ; int c\n│    ╎│     0x0000a1c0      e2faffeb       bl sym.imp.putchar          ; int putchar(int c)\n│    ╎│     0x0000a1c4      0600a0e3       mov r0, 6\n│    ╎│     0x0000a1c8      8c101fe5       ldr r1, str.Received_SIGTERM ; [0xcbd4:4]=0x65636552 ; \"Received SIGTERM\"\n│    ╎│     0x0000a1cc      72fbffeb       bl sym.imp.syslog\n│    ╎│     0x0000a1d0      0600a0e3       mov r0, 6\n│    ╎│     0x0000a1d4      94101fe5       ldr r1, str._Internet_disconnected_ ; [0xcbbc:4]=0x746e495b ; \"[Internet disconnected]\"\n│    ╎│     0x0000a1d8      6ffbffeb       bl sym.imp.syslog\n│    ╎│     0x0000a1dc      5c0000eb       bl fcn.0000a354\n│    ╎│     ; CODE XREFS from fcn.000090c0 @ 0x936c(x), 0x9c28(x), 0x9f5c(x)\n│ ────└───> 0x0000a1e0      0000a0e3       mov r0, 0\n└    └────< 0x0000a1e4      9ffcffea       b 0x9468", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"我已经分析了安全警报中描述的 'udhcpc' 命令注入漏洞。通过 Radare2 反编译代码，我确认了在函数 fcn.000090c0（main）中存在 sprintf 和 system 调用，具体在地址 0x9e58 和 0x9e60。然而，代码显示 IP 地址是从 DHCP 响应中提取的，但在 sprintf 调用中，IP 地址被作为整数使用 %d 格式化，格式字符串是固定的 '%s %d.%d.%d.%d %d.%d.%d.%d'，其中 %s 是固定的字符串 '/sbin/ipconflict'。由于 IP 地址被转换为数字表示，攻击者无法注入 shell 元字符，因此命令注入不可行。代码路径在 DHCP ACK 处理时触发，但输入被安全处理。基于证据，警报描述不准确，漏洞不存在。\",\n  \"action\": \"finish\",\n  \"action_input\": {\n    \"final_response\": {\n      \"accuracy\": \"inaccurate\",\n      \"vulnerability\": false,\n      \"risk_level\": \"Low\",\n      \"reason\": \"安全警报描述的命令注入漏洞在 'sbin/udhcpc' 中不存在。分析证据显示：1) IP 地址从 DHCP 响应中提取后，在 sprintf 调用中被作为整数使用 %d 格式化（地址 0x9e58），格式字符串是固定的 '%s %d.%d.%d.%d %d.%d.%d.%d'，其中 %s 是硬编码的 '/sbin/ipconflict'；2) system 调用（地址 0x9e60）使用此格式化后的字符串，但 IP 地址的数字表示无法包含 shell 元字符，因此命令注入不可行；3) 代码路径在 DHCP ACK 处理时可达，但输入可控性不导致实际利用。漏洞被误报，因 IP 地址未以字符串形式直接嵌入命令。\"\n    }\n  },\n  \"status\": \"complete\"\n}"}
