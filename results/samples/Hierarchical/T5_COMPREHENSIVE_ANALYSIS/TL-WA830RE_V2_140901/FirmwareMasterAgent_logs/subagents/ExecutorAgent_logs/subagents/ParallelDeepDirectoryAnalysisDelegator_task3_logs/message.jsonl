{"role": "system", "content": "\n你是一个固件文件系统静态分析代理。你的任务是基于当前分析焦点（特定目录）进行探索和分析。请专注于当前焦点，当你认为对其分析已完成或无法进一步推进时，继续下一个任务或结束任务。\n\n工作方法：\n\n1.  **理解需求**\n    *   始终关注当前分析对象或特定任务，同时也要参考用户的整体或初始需求。\n    *   仔细理解用户当前想要分析的固件内容和目标。除非你非常确定不符合要求，否则不要遗漏符合用户要求的目录和文件。\n    *   如果用户需求不清楚，根据固件特征选择最佳分析路径，适当分解复杂任务，合理调用分析助手。\n\n2.  **制定分析计划**\n    *   根据固件特征选择最佳分析路径。\n    *   对于复杂任务，将其分解为多个具有明确目标和步骤的子任务，合理调用分析助手和工具。\n    *   根据助手反馈合理调整分析计划，确保计划准确完整。如果助手无法完成任务，重新制定分析计划。如果助手尝试两次后仍无法完成任务，继续分析下一个任务。\n\n3.  **分析期间的问题处理**\n    *   记录分析过程中遇到的技术难点和独特挑战。\n    *   评估问题在实际固件环境中的影响。\n    *   谨慎使用某些工具，避免结果过长导致分析失败，例如 `strings` 工具。\n\n4.  **提交分析结果**\n    *   总结所有分析结果并回答当前任务对应的问题。\n    *   如实报告证据不足或不确定的情况或困难（缺少什么证据，缺少什么信息）。\n\n**核心工作流程：**\n\n1.  **理解需求**\n    *   始终关注具体任务，同时也要参考用户的整体或初始需求。注意，如果任务与当前分析焦点不匹配，你需要停止分析并及时向用户反馈。不要执行跨目录分析。\n    *   仔细理解用户当前想要分析的固件内容和目标。除非你非常确定不符合要求，否则不要遗漏符合用户要求的目录和文件。如果用户需求不清楚，根据固件特征选择最佳分析路径，分解复杂任务，合理调用分析助手。\n\n2.  **理解上下文**：使用工具精确了解你当前的分析焦点和位置。\n\n3.  **委托任务**：需要深入分析时，调用适当的分析助手：\n    *   **探索目录**：使用子目录分析助手或其并行版本切换到指定目录进行分析。\n    *   **分析文件**：使用文件分析助手或其并行版本分析指定文件。\n\n4.  **总结并完成**：完成当前焦点的所有分析任务后，总结你的发现。如果所有任务都已完成，使用 `finish` 动作结束。\n\n*   在 'action' 字段中选择工具或 'finish'，并在 'action_input' 中提供参数或最终响应。\n\n\n当前可用工具：\n- Name: get_context_info\n  Description: 获取当前分析任务的上下文信息，例如正在分析的文件或目录。\n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {},\n  \"required\": []\n}\n\n- Name: execute_shell\n  Description: 在当前目录（bin）中执行只读 shell 命令。\n    **警告：** 此工具严格限制在当前工作目录内。所有文件操作不得引用父目录或任何其他目录。建议使用 `file` 工具在当前目录内进行探索和识别。\n    **注意：** 所有命令都在当前目录中执行。所有路径参数应相对于当前目录。禁止包含 '/' 或 '..' 的路径。\n    支持的命令：file, find, strings, grep, head, tail, readelf, cat, sort, ls。\n    禁止输出重定向（'>'、'>>'）、命令链接和目录更改。\n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"command\": {\n      \"type\": \"string\",\n      \"description\": \"要执行的 shell 命令。命令将在 'bin' 目录中执行。命令中的所有路径应相对于此目录。\"\n    }\n  },\n  \"required\": [\n    \"command\"\n  ]\n}\n\n- Name: r2_file_target\n  Description: \n    与 Radare2 交互式会话交互以分析指定的二进制文件。注意，此工具会自动为目标分析对象建立并维护 r2 会话。\n\n    主要功能：\n    - 发送 Radare2 命令并获取输出\n    - 会话状态在调用之间保持（对于同一文件）\n    - 支持使用 r2ghidra 插件进行反编译：\n    * 使用 `pdg` 命令反编译函数\n    * 提供类似 C 的伪代码输出\n\n    \n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"file_name\": {\n      \"type\": \"string\",\n      \"description\": \"要分析的文件名称。提供相对于固件根目录的路径，不要以 ./ 开头。\"\n    },\n    \"command\": {\n      \"type\": \"string\",\n      \"description\": \"直接与 Radare2 交互的命令\"\n    }\n  },\n  \"required\": [\n    \"file_name\",\n    \"command\"\n  ]\n}\n\n- Name: DeepFileAnalysisAssistant\n  Description: \n    用于对当前目录范围内指定文件进行深度分析的代理。\n    只能分析当前目录或其子目录（任意深度）中的文件。\n    对于你作用域内的文件，使用简单的相对路径，如 'config.php' 或 'subdir/file.txt'。\n    适用于单个文件的深度分析任务。你可以在观察单步结果后决定下一个分析任务。对于验证任务等有针对性的分析，强烈建议使用此代理。\n    \n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"file_name\": {\n      \"type\": \"string\",\n      \"description\": \"相对于你当前目录的文件路径（例如，'config.php'、'hnap/Login.xml'）。你只能访问当前目录或其子目录中的文件。\"\n    },\n    \"run_in_background\": {\n      \"type\": \"boolean\",\n      \"description\": \"是否在后台运行此任务。\",\n      \"default\": false\n    }\n  },\n  \"required\": [\n    \"file_name\"\n  ],\n  \"description\": \"包含文件分析目标的对象。使用相对于当前工作目录的路径。\"\n}\n\n- Name: DeepDirectoryAnalysisAssistant\n  Description: \n    用于对当前目录范围内指定子目录进行深度分析的代理。\n    只能分析当前目录中的子目录（直接子目录或更深层的嵌套目录）。\n    对于你作用域内的目录，使用简单的相对路径，如 'hnap' 或 'subdir/nested'。\n    适用于单个子目录的深度分析任务。你可以在观察单步结果后决定下一个分析任务。对于验证任务等有针对性的分析，强烈建议使用此代理。\n    \n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"dir_name\": {\n      \"type\": \"string\",\n      \"description\": \"相对于你当前目录的目录路径（例如，'hnap'、'init.d'）。你只能访问当前目录范围内的子目录。\"\n    },\n    \"run_in_background\": {\n      \"type\": \"boolean\",\n      \"description\": \"是否在后台运行此任务。\",\n      \"default\": false\n    }\n  },\n  \"required\": [\n    \"dir_name\"\n  ],\n  \"description\": \"包含目录分析目标的对象。使用相对于当前工作目录的路径。\"\n}\n\n- Name: ParallelDeepFileAnalysisDelegator\n  Description: \n    深度文件分析委托器 - 将当前目录范围内多个文件的分析任务分配给子代理并行处理。\n    只能分析当前目录或其子目录（任意深度）中的文件。\n    对于你作用域内的文件，使用简单的相对路径。\n    适用于同时对多个文件进行深度分析的任务。对于复杂任务或全面分析，强烈建议使用此委托器。\n    \n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"file_names\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\",\n        \"description\": \"相对于你当前目录的文件路径（例如，'config.php'、'hnap/Login.xml'）。你只能访问当前目录或其子目录中的文件。\"\n      },\n      \"description\": \"要并行分析的文件路径列表。使用相对于当前工作目录的路径。\"\n    },\n    \"run_in_background\": {\n      \"type\": \"boolean\",\n      \"description\": \"是否在后台运行此任务。\",\n      \"default\": false\n    }\n  },\n  \"required\": [\n    \"file_names\"\n  ],\n  \"description\": \"包含当前目录范围内文件分析目标列表的对象。\"\n}\n\n- Name: ParallelDeepDirectoryAnalysisDelegator\n  Description: \n    深度目录分析委托器 - 将当前目录范围内多个子目录的分析任务分配给子代理并行处理。\n    只能分析当前目录中的子目录（直接子目录或更深层的嵌套目录）。\n    对于你作用域内的目录，使用简单的相对路径。\n    适用于同时对多个子目录进行深度分析的任务。对于复杂任务或全面分析，强烈建议使用此委托器。\n    \n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"dir_names\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\",\n        \"description\": \"相对于你当前目录的目录路径（例如，'hnap'、'init.d'）。你只能访问当前目录范围内的子目录。\"\n      },\n      \"description\": \"要并行分析的目录路径列表。使用相对于当前工作目录的路径。\"\n    },\n    \"run_in_background\": {\n      \"type\": \"boolean\",\n      \"description\": \"是否在后台运行此任务。\",\n      \"default\": false\n    }\n  },\n  \"required\": [\n    \"dir_names\"\n  ],\n  \"description\": \"包含当前目录范围内目录分析目标列表的对象。\"\n}\n\n- Name: TaskDelegator\n  Description: \n    任务委托器 - 用于将子任务委托给子代理进行处理。\n\n    适用场景：\n    在获得单步任务的结果后再决定下一个分析步骤。\n    \n  Parameters (JSON Schema format):\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"task\": {\n      \"type\": \"string\",\n      \"description\": \"要执行的子任务的详细描述。请指定分析对象。\"\n    },\n    \"run_in_background\": {\n      \"type\": \"boolean\",\n      \"description\": \"是否在后台运行此任务。\",\n      \"default\": false\n    }\n  },\n  \"required\": [\n    \"task\"\n  ]\n}\n\n**后台执行和任务调度**：\n- 在 action_input 中设置 `run_in_background: true` 可异步运行任务。\n- 后台任务完成时，结果会自动注入。\n- 当需要后台结果才能继续时，使用 'wait' 动作。\n\n调度策略（避免遗漏和重复，最大化效率）：\n1. 识别独立任务，如果不立即需要结果，在后台启动它们。\n2. 在后台任务并行运行时继续其他工作。\n3. 当依赖任务需要后台结果时使用 'wait'。\n4. 在脑海中跟踪所有启动的后台任务以避免重复。\n5. 在 'finish' 之前，确保所有后台任务都已完成并整合结果。\n\n响应格式要求：\n\n你必须以严格的 JSON 格式响应。不要在 JSON 对象之外添加任何其他文本。\n不要使用 markdown 格式（如 ```json）。直接输出单个 JSON 对象。\n\n响应必须是符合以下模式的有效 JSON 对象：\n\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"thought\": {\n      \"type\": \"string\",\n      \"description\": \"在这里逐步思考。分析当前情况、目标、可用工具和对话历史。决定是调用工具还是使用 'finish' 动作提供最终答案。\"\n    },\n    \"action\": {\n      \"type\": \"string\",\n      \"description\": \"选择下一个动作。必须是可用工具名称之一、'wait' 或 'finish'。\"\n    },\n    \"action_input\": {\n      \"oneOf\": [\n        {\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"string\"\n        }\n      ],\n      \"description\": \"工具调用的参数或最终响应。如果 action 是工具名称，提供该工具所需的参数（通常是对象）；如果是 'finish'，使用 'final_response' 作为 action_input 的键提供最终响应（通常是包含字符串的对象）。\"\n    },\n    \"status\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"continue\",\n        \"complete\"\n      ],\n      \"description\": \"必须是 'continue'（如果选择了工具）或 'complete'（如果选择了 'finish'）。\"\n    }\n  },\n  \"required\": [\n    \"thought\",\n    \"action\",\n    \"action_input\",\n    \"status\"\n  ]\n}\n\n"}
{"role": "user", "content": "用户初始请求：\n对固件进行全面的安全分析。核心目标是识别并报告从不可信输入点到危险操作的完整、可行且**实际可利用**的攻击链。分析必须关注具有明确可利用性证据的漏洞，而不是理论缺陷。\n1. **输入点识别**：识别所有潜在的不可信输入源，包括但不限于网络接口（HTTP、API、套接字）、IPC、NVRAM/环境变量等。\n2. **数据流追踪**：追踪不可信数据在系统内的传播路径，并分析是否存在缺少适当验证、过滤或边界检查的过程。\n3. **组件交互分析**：关注组件之间的交互（例如 `nvram` get/set、IPC 通信），观察外部可控数据如何在系统内流动并影响其他组件。\n4. **利用链评估**：对于发现的每个潜在攻击链，评估其触发条件、重现步骤以及成功利用的概率。**只有找到完整且可验证的链时，发现才是有效的。**\n5. **最终输出**：报告应清楚地描述攻击者最有可能成功利用的攻击路径和安全漏洞。\n\n当前任务：\n专注于分析目录 'bin' 的内容，寻找可利用的信息和线索。"}
{"role": "assistant", "content": "{\n  \"thought\": \"用户要求对固件进行全面的安全分析，当前任务是专注于分析 'bin' 目录的内容，寻找可利用的信息和线索。我需要先确认当前上下文，然后探索 'bin' 目录的文件和子目录。使用 get_context_info 工具来确认分析焦点，然后使用 execute_shell 运行 ls -la 命令列出目录内容，以便识别潜在的可执行文件、脚本或其他相关文件。这将帮助我制定后续分析计划。\",\n  \"action\": \"get_context_info\",\n  \"action_input\": {},\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：get_context_info\n参数：{}\n结果：\n 当前分析焦点：\n- 文件：未指定\n- 目录：bin\n- 相对于固件根目录的目录路径：bin", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"我已经确认当前分析焦点是 'bin' 目录。现在需要探索这个目录的内容，以识别潜在的可执行文件、脚本或其他可能包含安全漏洞的文件。我将使用 execute_shell 命令运行 'ls -la' 来列出所有文件和子目录的详细信息，包括权限、大小和类型。这将帮助我识别需要进一步分析的目标，例如 setuid 二进制文件、脚本或配置文件。\",\n  \"action\": \"execute_shell\",\n  \"action_input\": {\n    \"command\": \"ls -la\"\n  },\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：execute_shell\n参数：{\"command\": \"ls -la\"}\n结果：\n 退出代码：0\n标准输出：\ntotal 265\ndrwxrwxrwx 1 zxr zxr   4096 9月   1  2014 .\ndrwxrwxrwx 1 zxr zxr   4096 9月   1  2014 ..\n-rwxrwxrwx 1 zxr zxr 251048 9月   1  2014 busybox\nlrwxrwxrwx 1 zxr zxr      7 11月 26  2019 cat -> busybox\nlrwxrwxrwx 1 zxr zxr      7 11月 26  2019 chmod -> busybox\nlrwxrwxrwx 1 zxr zxr      7 11月 26  2019 date -> busybox\nlrwxrwxrwx 1 zxr zxr      7 11月 26  2019 df -> busybox\nlrwxrwxrwx 1 zxr zxr      7 11月 26  2019 echo -> busybox\nlrwxrwxrwx 1 zxr zxr      7 11月 26  2019 false -> busybox\nlrwxrwxrwx 1 zxr zxr     86 11月 26  2019 iptables-xml -> /home/jiangdunchuan/project/tmp_wa850/build/../rootfs.build.2.6.31/sbin/iptables-multi\nlrwxrwxrwx 1 zxr zxr      7 11月 26  2019 kill -> busybox\nlrwxrwxrwx 1 zxr zxr      7 11月 26  2019 login -> busybox\nlrwxrwxrwx 1 zxr zxr      7 11月 26  2019 ls -> busybox\nlrwxrwxrwx 1 zxr zxr      7 11月 26  2019 mount -> busybox\nlrwxrwxrwx 1 zxr zxr      7 11月 26  2019 msh -> busybox\nlrwxrwxrwx 1 zxr zxr      7 11月 26  2019 ping -> busybox\nlrwxrwxrwx 1 zxr zxr      7 11月 26  2019 ps -> busybox\nlrwxrwxrwx 1 zxr zxr      7 11月 26  2019 rm -> busybox\nlrwxrwxrwx 1 zxr zxr      7 11月 26  2019 sh -> busybox\nlrwxrwxrwx 1 zxr zxr      7 11月 26  2019 true -> busybox\nlrwxrwxrwx 1 zxr zxr      7 11月 26  2019 umount -> busybox\n\n", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"我已经列出了 'bin' 目录的内容，发现大部分文件都是指向 'busybox' 的符号链接，这表明 BusyBox 被用作多个命令的底层实现。有一个特殊的符号链接 'iptables-xml' 指向一个绝对路径 '/home/jiangdunchuan/project/tmp_wa850/build/../rootfs.build.2.6.31/sbin/iptables-multi'，这暴露了开发环境路径，可能是一个安全问题。所有文件都有广泛的权限 (rwxrwxrwx)，这可能允许未经授权的访问或修改。现在，我需要深入分析 'busybox' 二进制文件，因为它是核心可执行文件，可能包含漏洞如缓冲区溢出或命令注入。我将先使用 'file' 命令确认文件类型，然后使用 Radare2 进行初步分析。\",\n  \"action\": \"execute_shell\",\n  \"action_input\": {\n    \"command\": \"file busybox\"\n  },\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：execute_shell\n参数：{\"command\": \"file busybox\"}\n结果：\n 退出代码：0\n标准输出：\nbusybox: ELF 32-bit MSB executable, MIPS, MIPS32 rel2 version 1 (SYSV), dynamically linked, interpreter /lib/ld-uClibc.so.0, no section header\n\n", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"I have identified that the 'bin' directory contains primarily symbolic links to 'busybox', which is a core executable for multiple commands. The 'iptables-xml' symlink exposes an absolute development path, indicating potential information leakage, but I cannot access it due to tool restrictions. All files have overly permissive permissions (rwxrwxrwx), which could allow unauthorized access. To proceed with security analysis, I need to deeply analyze the 'busybox' binary for vulnerabilities such as buffer overflows, command injection, or weak input validation, as it is the foundation for many system commands. I will use r2_file_target to perform an initial binary analysis, starting with basic information gathering to identify potential security issues.\",\n  \"action\": \"r2_file_target\",\n  \"action_input\": {\n    \"file_name\": \"busybox\",\n    \"command\": \"i\"\n  },\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：r2_file_target\n参数：{\"file_name\": \"busybox\", \"command\": \"i\"}\n结果：\n fd       3\nfile     bin/busybox\nsize     0x3d4a8\nhumansz  245.2K\nmode     r-x\nformat   elf\niorw     false\nblock    0x100\ntype     EXEC (Executable file)\narch     mips\ncpu      mips32r2\nbaddr    0x400000\nbinsz    249200\nbintype  elf\nbits     32\ncanary   false\ninjprot  false\nclass    ELF32\nflags    0x70001007\nabi      o32\ncrypto   false\nendian   big\nhavecode true\nintrp    /lib/ld-uClibc.so.0\nladdr    0x0\nlang     c\nlinenum  false\nlsyms    false\nmachine  MIPS R3000\nnx       false\nos       linux\npic      false\nrelocs   false\nrelro    no\nrpath    NONE\nsanitize false\nstatic   false\nstripped true\nsubsys   linux\nva       true", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"I have gathered basic information about the 'busybox' binary: it's a MIPS ELF executable, stripped, with no NX bit, which could allow code execution if there are buffer overflows. To identify potential vulnerabilities, I need to analyze the binary for input handling points, strings, and functions. Using Radare2, I can list strings to find commands, input sources, or potential vulnerable code paths. This will help in tracing data flow and identifying exploitable chains. I'll start with the 'iz' command in Radare2 to list strings, which might reveal command handlers, environment variables, or other input points.\",\n  \"action\": \"r2_file_target\",\n  \"action_input\": {\n    \"file_name\": \"busybox\",\n    \"command\": \"iz\"\n  },\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：r2_file_target\n参数：{\"file_name\": \"busybox\", \"command\": \"iz\"}\n结果：\n nth paddr vaddr len size section type string\n――――――――――――――――――――――――――――――――――――――――――――", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"The 'iz' command in Radare2 returned no output, which might indicate that strings are not easily accessible or the binary is heavily stripped. To proceed with security analysis, I need to perform a deeper analysis of the 'busybox' binary. I'll use the 'aaa' command in Radare2 to auto-analyze the binary, which should help identify functions, entry points, and potential vulnerable code paths. This will allow me to trace data flow and identify input handling points that could lead to exploitable vulnerabilities like buffer overflows or command injection.\",\n  \"action\": \"r2_file_target\",\n  \"action_input\": {\n    \"file_name\": \"busybox\",\n    \"command\": \"aaa\"\n  },\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：r2_file_target\n参数：{\"file_name\": \"busybox\", \"command\": \"aaa\"}\n结果：\n ", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"The 'aaa' command in Radare2 has completed the auto-analysis of the 'busybox' binary. Now, I need to list the functions to identify potential input handlers or vulnerable code paths. Using 'afl' will show all functions, which can help pinpoint areas where untrusted input might be processed, such as command parsers, network handlers, or environment variable handlers. This is crucial for tracing data flow and identifying exploitable vulnerabilities like buffer overflows or command injection in the context of the busybox applets.\",\n  \"action\": \"r2_file_target\",\n  \"action_input\": {\n    \"file_name\": \"busybox\",\n    \"command\": \"afl\"\n  },\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：r2_file_target\n参数：{\"file_name\": \"busybox\", \"command\": \"afl\"}\n结果：\n 0x00433ce0    1     32 sym.imp.getgroups\n0x00433cd0    1     16 sym.imp.clearenv\n0x00433cc0    1     16 sym.imp.geteuid\n0x00433cb0    1     16 sym.imp.kill\n0x00433ca0    1     16 sym.imp.strcpy\n0x00433c90    1     16 sym.imp.gethostbyname2\n0x00433c80    1     16 sym.imp.bindresvport\n0x00433c70    1     16 sym.imp.pipe\n0x00433c60    1     16 sym.imp.readdir64\n0x00433c50    1     16 sym.imp.gethostbyaddr\n0x00433c40    1     16 sym.imp.reboot\n0x00433c30    1     16 sym.imp.umount\n0x00433c20    1     16 sym.imp.signal\n0x00433c10    1     16 sym.imp.setgid\n0x00433c00    1     16 sym.imp.fscanf\n0x00433bf0    1     16 sym.imp.puts\n0x00433be0    1     16 sym.imp.strdup\n0x00433bd0    1     16 sym.imp.mkstemp64\n0x00433bc0    1     16 sym.imp.msgget\n0x00433bb0    1     16 sym.imp.getservbyname\n0x00433ba0    1     16 sym.imp.getopt_long\n0x00433b90    1     16 sym.imp.printf\n0x00433b80    1     16 sym.imp.srand\n0x00433b70    1     16 sym.imp.isspace\n0x00433b60    1     16 sym.imp.strerror\n0x00433b50    1     16 sym.imp.getgid\n0x00433b40    1     16 sym.imp.ether_aton\n0x00433b30    1     16 sym.imp.strchr\n0x00433b20    1     16 sym.imp.alarm\n0x00433b10    1     16 sym.imp.strpbrk\n0x00433b00    1     16 sym.imp.atoi\n0x00433af0    1     16 sym.imp.xdr_array\n0x00433ae0    1     16 sym.imp.free\n0x00433ad0    1     16 sym.imp.mount\n0x00433ac0    1     16 sym.imp.waitpid\n0x00433ab0    1     16 sym.imp.getopt\n0x00433aa0    1     16 sym.imp.strcmp\n0x00433a90    1     16 sym.imp.open64\n0x00433a80    1     16 sym.imp.strstr\n0x00433a70    1     16 sym.imp.semop\n0x00433a60    1     16 sym.imp.getmntent\n0x00433a50    1     16 sym.imp.semget\n0x00433a40    1     16 sym.imp.fork\n0x00433a30    1     16 sym.imp.creat64\n0x00433a20    1     16 sym.imp.exit\n0x00433a10    1     16 sym.imp.statfs64\n0x00433a00    1     16 sym.imp.memchr\n0x004339f0    1     16 sym.imp.rand\n0x004339e0    1     16 sym.imp.socket\n0x004339d0    1     16 sym.imp.xdr_bytes\n0x004339c0    1     16 sym.imp.sprintf\n0x004339b0    1     16 sym.imp.sigemptyset\n0x004339a0    1     16 sym.imp.syslog\n0x00433990    1     16 sym.imp.recvfrom\n0x00433980    1     16 sym.imp.vsnprintf\n0x00433970    1     16 sym.imp.memcmp\n0x00433960    1     16 sym.imp.abort\n0x00433950    1     16 sym.imp.shmctl\n0x00433940    1     16 sym.imp.strcspn\n0x00433930    1     16 sym.imp.inet_addr\n0x00433920    1     16 sym.imp.ether_ntoa\n0x00433910    1     16 sym.imp.fprintf\n0x00433900    1     16 sym.imp.vdprintf\n0x004338f0    1     16 sym.imp.getuid\n0x004338e0    1     16 sym.imp.getnetbyname\n0x004338d0    1     16 sym.imp.vfork\n0x004338c0    1     16 sym.imp.xdr_string\n0x004338b0    1     16 sym.imp.stime\n0x004338a0    1     16 sym.imp.__h_errno_location\n0x00433890    1     16 sym.imp.perror\n0x00433880    1     16 sym.imp.qsort\n0x00433870    1     16 sym.imp.inet_ntoa\n0x00433860    1     16 sym.imp.memset\n0x00433850    1     16 sym.imp.fflush\n0x00433840    1     16 sym.imp.sync\n0x00433830    1     16 sym.imp.closelog\n0x00433820    1     16 sym.imp.execl\n0x00433810    1     16 sym.imp.unlink\n0x00433800    1     16 sym.imp.chdir\n0x004337f0    1     16 sym.imp.tcgetattr\n0x004337e0    1     16 sym.imp.setuid\n0x004337d0    1     16 sym.imp.fputs\n0x004337c0    1     16 sym.imp.sigaddset\n0x004337b0    1     16 sym.imp.shmdt\n0x004337a0    1     16 sym.imp.tcsetattr\n0x00433790    1     16 sym.imp.shmat\n0x00433780    1     16 sym.imp.socketpair\n0x00433770    1     16 sym.imp.getnetbyaddr\n0x00433760    1     16 sym.imp.mmap64\n0x00433750    1     16 sym.imp.semctl\n0x00433740    1     16 sym.imp.strncpy\n0x00433730    1     16 sym.imp.sscanf\n0x00433720    1     16 sym.imp.umask\n0x00433710    1     16 sym.imp.ferror\n0x00433700    1     16 sym.imp.sigaction\n0x004336f0    1     16 sym.imp.fgets\n0x004336e0    1     16 sym.imp.getdomainname\n0x004336d0    1     16 sym.imp.msgrcv\n0x004336c0    1     16 sym.imp.shmget\n0x004336b0    1     16 sym.imp.setsid\n0x004336a0    1     16 sym.imp.getpwuid\n0x00433690    1     16 sym.imp.fputc\n0x00433680    1     16 sym.imp.close\n0x00433670    1     16 sym.imp.localtime\n0x00433660    1     16 sym.imp.clnt_pcreateerror\n0x00433650    1     16 sym.imp.longjmp\n0x00433640    1     16 sym.imp.closedir\n0x00433630    1     16 sym.imp.times\n0x00433620    1     16 sym.imp.isatty\n0x00433610    1     16 sym.imp.getpwnam\n0x00433600    1     16 sym.imp.write\n0x004335f0    1     16 sym.imp.vprintf\n0x004335e0    1     16 sym.imp.fileno\n0x004335d0    1     16 sym.imp.strtok\n0x004335c0    1     16 sym.imp.setpgrp\n0x004335b0    1     16 sym.imp.fgetc\n0x004335a0    1     16 sym.imp.time\n0x00433590    1     16 sym.imp.lstat64\n0x00433580    1     16 sym.imp.xdr_enum\n0x00433570    1     16 sym.imp.chmod\n0x00433560    1     16 sym.imp.gethostname\n0x00433550    1     16 sym.imp.bsearch\n0x00433540    1     16 sym.imp.fread\n0x00433530    1     16 sym.imp.setsockopt\n0x00433520    1     16 sym.imp.fclose\n0x00433510    1     16 sym.imp.getpagesize\n0x00433500    1     16 sym.imp.strsep\n0x004334f0    1     16 sym.imp.memmove\n0x004334e0    1     16 sym.imp.mktime\n0x004334d0    1     16 sym.imp.sigprocmask\n0x004334c0    1     16 sym.imp.__fgetc_unlocked\n0x004334b0    1     16 sym.imp.getpid\n0x004334a0    1     16 sym.imp.wait\n0x00433490    1     16 sym.imp.lockf64\n0x00433480    1     16 sym.imp.stat64\n0x00433470    1     16 sym.imp.fdopen\n0x00433460    1     16 sym.imp.access\n0x00433450    1     16 sym.imp.__fputc_unlocked\n0x00433440    1     16 sym.imp.initgroups\n0x00433430    1     16 sym.imp.strncasecmp\n0x00433420    1     16 sym.imp.clnt_perror\n0x00433410    1     16 sym.imp._exit\n0x00433400    1     16 sym.imp.select\n0x004333f0    1     16 sym.imp.execv\n0x004333e0    1     16 sym.imp.lseek64\n0x004333d0    1     16 sym.imp.endgrent\n0x004333c0    1     16 sym.imp.read\n0x004333b0    1     16 sym.imp.dup2\n0x004333a0    1     16 sym.imp.dup\n0x00433390    1     16 sym.imp.snprintf\n0x00433380    1     16 sym.imp.strtol\n0x00433370    1     16 sym.imp.sendto\n0x00433360    1     16 sym.imp.__cxa_atexit\n0x00433350    1     16 sym.imp.pause\n0x00433340    1     16 sym.imp.setmntent\n0x00433330    1     16 sym.imp.opendir\n0x00433320    1     16 sym.imp.ctime\n0x00433310    1     16 sym.imp.authunix_create_default\n0x00433300    1     16 sym.imp.strlen\n0x004332f0    1     16 sym.imp.recv\n0x004332e0    1     16 sym.imp.ioctl\n0x004332d0    1     16 sym.imp.setlinebuf\n0x004332c0    1     16 sym.imp.xdr_u_int\n0x004332b0    1     16 sym.imp.fopen64\n0x004332a0    1     16 sym.imp.__uClibc_main\n0x00433290    1     16 sym.imp.strncmp\n0x00433280    1     16 sym.imp.strrchr\n0x00433270    1     16 sym.imp.klogctl\n0x00433260    1     16 sym.imp.malloc\n0x00433250    1     16 sym.imp.strtoul\n0x00433240    1     16 sym.imp.pmap_getport\n0x00433230    1     16 sym.imp.strcasecmp\n0x00433220    1     16 sym.imp.setenv\n0x00433210    1     16 sym.imp.getcwd\n0x00433200    1     16 sym.imp.putenv\n0x004331f0    1     16 sym.imp.msglogd\n0x004331e0    1     16 sym.imp.openlog\n0x004331d0    1     16 sym.imp.rmdir\n0x004331c0    1     16 sym.imp.chown\n0x004331b0    1     16 sym.imp.execve\n0x004331a0    1     16 sym.imp.realpath\n0x00433190    1     16 sym.imp.feof\n0x00433180    1     16 sym.imp.fstat64\n0x00433170    1     16 sym.imp.strcat\n0x00433160    1     16 sym.imp.gettimeofday\n0x00433150    1     16 sym.imp.getsockname\n0x00433140    1     16 sym.imp.clnttcp_create\n0x00433130    1     16 sym.imp.strspn\n0x00433120    1     16 sym.imp.readlink\n0x00433110    1     16 sym.imp.putchar\n0x00433100    1     16 sym.imp.getegid\n0x004330f0    1     16 sym.imp.sysinfo\n0x004330e0    1     16 sym.imp.endmntent\n0x004330d0    1     16 sym.imp.vfprintf\n0x004330c0    1     16 sym.imp.send\n0x004330b0    1     16 sym.imp.syscall\n0x004330a0    1     16 sym.imp.getprotobyname\n0x00433090    1     16 sym.imp.realloc\n0x00433080    1     16 sym.imp.sleep\n0x00433070    1     16 sym.imp.pmap_getmaps\n0x00433060    1     16 sym.imp.clntudp_create\n0x00433050    1     16 sym.imp.xdr_opaque\n0x00433040    1     16 sym.imp.uname\n0x00433030    1     16 sym.imp.connect\n0x00433020    1     16 sym.imp.umount2\n0x00433010    1     16 sym.imp.ttyname\n0x00433000    1     16 sym.imp.memcpy\n0x00432ff0    1     16 sym.imp.usleep\n0x00432fe0    1     16 sym.imp.crypt\n0x00432fd0    1     16 sym.imp.daemon\n0x00432fc0    1     16 sym.imp.getenv\n0x00432fb0    1     16 sym.imp.fcntl64\n0x00432fa0    1     16 sym.imp.inet_aton\n0x00432f90    1     16 sym.imp.__errno_location\n0x00432f80    1     16 sym.imp.calloc\n0x00432f70    1     16 sym.imp.strftime\n0x00432f60    1     16 sym.imp.difftime\n0x00432f50    1     16 sym.imp.gethostbyname\n0x00432f40    1     16 sym.imp.sysconf\n0x00432f30    1     16 sym.imp.bind\n0x00432f20    1     16 sym.imp.vasprintf\n0x00432f10    1     16 sym.imp.tcgetpgrp\n0x00432f00    1     16 sym.imp.getspnam\n0x00432ef0    1     16 sym.imp.msgsnd\n0x00432ee0    1     16 sym.imp._setjmp\n0x00432ed0    1     16 sym.imp.herror\n0x00404380    2     92 entry0\n0x0040fc38    5    108 sym.if_freenameindex\n0x0040f99c   29    668 sym.if_nameindex\n0x0042b6f0    7    180 sym.bb_error_msg\n0x0041256c    1     16 sym.get_runtime_dhcp_flags\n0x004311f0    8    156 sym.my_getug\n0x00416ddc    8    212 sym.add_option_string\n0x00404300    1    128 sym._init\n0x0042ddb0    1    152 sym.print_login_prompt\n0x00404530    7    156 main\n0x0042b1ac    3     72 sym.change_identity\n0x0042b0f0    7    188 fcn.0042b0f0\n0x0042e690    1     80 sym.bb_perror_msg_and_die\n0x004128b0    1    224 sym.send_decline\n0x0041276c    7    324 fcn.0041276c\n0x00416eb0   14    224 sym.add_simple_option\n0x004172d4    6    592 sym.raw_packet\n0x00416b50    1     56 sym.uptime\n0x0042b3c8   16    288 sym.bb_copyfd_eof\n0x0041026c    3    120 sym.br_set_bridge_max_age\n0x00410db0    1    148 sym.__tv_to_jiffies\n0x00431530   92   1332 sym.__udivdi3\n0x0040fea4    1    128 fcn.0040fea4\n0x00430bc0    4     96 sym.xrealloc\n0x0042b7b0    7    192 sym.bb_error_msg_and_die\n0x0042efd0   38    916 sym.remove_file\n0x00410490    1     72 sym.br_ioctl\n0x00430ed0    1     28 sym.bb_xgetularg10_bnd\n0x0042dd50    4     92 sym.last_char_is\n0x004102e4    3    120 sym.br_set_bridge_hello_time\n0x0042ba40    5    244 sym.find_pid_by_name\n0x0042f870   22    392 sym.bb_simplify_path\n0x00430c20    5    112 sym.xcalloc\n0x00417acc    1    136 sym.udhcp_sp_setup\n0x00415480    5     84 sym.find_lease_by_yiaddr\n0x00431390   17    416 sym.bb_xgetularg_bnd_sfx\n0x004307c8   10    144 sym.bb_value_to_baud\n0x00410064    3     96 sym.br_set_port_priority\n0x0042de48   49    928 sym.print_login_issue\n0x004045cc   13    556 sym.busybox_main\n0x0041035c    3    120 sym.br_set_bridge_forward_delay\n0x004179f0    3    100 sym.udhcp_sp_ipc_inform\n0x004303a0   54    836 sym.bb_getopt_ulflags\n0x00412a28    4    240 sym.send_renew\n0x0042fe30    3    132 sym.bb_wfopen\n0x0042e640    1     68 sym.bb_perror_msg\n0x0042fd70    5    180 sym.bb_vperror_msg\n0x00409f20    6    160 sym.kill_init\n0x0042fc60    1    136 sym.bb_verror_msg\n0x00412ec0    5    168 sym.raw_socket\n0x0042f684   19    572 sym.setup_environment\n0x00432830    6     68 sym.__lshrdi3\n0x00430b60    4     96 sym.xmalloc\n0x004259d4  111   2428 sym.cmdedit_read_input\n0x00410600    1     72 sym.br_get_version\n0x00430c90    4     92 sym.bb_xstrdup\n0x004137b0   46   1304 sym.run_script\n0x00410120    3     92 sym.br_set_stp_state\n0x00415d40    1    104 sym.sendNAK\n0x00415ab0    1    148 fcn.00415ab0\n0x00415bcc    9    192 fcn.00415bcc\n0x004104d8    3    148 sym.br_del_bridge\n0x0042be80    9    100 sym.bb_get_last_path_component\n0x0042b200    8    176 sym.concat_path_file\n0x00417b60    8    396 sym.listen_socket\n0x00417160    7    372 sym.kernel_packet\n0x00431150    1     80 sym.bb_herror_msg_and_die\n0x0042fcf0    5    128 sym.bb_vherror_msg\n0x004293d4  251   5768 sym.nfsmount\n0x00430e70    1     84 sym.bb_printf\n0x004312f0    3     88 sym.bb_vfprintf\n0x00430b00    7     92 sym.concat_subpath_file\n0x00430340    3     96 sym.bb_fflush_stdout_and_exit\n0x0042b630    8    192 sym.device_open\n0x004301c0    3     84 sym.xgethostbyname\n0x00415894    3    200 sym.check_ip\n0x00414670   19    956 sym.arpping\n0x004168c0    8    244 sym.udhcp_logging\n0x00415790    5    260 sym.add_lease\n0x00415654   15    316 fcn.00415654\n0x0041557c    7    152 fcn.0041557c\n0x0041257c    3     36 sym.invert_runtime_dhcp_flags\n0x0040ff24    1      8 sym.br_device_ioctl\n0x0040ff2c    7    216 sym.br_read_fdb\n0x00410004    3     96 sym.br_set_path_cost\n0x004300c0    9    248 sym.xgetcwd\n0x0040f8a4    7    248 sym.if_nametoindex\n0x0042bfd0    1     68 sym.bb_herror_msg\n0x00430f10    6    176 sym.safe_strtoul\n0x00412ce0    7    256 sym.random_xid\n0x0042fa00   32    596 sym.u_signal_names\n0x00410430    3     92 sym.br_add_interface\n0x004308b8   15    580 sym.bb_askpass\n0x0042e330   52    776 sym.bb_parse_mode\n0x0042b550    8    224 sym.create_icmp_socket\n0x00417838    7    200 sym.pidfile_acquire\n0x00431350    1     52 sym.bb_xgetularg_bnd\n0x00417930    7    124 sym.udhcp_sp_fd_set\n0x00432320   31    580 sym.__divdf3\n0x00432910    5     92 sym.__clzsi2\n0x00404918   20    632 sym.run_applet_by_name\n0x00430dc0    1     40 sym.bb_xferror_stdout\n0x00412de0    1    224 sym.send_release\n0x00417760    5    216 sym.pidfile_write_release\n0x00416070   53   1556 sym.sendOffer\n0x0041595c   19    336 sym.find_address\n0x00412560    1     12 sym.set_runtime_dhcp_flags\n0x00416f90   25    348 sym.get_option\n0x00430ef0    1     24 sym.bb_xgetularg10\n0x004170f0    9    112 sym.checksum\n0x0042daa8   18    404 sym.display_interfaces\n0x00416b90    5     60 sym.end_option\n0x004311a0    1     80 sym.llist_add_to\n0x00430220    6    212 sym.xreadlink\n0x00432740   14    228 sym.__fixdfsi\n0x0041674c    5    140 sym.addStaticLease\n0x00432880    6     76 sym.__ashldi3\n0x0041017c    3    120 sym.br_set_gc_interval\n0x0042c020   27    592 sym.INET_rresolve\n0x00431e98    1    192 sym.__subdf3\n0x00432bf0   17    260 sym.__unpack_d\n0x00432970   29    636 sym.__pack_d\n0x00412b18    1    172 sym.send_discover\n0x00412990    5    152 fcn.00412990\n0x0042e7c0   23    264 sym.bb_process_escape_sequence\n0x00430300    3     56 sym.bb_fclose_nonstdin\n0x0042bdf0    6    136 sym.bb_full_write\n0x004101f4    3    120 sym.br_set_ageing_time\n0x00416690    6     60 sym.reservedIp\n0x00415614    1     64 sym.lease_expired\n0x00432e40    3     40 sym.atexit\n0x0042b870   18    460 sym.find_mount_point\n0x0042f610    1     28 sym.safe_strncpy\n0x0042ffc4   10    252 sym.bb_lookup_port\n0x004306f0    6    112 sym.bb_wfopen_input\n0x0040fca4   16    420 sym.if_indextoname\n0x00417a54    4    120 sym.udhcp_sp_read\n0x00417cec   14    436 sym.read_interface\n0x004100c4    3     92 sym.br_set_bridge_priority\n0x00404864    7    180 sym.bb_show_usage\n0x004154d4    5    168 sym.find_lease_by_chaddr\n0x0042e770    3     80 sym.bb_xprint_file_by_name\n0x0042e6e0    3    144 fcn.0042e6e0\n0x00415c8c    6    180 sym.send_inform\n0x0042e8d0   37   1124 sym.procps_scan\n0x00414a30   15    464 sym.write_leases\n0x00410f98    5    112 sym.br_find_bridge\n0x0042b3f0   11    340 sym.correct_password\n0x0042f4d0    4    156 sym.safe_read\n0x0041056c    3    148 sym.br_add_bridge\n0x00431020   14    300 sym.bb_ask_confirmation\n0x00410eec    3     48 sym.br_get_state_name\n0x0042c270   12    364 sym.INET_resolve\n0x00417698    9    200 sym.init_header\n0x0042bef0   11    212 sym.get_terminal_width_height\n0x0042e1f0    9    192 sym.bb_mode_string\n0x00412bc4    1    284 sym.send_selecting\n0x00430fc0    3     92 sym.bb_xasprintf\n0x0042bd60    7    144 sym.bb_full_read\n0x00416c20   15    444 sym.attach_option\n0x00430df0    3     88 sym.bb_xfflush_stdout\n0x00417524   13    372 sym.get_packet\n0x00414c8c   28    724 sym.read_config\n0x00433d00    1     84 sym._fini\n0x00431290    3     84 sym.bb_xferror\n0x0042dc40    4    260 sym.get_kernel_revision\n0x00410d10   16    512 sym.br_init\n0x00410e44    1    168 sym.__jiffies_to_tv\n0x00432630    9    264 sym.__floatsidf\n0x0042f570    4    156 sym.safe_write\n0x004328d0    6     60 sym.__ucmpdi2\n0x004169b4    6    252 sym.start_log_and_pid\n0x00430860    3     68 sym.bb_skip_whitespace\n0x00415da8   19    712 sym.sendACK\n0x004166cc    7    128 sym.getIpByMac\n0x0042e2b0    3    128 sym.my_getpwuid\n0x00410f1c    6    124 sym.br_find_port\n0x00413900    5    136 sym.dhcp_ipc_fork\n0x004125a0   16    460 sym.get_raw_packet\n0x0042bb40   22    540 sym.find_real_root_device_name\n0x0042ed40   30    644 sym.recursive_action\n0x0042f370   13    352 sym.run_shell\n0x00430d60    3     84 sym.bb_xfopen\n0x00430cf0    3    108 sym.bb_xstrndup\n0x00432d00   26    312 sym.__fpcmp_parts_d\n0x004103d4    3     92 sym.br_del_interface\n0x00430e50    1     24 sym.bb_strlen\n0x00416bcc    7     84 sym.find_option\n0x00432570    5    188 sym.__ltdf2\n0x00416ab0    3    160 sym.background\n0x00432010   36    776 sym.__muldf3\n0x00405b90   14    164 fcn.00405b90\n0x00405d9c    7    228 fcn.00405d9c\n0x0040654c   25    548 fcn.0040654c\n0x00405e80   94   1740 fcn.00405e80\n0x00405c34   24    360 fcn.00405c34\n0x00407000    8    160 fcn.00407000\n0x004070a0    4     84 fcn.004070a0\n0x004070f4    6    180 fcn.004070f4\n0x00407770   36    748 fcn.00407770\n0x00407bc4    5    144 fcn.00407bc4\n0x004075d0   18    416 fcn.004075d0\n0x0040734c    5    212 fcn.0040734c\n0x00407b30    4    148 fcn.00407b30\n0x004080a8    6    312 fcn.004080a8\n0x004081e0   19    460 fcn.004081e0\n0x00407f78    1    204 fcn.00407f78\n0x00408724   43   1852 fcn.00408724\n0x00408044    9    100 fcn.00408044\n0x00407f00    3    120 fcn.00407f00\n0x004083ac   31    888 fcn.004083ac\n0x00408e60   17    356 fcn.00408e60\n0x0040982c    1    572 fcn.0040982c\n0x00409af0    5    168 fcn.00409af0\n0x0040a774   32    616 fcn.0040a774\n0x0040a590    7    484 fcn.0040a590\n0x0040aefc   16    464 fcn.0040aefc\n0x0040a9dc   48   1312 fcn.0040a9dc\n0x0040bad0    5    148 fcn.0040bad0\n0x0040bd04    3     52 fcn.0040bd04\n0x0040bda0    4    188 fcn.0040bda0\n0x0040bd38    1    104 fcn.0040bd38\n0x0040c9f8    6    212 fcn.0040c9f8\n0x0040cbb0    5    564 fcn.0040cbb0\n0x0040d700   14    552 fcn.0040d700\n0x0040d928   17    464 fcn.0040d928\n0x0040daf8   36   1344 fcn.0040daf8\n0x0040e350   20    836 fcn.0040e350\n0x0040e270   10    224 fcn.0040e270\n0x0040f4d0    5    132 fcn.0040f4d0\n0x0040f760   11    324 fcn.0040f760\n0x0040fe50    1     84 fcn.0040fe50\n0x004106b0    4    320 fcn.004106b0\n0x0041093c    5    532 fcn.0041093c\n0x004107f0   11    332 fcn.004107f0\n0x00410650    4     96 fcn.00410650\n0x00411010    3    100 fcn.00411010\n0x0041113c    3    316 fcn.0041113c\n0x00411074    3    132 fcn.00411074\n0x00412f70   19    380 fcn.00412f70\n0x004130ec   11    436 fcn.004130ec\n0x004137b8   12    328 fcn.004137b8\n0x00413b08    7    196 fcn.00413b08\n0x00413990   13    376 fcn.00413990\n0x00415024    4    136 fcn.00415024\n0x00414c00    6    140 fcn.00414c00\n0x00415b44    5    136 fcn.00415b44\n0x00418330    3    100 fcn.00418330\n0x004184dc    1    236 fcn.004184dc\n0x004185c8    8    216 fcn.004185c8\n0x00418394    9    328 fcn.00418394\n0x0041a148   36    420 fcn.0041a148\n0x0041a2f4   36    716 fcn.0041a2f4\n0x0041a6c8   10    192 fcn.0041a6c8\n0x0041aaa4   27    448 fcn.0041aaa4\n0x0041a978    3    108 fcn.0041a978\n0x0041ac64    3     92 fcn.0041ac64\n0x0041d7b0    8    200 fcn.0041d7b0\n0x0041e080   33    596 fcn.0041e080\n0x0041d99c    7    256 fcn.0041d99c\n0x0041fc30    1      8 fcn.0041fc30\n0x0041e2d4    3     88 fcn.0041e2d4\n0x0041a86c    3     92 fcn.0041a86c\n0x0041b4f4   15    288 fcn.0041b4f4\n0x0041e88c   24    528 fcn.0041e88c\n0x0041dba4    7    136 fcn.0041dba4\n0x0041acfc   27    552 fcn.0041acfc\n0x004207d4   14    332 fcn.004207d4\n0x0041b614   83   1552 fcn.0041b614\n0x00420560   29    628 fcn.00420560\n0x0041bc24   72   1360 fcn.0041bc24\n0x0041dc2c    5    128 fcn.0041dc2c\n0x0041d8c0   10    220 fcn.0041d8c0\n0x0041a8c8    7    176 fcn.0041a8c8\n0x0041fb10   14    288 fcn.0041fb10\n0x004223b4   30    584 fcn.004223b4\n0x0041fc38    1    140 fcn.0041fc38\n0x0041f51c   10    144 fcn.0041f51c\n0x0041c174   13    436 fcn.0041c174\n0x0041d73c    5    116 fcn.0041d73c\n0x0041cc0c   22    504 fcn.0041cc0c\n0x0041d678    9    196 fcn.0041d678\n0x0041f668   21    520 fcn.0041f668\n0x0041eb0c  160   2576 fcn.0041eb0c\n0x0041a0ac   12    156 fcn.0041a0ac\n0x0041dad4    9    208 fcn.0041dad4\n0x0041f870    5    172 fcn.0041f870\n0x00421fcc   14    372 fcn.00421fcc\n0x0041acc0    1     60 fcn.0041acc0\n0x0041c328  119   2276 fcn.0041c328\n0x0041f5ac   10    188 fcn.0041f5ac\n0x0041a9e4   11    192 fcn.0041a9e4\n0x0041d630   16    496 fcn.0041d630\n0x00422140    1     96 fcn.00422140\n0x004214ac    3     84 fcn.004214ac\n0x00420d00  114   1740 fcn.00420d00\n0x004213cc    9    224 fcn.004213cc\n0x0041d878    3     72 fcn.0041d878\n0x0041b0cc    1     80 fcn.0041b0cc\n0x0041e32c    9    192 fcn.0041e32c\n0x0041a7a8    5    164 fcn.0041a7a8\n0x0041dcac   57    980 fcn.0041dcac\n0x0041f91c   30    500 fcn.0041f91c\n0x0041fcc4    5    116 fcn.0041fcc4\n0x0041ffd4   35    672 fcn.0041ffd4\n0x00420ba0   13    352 fcn.00420ba0\n0x00420920   22    640 fcn.00420920\n0x004216b8   13    268 fcn.004216b8\n0x00421500   18    440 fcn.00421500\n0x0041da9c    1     56 fcn.0041da9c\n0x004221a0    1    132 fcn.004221a0\n0x00422224    7    140 fcn.00422224\n0x004217c4   63   1564 fcn.004217c4\n0x00421de0   11    272 fcn.00421de0\n0x00421ef0   10    220 fcn.00421ef0\n0x00422304    6    176 fcn.00422304\n0x00422744   42    808 fcn.00422744\n0x00423558   22    536 fcn.00423558\n0x00423770   14    240 fcn.00423770\n0x00423930    4    208 fcn.00423930\n0x00423a00    6    108 fcn.00423a00\n0x00423adc   24    468 fcn.00423adc\n0x00423cb0    4     88 fcn.00423cb0\n0x00423db0   28    532 fcn.00423db0\n0x004240b8   11    292 fcn.004240b8\n0x004241dc   21    400 fcn.004241dc\n0x0042450c  245   5320 fcn.0042450c\n0x00424434    6    216 fcn.00424434\n0x00423d08    8    168 fcn.00423d08\n0x00424070    3     72 fcn.00424070\n0x00423a6c    4    112 fcn.00423a6c\n0x00423fc4    3    172 fcn.00423fc4\n0x0042436c    5    168 fcn.0042436c\n0x00426350   19    660 fcn.00426350\n0x00426790    7    176 fcn.00426790\n0x00426c00    3     80 fcn.00426c00\n0x00426c50    3     88 fcn.00426c50\n0x00427134   18    596 fcn.00427134\n0x00427048    6    236 fcn.00427048\n0x00427388   10    500 fcn.00427388\n0x0042798c   13    424 fcn.0042798c\n0x0042757c   39   1040 fcn.0042757c\n0x00427b34   46   1284 fcn.00427b34\n0x00428340    7    184 fcn.00428340\n0x00428470    1    160 fcn.00428470\n0x00428510   17    336 fcn.00428510\n0x00428660   12    348 fcn.00428660\n0x00429174    3    136 fcn.00429174\n0x00429330    5    164 fcn.00429330\n0x0042aa60   12    288 fcn.0042aa60\n0x0042ab80   14    368 fcn.0042ab80\n0x0042c3e0   22    420 fcn.0042c3e0\n0x0042c6f0   23    480 fcn.0042c6f0\n0x0042c8d0   17    364 fcn.0042c8d0\n0x0042cedc   17    328 fcn.0042cedc\n0x0042d330    6    176 fcn.0042d330\n0x0042ca3c   39   1184 fcn.0042ca3c\n0x0042d3e0   60   1612 fcn.0042d3e0\n0x0042d024   21    780 fcn.0042d024\n0x0042da2c    5    124 fcn.0042da2c\n0x004044b0    6    124 fcn.004044b0\n0x00432e70    4     84 fcn.00432e70\n0x004043e0    8    208 fcn.004043e0\n0x00431a70   41   1064 fcn.00431a70\n0x0041a5c0    4     48 fcn.0041a5c0\n0x0042c654    5    156 fcn.0042c654", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"I have identified several functions in the 'busybox' binary that may handle untrusted input, such as 'sym.run_script', 'sym.correct_password', and network-related functions like 'sym.send_decline'. These could be potential entry points for attacks. To proceed, I need to deeply analyze these functions for vulnerabilities like buffer overflows, command injection, or improper input validation. I'll start by examining 'sym.run_script' using Radare2's decompilation to understand its logic and identify any exploitable code paths. This function might execute scripts based on external input, which could be a critical point in an attack chain.\",\n  \"action\": \"r2_file_target\",\n  \"action_input\": {\n    \"file_name\": \"busybox\",\n    \"command\": \"pdg @ sym.run_script\"\n  },\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：r2_file_target\n参数：{\"file_name\": \"busybox\", \"command\": \"pdg @ sym.run_script\"}\n结果：\n uint sym.run_script(int32_t param_1,int32_t param_2)\n\n{\n    char *pcVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uchar uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    code *pcVar14;\n    \n    if (param_2 == 0) {\n        return 0xffffffff;\n    }\n    iVar13 = 0x44d6c0;\n    (**(loc._gp + -0x7d64))(iVar13,0,0x800);\n    *(iVar13 + 0x18) = 0;\n    iVar4 = (**(loc._gp + -0x7e9c))(param_2,0x438608);\n    if (iVar4 == 0) {\ncode_r0x00413348:\n        *0x44d6c0 = 0;\n    }\n    else {\n        iVar4 = (**(loc._gp + -0x7e9c))(param_2,0x43859c);\n        if (iVar4 == 0) goto code_r0x00413348;\n        iVar4 = (**(loc._gp + -0x7e9c))(param_2,0x438268);\n        uVar5 = 1;\n        if (iVar4 != 0) {\n            iVar4 = (**(loc._gp + -0x7e9c))(param_2,0x4385f4);\n            uVar5 = 1;\n            if (iVar4 != 0) {\n                uVar5 = 2;\n            }\n        }\n        *0x44d6c0 = uVar5;\n    }\n    if (*0x44d6c0 != '\\0') {\n        *(iVar13 + 4) = 0;\n        *(iVar13 + 8) = 0;\n        *(iVar13 + 0xc) = 0;\n        *(iVar13 + 0x10) = 0;\n        *(iVar13 + 0x14) = 0;\n        goto code_r0x00413730;\n    }\n    if (param_1 == 0) goto code_r0x00413730;\n    pcVar14 = *(loc._gp + -0x7c70);\n    *(iVar13 + 4) = *(param_1 + 0x10);\n    iVar4 = (*pcVar14)(param_1,1);\n    if (iVar4 != 0) {\n        (**(loc._gp + -0x796c))(iVar13 + 8,iVar4,4);\n    }\n    iVar4 = (**(loc._gp + -0x7c70))(param_1,3);\n    if (iVar4 != 0) {\n        (**(loc._gp + -0x796c))(iVar13 + 0xc,iVar4,4);\n    }\n    iVar4 = (**(loc._gp + -0x7c70))(param_1,6);\n    pcVar14 = loc._gp;\n    if (iVar4 != 0) {\n        uVar11 = *(iVar4 + -1) >> 2;\n        if (2 < uVar11) {\n            uVar11 = 2;\n        }\n        uVar10 = 0;\n        while( true ) {\n            iVar7 = uVar10 + 4;\n            bVar3 = uVar11 <= uVar10;\n            iVar9 = iVar4;\n            uVar10 = uVar10 + 1;\n            iVar4 = iVar4 + 4;\n            if (bVar3) break;\n            (**(pcVar14 + -0x796c))(iVar13 + iVar7 * 4,iVar9,4);\n            pcVar14 = loc._gp;\n        }\n    }\n    pcVar14 = *(pcVar14 + -0x7c70);\n    *(iVar13 + 0x18) = 0;\n    iVar4 = (*pcVar14)(param_1,0x79);\n    if (iVar4 != 0) {\n        iVar4 = fcn.00412f70(iVar4,*(iVar4 + -1),iVar13 + *(iVar13 + 0x18) * 0x20 + 0x1c,0x20 - *(iVar13 + 0x18));\n        if (iVar4 < 0) {\n            (**(loc._gp + -0x7a58))(6,2,0x4388e8);\n        }\n        else {\n            (**(loc._gp + -0x7a58))(6,2,0x43891c,iVar4);\n            *(iVar13 + 0x18) = *(iVar13 + 0x18) + iVar4;\n        }\n    }\n    iVar4 = (**(loc._gp + -0x7c70))(param_1,0xf9);\n    if (iVar4 != 0) {\n        iVar4 = fcn.00412f70(iVar4,*(iVar4 + -1),iVar13 + *(iVar13 + 0x18) * 0x20 + 0x1c,0x20 - *(iVar13 + 0x18));\n        if (iVar4 < 0) {\n            (**(loc._gp + -0x7a58))(6,2,0x438960);\n        }\n        else {\n            (**(loc._gp + -0x7a58))(6,2,0x43899c,iVar4);\n            *(iVar13 + 0x18) = *(iVar13 + 0x18) + iVar4;\n        }\n    }\n    iVar4 = (**(loc._gp + -0x7c70))(param_1,0x21);\n    pcVar14 = loc._gp;\n    if (iVar4 != 0) {\n        uVar2 = *(iVar4 + -1);\n        iVar7 = iVar13 + *(iVar13 + 0x18) * 0x20 + 0x1c;\n        if (uVar2 != 0) {\n            iVar9 = 0x20 - *(iVar13 + 0x18);\n            if ((0 < iVar9) && ((uVar2 & 7) == 0)) {\n                iVar12 = 0;\n                do {\n                    (**(pcVar14 + -0x796c))(iVar7,iVar4,4);\n                    *(iVar7 + 4) = 0;\n                    iVar6 = iVar7 + 4;\n                    iVar8 = iVar4;\n                    do {\n                        pcVar1 = iVar8 + 3;\n                        iVar8 = iVar8 + -1;\n                        if (*pcVar1 != '\\0') break;\n                        *(iVar6 + 3) = 0xff;\n                        iVar6 = iVar6 + -1;\n                    } while (iVar6 != iVar7);\n                    pcVar14 = *(loc._gp + -0x796c);\n                    iVar12 = iVar12 + 1;\n                    *(iVar7 + 4) = ~*(iVar7 + 4);\n                    (*pcVar14)(iVar7 + 8,iVar4 + 4,4);\n                    pcVar14 = loc._gp;\n                    *(iVar7 + 0xc) = 1;\n                    if (iVar9 <= iVar12) break;\n                    iVar7 = iVar7 + 0x20;\n                    iVar4 = iVar4 + 8;\n                } while (iVar12 * 8 < uVar2);\n                (**(loc._gp + -0x7a58))(6,2,0x438a58,iVar12);\n                *(iVar13 + 0x18) = *(iVar13 + 0x18) + iVar12;\n                goto code_r0x004136ec;\n            }\n        }\n        (**(pcVar14 + -0x7a58))(6,2,0x4389ec);\n        pcVar14 = loc._gp;\n    }\ncode_r0x004136ec:\n    (**(pcVar14 + -0x7a58))\n              (6,2,0x438a14,*(iVar13 + 4),*(iVar13 + 8),*(iVar13 + 0xc),*(iVar13 + 0x10),*(iVar13 + 0x14),\n               *(iVar13 + 0x18));\ncode_r0x00413730:\n    fcn.004130ec(1,3,iVar13,*(iVar13 + 0x18) * 0x20 + 0x1c);\n    return 0;\n}", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"I have analyzed the 'bin' directory and found that it primarily contains symbolic links to the 'busybox' binary, which is a multi-call executable for various commands. The 'iptables-xml' symlink exposes an absolute development path, indicating potential information leakage. All files have overly permissive permissions (rwxrwxrwx), which could allow unauthorized access or modification. I used Radare2 to examine the 'busybox' binary and identified functions like 'sym.run_script' and network-related handlers that could process untrusted input. However, further analysis is needed to identify specific vulnerabilities and exploitable attack chains. I will now use the 'strings' command to extract readable strings from 'busybox' and look for applet names, environment variables, or other clues that might indicate input points or vulnerable code paths.\",\n  \"action\": \"execute_shell\",\n  \"action_input\": {\n    \"command\": \"strings busybox | head -100\"\n  },\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：execute_shell\n参数：{\"command\": \"strings busybox | head -100\"}\n结果：\n 退出代码：1\n标准错误：\nstrings: invalid integer argument ead\n\n", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"I need to continue analyzing the 'bin' directory for security vulnerabilities. The previous 'strings' command failed due to a syntax error. I'll correct it and extract strings from the 'busybox' binary to identify potential input points, command handlers, or vulnerable code paths. This can reveal applet names, environment variables, or hardcoded values that might be exploited. After examining the strings, I'll assess if there are clear attack chains or if further analysis of specific functions is needed.\",\n  \"action\": \"execute_shell\",\n  \"action_input\": {\n    \"command\": \"strings busybox | head -n 100\"\n  },\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：execute_shell\n参数：{\"command\": \"strings busybox | head -n 100\"}\n结果：\n 退出代码：1\n标准错误：\nstrings: '|': No such file\nstrings: 'head': No such file\n\n", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"I need to continue analyzing the 'bin' directory for security vulnerabilities. The previous attempt to use 'strings' with 'head' failed due to command availability issues in the environment. To identify potential input points and exploitable code in the 'busybox' binary, I'll use Radare2's 'izz' command to list all strings, which might reveal applet names, environment variables, or hardcoded values that could be attack vectors. This approach avoids shell command limitations and provides structured data for analysis. If this reveals interesting strings, I can then focus on specific functions or delegate deeper analysis.\",\n  \"action\": \"r2_file_target\",\n  \"action_input\": {\n    \"file_name\": \"busybox\",\n    \"command\": \"izz\"\n  },\n  \"status\": \"continue\"\n}"}
{"role": "user", "content": "工具：r2_file_target\n参数：{\"file_name\": \"busybox\", \"command\": \"izz\"}\n结果：\n nth  paddr      vaddr      len  size section type    string\n―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\n0    0x00000027 0x00000027 4    10           utf16le \\a4 \\t\n1    0x0000003b 0x0000003b 5    11           utf16le 4@4@4\n2    0x00000154 0x00000154 19   20           ascii   /lib/ld-uClibc.so.0\n3    0x00002b25 0x00002b25 5    6            ascii   _fini\n4    0x00002b2b 0x00002b2b 13   14           ascii   __uClibc_main\n5    0x00002b39 0x00002b39 23   24           ascii   __deregister_frame_info\n6    0x00002b51 0x00002b51 21   22           ascii   __register_frame_info\n7    0x00002b67 0x00002b67 19   20           ascii   _Jv_RegisterClasses\n8    0x00002b7b 0x00002b7b 14   15           ascii   bb_applet_name\n9    0x00002b8a 0x00002b8a 18   19           ascii   run_applet_by_name\n10   0x00002b9d 0x00002b9d 20   21           ascii   bb_error_msg_and_die\n11   0x00002bb2 0x00002bb2 25   26           ascii   get_terminal_width_height\n12   0x00002bcc 0x00002bcc 19   20           ascii   bb_msg_full_version\n13   0x00002be0 0x00002be0 7    8            ascii   applets\n14   0x00002be8 0x00002be8 9    10           ascii   bb_strlen\n15   0x00002bf2 0x00002bf2 7    8            ascii   memmove\n16   0x00002bfa 0x00002bfa 6    7            ascii   memset\n17   0x00002c01 0x00002c01 6    7            ascii   strcmp\n18   0x00002c08 0x00002c08 7    8            ascii   bsearch\n19   0x00002c10 0x00002c10 6    7            ascii   stderr\n20   0x00002c17 0x00002c17 20   21           ascii   been_there_done_that\n21   0x00002c2c 0x00002c2c 12   13           ascii   busybox_main\n22   0x00002c39 0x00002c39 6    7            ascii   getuid\n23   0x00002c40 0x00002c40 6    7            ascii   getgid\n24   0x00002c47 0x00002c47 7    8            ascii   geteuid\n25   0x00002c4f 0x00002c4f 6    7            ascii   setgid\n26   0x00002c56 0x00002c56 6    7            ascii   setuid\n27   0x00002c5d 0x00002c5d 17   18           ascii   bb_getopt_ulflags\n28   0x00002c6f 0x00002c6f 6    7            ascii   optind\n29   0x00002c76 0x00002c76 15   16           ascii   bb_wfopen_input\n30   0x00002c86 0x00002c86 6    7            ascii   fileno\n31   0x00002c8d 0x00002c8d 13   14           ascii   bb_copyfd_eof\n32   0x00002c9b 0x00002c9b 18   19           ascii   bb_fclose_nonstdin\n33   0x00002cae 0x00002cae 13   14           ascii   bb_show_usage\n34   0x00002cbc 0x00002cbc 16   17           ascii   recursive_action\n35   0x00002ccd 0x00002ccd 13   14           ascii   bb_parse_mode\n36   0x00002cdb 0x00002cdb 5    6            ascii   chmod\n37   0x00002ce1 0x00002ce1 13   14           ascii   bb_perror_msg\n38   0x00002cef 0x00002cef 20   21           ascii   bb_opt_complementaly\n39   0x00002d04 0x00002d04 6    7            ascii   putenv\n40   0x00002d0b 0x00002d0b 21   22           ascii   bb_perror_msg_and_die\n41   0x00002d21 0x00002d21 9    10           ascii   localtime\n42   0x00002d2b 0x00002d2b 6    7            ascii   memcpy\n43   0x00002d32 0x00002d32 6    7            ascii   strchr\n44   0x00002d39 0x00002d39 6    7            ascii   sscanf\n45   0x00002d40 0x00002d40 19   20           ascii   bb_msg_invalid_date\n46   0x00002d54 0x00002d54 6    7            ascii   mktime\n47   0x00002d5b 0x00002d5b 23   24           ascii   bb_msg_memory_exhausted\n48   0x00002d73 0x00002d73 5    6            ascii   stime\n49   0x00002d79 0x00002d79 7    8            ascii   putchar\n50   0x00002d81 0x00002d81 7    8            ascii   strncmp\n51   0x00002d89 0x00002d89 8    9            ascii   strftime\n52   0x00002d92 0x00002d92 9    10           ascii   bb_printf\n53   0x00002d9c 0x00002d9c 9    10           ascii   setmntent\n54   0x00002da6 0x00002da6 17   18           ascii   bb_path_mtab_file\n55   0x00002db8 0x00002db8 9    10           ascii   getmntent\n56   0x00002dc2 0x00002dc2 9    10           ascii   endmntent\n57   0x00002dcc 0x00002dcc 16   17           ascii   find_mount_point\n58   0x00002ddd 0x00002ddd 12   13           ascii   bb_error_msg\n59   0x00002dea 0x00002dea 8    9            ascii   statfs64\n60   0x00002df3 0x00002df3 9    10           ascii   __udivdi3\n61   0x00002dfd 0x00002dfd 26   27           ascii   find_real_root_device_name\n62   0x00002e18 0x00002e18 25   26           ascii   bb_fflush_stdout_and_exit\n63   0x00002e32 0x00002e32 8    9            ascii   __stdout\n64   0x00002e3b 0x00002e3b 26   27           ascii   bb_process_escape_sequence\n65   0x00002e56 0x00002e56 16   17           ascii   __fputc_unlocked\n66   0x00002e67 0x00002e67 5    6            ascii   fputc\n67   0x00002e6d 0x00002e6d 7    8            ascii   xcalloc\n68   0x00002e75 0x00002e75 7    8            ascii   lstat64\n69   0x00002e7d 0x00002e7d 7    8            ascii   xmalloc\n70   0x00002e85 0x00002e85 5    6            ascii   ctime\n71   0x00002e8b 0x00002e8b 14   15           ascii   bb_mode_string\n72   0x00002e9a 0x00002e9a 9    10           ascii   xreadlink\n73   0x00002ea4 0x00002ea4 4    5            ascii   free\n74   0x00002ea9 0x00002ea9 4    5            ascii   atoi\n75   0x00002eae 0x00002eae 6    7            ascii   isatty\n76   0x00002eb5 0x00002eb5 10   11           ascii   bb_xstrdup\n77   0x00002ec0 0x00002ec0 7    8            ascii   opendir\n78   0x00002ec8 0x00002ec8 7    8            ascii   strrchr\n79   0x00002ed0 0x00002ed0 9    10           ascii   readdir64\n80   0x00002eda 0x00002eda 16   17           ascii   concat_path_file\n81   0x00002eeb 0x00002eeb 8    9            ascii   closedir\n82   0x00002ef4 0x00002ef4 26   27           ascii   bb_get_last_path_component\n83   0x00002f0f 0x00002f0f 11   12           ascii   remove_file\n84   0x00002f1b 0x00002f1b 16   17           ascii   __errno_location\n85   0x00002f2c 0x00002f2c 6    7            ascii   strtol\n86   0x00002f33 0x00002f33 18   19           ascii   bb_skip_whitespace\n87   0x00002f46 0x00002f46 7    8            ascii   getegid\n88   0x00002f4e 0x00002f4e 9    10           ascii   getgroups\n89   0x00002f58 0x00002f58 8    9            ascii   xrealloc\n90   0x00002f61 0x00002f61 6    7            ascii   reboot\n91   0x00002f68 0x00002f68 7    8            ascii   waitpid\n92   0x00002f70 0x00002f70 9    10           ascii   tcgetattr\n93   0x00002f7a 0x00002f7a 9    10           ascii   tcsetattr\n94   0x00002f84 0x00002f84 9    10           ascii   vsnprintf\n95   0x00002f8e 0x00002f8e 7    8            ascii   openlog\n96   0x00002f96 0x00002f96 6    7            ascii   syslog\n97   0x00002f9d 0x00002f9d 8    9            ascii   closelog\n98   0x00002fa6 0x00002fa6 11   12           ascii   device_open\n99   0x00002fb2 0x00002fb2 13   14           ascii   bb_full_write\n100  0x00002fc0 0x00002fc0 6    7            ascii   access\n101  0x00002fc7 0x00002fc7 6    7            ascii   strcpy\n102  0x00002fce 0x00002fce 7    8            ascii   fopen64\n103  0x00002fd6 0x00002fd6 22   23           ascii   bb_default_login_shell\n104  0x00002fed 0x00002fed 12   13           ascii   safe_strncpy\n105  0x00002ffa 0x00002ffa 5    6            ascii   fgets\n106  0x00003000 0x00003000 6    7            ascii   fclose\n107  0x00003007 0x00003007 11   12           ascii   sigemptyset\n108  0x00003013 0x00003013 9    10           ascii   sigaddset\n109  0x0000301d 0x0000301d 11   12           ascii   sigprocmask\n110  0x00003029 0x00003029 6    7            ascii   signal\n111  0x00003030 0x00003030 6    7            ascii   setsid\n112  0x00003037 0x00003037 9    10           ascii   tcgetpgrp\n113  0x00003041 0x00003041 6    7            ascii   getpid\n114  0x00003048 0x00003048 7    8            ascii   strpbrk\n115  0x00003050 0x00003050 6    7            ascii   strcat\n116  0x00003057 0x00003057 6    7            ascii   strsep\n117  0x0000305e 0x0000305e 5    6            ascii   execv\n118  0x00003064 0x00003064 9    10           ascii   kill_init\n119  0x0000306e 0x0000306e 6    7            ascii   strstr\n120  0x00003075 0x00003075 6    7            ascii   getenv\n121  0x0000307c 0x0000307c 5    6            ascii   chdir\n122  0x00003082 0x00003082 4    5            ascii   wait\n123  0x00003087 0x00003087 5    6            ascii   pause\n124  0x0000308d 0x0000308d 4    5            ascii   sync\n125  0x00003092 0x00003092 4    5            ascii   kill\n126  0x00003097 0x00003097 5    6            ascii   execl\n127  0x0000309d 0x0000309d 16   17           ascii   find_pid_by_name\n128  0x000030ae 0x000030ae 7    8            ascii   fstat64\n129  0x000030b6 0x000030b6 6    7            ascii   mmap64\n130  0x000030bd 0x000030bd 7    8            ascii   syscall\n131  0x000030c5 0x000030c5 8    9            ascii   strerror\n132  0x000030ce 0x000030ce 22   23           ascii   bb_xprint_file_by_name\n133  0x000030e5 0x000030e5 6    7            ascii   getopt\n134  0x000030ec 0x000030ec 12   13           ascii   gettimeofday\n135  0x000030f9 0x000030f9 6    7            ascii   sendto\n136  0x00003100 0x00003100 6    7            ascii   fflush\n137  0x00003107 0x00003107 6    7            ascii   memcmp\n138  0x0000310e 0x0000310e 9    10           ascii   inet_ntoa\n139  0x00003118 0x00003118 10   11           ascii   ether_ntoa\n140  0x00003123 0x00003123 5    6            ascii   alarm\n141  0x00003129 0x00003129 6    7            ascii   optarg\n142  0x00003130 0x00003130 9    10           ascii   inet_aton\n143  0x0000313a 0x0000313a 14   15           ascii   gethostbyname2\n144  0x00003149 0x00003149 10   11           ascii   setsockopt\n145  0x00003154 0x00003154 4    5            ascii   bind\n146  0x00003159 0x00003159 7    8            ascii   connect\n147  0x00003161 0x00003161 11   12           ascii   getsockname\n148  0x0000316d 0x0000316d 9    10           ascii   sigaction\n149  0x00003177 0x00003177 8    9            ascii   recvfrom\n150  0x00003180 0x00003180 7    8            ascii   br_init\n151  0x00003188 0x00003188 5    6            ascii   fputs\n152  0x0000318e 0x0000318e 14   15           ascii   br_find_bridge\n153  0x0000319d 0x0000319d 11   12           ascii   br_read_fdb\n154  0x000031a9 0x000031a9 5    6            ascii   qsort\n155  0x000031af 0x000031af 16   17           ascii   br_set_stp_state\n156  0x000031c0 0x000031c0 12   13           ascii   br_find_port\n157  0x000031cd 0x000031cd 20   21           ascii   br_set_port_priority\n158  0x000031e2 0x000031e2 16   17           ascii   br_set_path_cost\n159  0x000031f3 0x000031f3 9    10           ascii   __fixdfsi\n160  0x000031fd 0x000031fd 11   12           ascii   __floatsidf\n161  0x00003209 0x00003209 8    9            ascii   __subdf3\n162  0x00003212 0x00003212 8    9            ascii   __muldf3\n163  0x0000321b 0x0000321b 21   22           ascii   br_set_bridge_max_age\n164  0x00003231 0x00003231 24   25           ascii   br_set_bridge_hello_time\n165  0x0000324a 0x0000324a 18   19           ascii   br_set_gc_interval\n166  0x0000325d 0x0000325d 27   28           ascii   br_set_bridge_forward_delay\n167  0x00003279 0x00003279 22   23           ascii   br_set_bridge_priority\n168  0x00003290 0x00003290 18   19           ascii   br_set_ageing_time\n169  0x000032a3 0x000032a3 14   15           ascii   if_nametoindex\n170  0x000032b2 0x000032b2 16   17           ascii   br_del_interface\n171  0x000032c3 0x000032c3 16   17           ascii   br_add_interface\n172  0x000032d4 0x000032d4 13   14           ascii   br_del_bridge\n173  0x000032e2 0x000032e2 13   14           ascii   br_add_bridge\n174  0x000032f0 0x000032f0 14   15           ascii   if_indextoname\n175  0x000032ff 0x000032ff 11   12           ascii   bridge_list\n176  0x0000330b 0x0000330b 17   18           ascii   br_get_state_name\n177  0x0000331d 0x0000331d 15   16           ascii   interface_opt_a\n178  0x0000332d 0x0000332d 18   19           ascii   display_interfaces\n179  0x00003340 0x00003340 15   16           ascii   bb_INET_default\n180  0x00003350 0x00003350 7    8            ascii   hostent\n181  0x00003358 0x00003358 18   19           ascii   create_icmp_socket\n182  0x0000336b 0x0000336b 14   15           ascii   xgethostbyname\n183  0x0000337a 0x0000337a 9    10           ascii   bb_xfopen\n184  0x00003384 0x00003384 6    7            ascii   fscanf\n185  0x0000338b 0x0000338b 4    5            ascii   feof\n186  0x00003390 0x00003390 13   14           ascii   INET_rresolve\n187  0x0000339e 0x0000339e 17   18           ascii   bb_xferror_stdout\n188  0x000033b0 0x000033b0 12   13           ascii   INET_resolve\n189  0x000033bd 0x000033bd 14   15           ascii   bb_xgetularg10\n190  0x000033cc 0x000033cc 18   19           ascii   bb_xgetularg10_bnd\n191  0x000033df 0x000033df 7    8            ascii   sysconf\n192  0x000033e7 0x000033e7 14   15           ascii   bb_lookup_port\n193  0x000033f6 0x000033f6 12   13           ascii   bb_full_read\n194  0x00003403 0x00003403 6    7            ascii   select\n195  0x0000340a 0x0000340a 10   11           ascii   strcasecmp\n196  0x00003415 0x00003415 15   16           ascii   __jiffies_to_tv\n197  0x00003425 0x00003425 12   13           ascii   br_socket_fd\n198  0x00003432 0x00003432 15   16           ascii   __tv_to_jiffies\n199  0x00003442 0x00003442 15   16           ascii   br_device_ioctl\n200  0x00003452 0x00003452 8    9            ascii   br_ioctl\n201  0x0000345b 0x0000345b 14   15           ascii   br_get_version\n202  0x0000346a 0x0000346a 7    8            ascii   msglogd\n203  0x00003472 0x00003472 10   11           ascii   run_script\n204  0x0000347d 0x0000347d 12   13           ascii   send_release\n205  0x0000348a 0x0000348a 11   12           ascii   getopt_long\n206  0x00003496 0x00003496 9    10           ascii   inet_addr\n207  0x000034a0 0x000034a0 17   18           ascii   start_log_and_pid\n208  0x000034b2 0x000034b2 14   15           ascii   read_interface\n209  0x000034c1 0x000034c1 10   11           ascii   background\n210  0x000034cc 0x000034cc 14   15           ascii   udhcp_sp_setup\n211  0x000034db 0x000034db 13   14           ascii   dhcp_ipc_fork\n212  0x000034e9 0x000034e9 6    7            ascii   uptime\n213  0x000034f0 0x000034f0 13   14           ascii   listen_socket\n214  0x000034fe 0x000034fe 13   14           ascii   udhcp_logging\n215  0x0000350c 0x0000350c 15   16           ascii   udhcp_sp_fd_set\n216  0x0000351c 0x0000351c 10   11           ascii   random_xid\n217  0x00003527 0x00003527 22   23           ascii   set_runtime_dhcp_flags\n218  0x0000353e 0x0000353e 25   26           ascii   invert_runtime_dhcp_flags\n219  0x00003558 0x00003558 13   14           ascii   send_discover\n220  0x00003566 0x00003566 22   23           ascii   get_runtime_dhcp_flags\n221  0x0000357d 0x0000357d 10   11           ascii   send_renew\n222  0x00003588 0x00003588 14   15           ascii   send_selecting\n223  0x00003597 0x00003597 10   11           ascii   get_packet\n224  0x000035a2 0x000035a2 14   15           ascii   get_raw_packet\n225  0x000035b1 0x000035b1 10   11           ascii   get_option\n226  0x000035bc 0x000035bc 7    8            ascii   arpping\n227  0x000035c4 0x000035c4 12   13           ascii   send_decline\n228  0x000035d1 0x000035d1 13   14           ascii   udhcp_sp_read\n229  0x000035df 0x000035df 6    7            ascii   usleep\n230  0x000035e6 0x000035e6 8    9            ascii   checksum\n231  0x000035ef 0x000035ef 11   12           ascii   init_header\n232  0x000035fb 0x000035fb 13   14           ascii   client_config\n233  0x00003609 0x00003609 17   18           ascii   add_simple_option\n234  0x0000361b 0x0000361b 17   18           ascii   add_option_string\n235  0x0000362d 0x0000362d 10   11           ascii   end_option\n236  0x00003638 0x00003638 12   13           ascii   dhcp_options\n237  0x00003645 0x00003645 13   14           ascii   kernel_packet\n238  0x00003653 0x00003653 5    6            ascii   srand\n239  0x00003659 0x00003659 6    7            ascii   msgget\n240  0x00003660 0x00003660 6    7            ascii   msgsnd\n241  0x00003667 0x00003667 6    7            ascii   msgrcv\n242  0x0000366e 0x0000366e 19   20           ascii   udhcp_sp_ipc_inform\n243  0x00003682 0x00003682 13   14           ascii   server_config\n244  0x00003690 0x00003690 10   11           ascii   getIpByMac\n245  0x0000369b 0x0000369b 7    8            ascii   sendACK\n246  0x000036a3 0x000036a3 10   11           ascii   reservedIp\n247  0x000036ae 0x000036ae 8    9            ascii   check_ip\n248  0x000036b7 0x000036b7 7    8            ascii   sendNAK\n249  0x000036bf 0x000036bf 6    7            ascii   shmget\n250  0x000036c6 0x000036c6 5    6            ascii   shmat\n251  0x000036cc 0x000036cc 10   11           ascii   leases_shm\n252  0x000036d7 0x000036d7 11   12           ascii   read_config\n253  0x000036e3 0x000036e3 11   12           ascii   find_option\n254  0x000036ef 0x000036ef 12   13           ascii   write_leases\n255  0x000036fc 0x000036fc 20   21           ascii   find_lease_by_chaddr\n256  0x00003711 0x00003711 9    10           ascii   sendOffer\n257  0x0000371b 0x0000371b 20   21           ascii   find_lease_by_yiaddr\n258  0x00003730 0x00003730 13   14           ascii   lease_expired\n259  0x0000373e 0x0000373e 11   12           ascii   send_inform\n260  0x0000374a 0x0000374a 32   33           ascii   bb_msg_can_not_create_raw_socket\n261  0x0000376b 0x0000376b 4    5            ascii   recv\n262  0x00003770 0x00003770 6    7            ascii   strtok\n263  0x00003777 0x00003777 6    7            ascii   strspn\n264  0x0000377e 0x0000377e 9    10           ascii   __ctype_b\n265  0x00003788 0x00003788 10   11           ascii   ether_aton\n266  0x00003793 0x00003793 14   15           ascii   addStaticLease\n267  0x000037a2 0x000037a2 14   15           ascii   option_lengths\n268  0x000037b1 0x000037b1 13   14           ascii   attach_option\n269  0x000037bf 0x000037bf 9    10           ascii   add_lease\n270  0x000037c9 0x000037c9 12   13           ascii   find_address\n271  0x000037d6 0x000037d6 7    8            ascii   vprintf\n272  0x000037de 0x000037de 15   16           ascii   pidfile_acquire\n273  0x000037ee 0x000037ee 21   22           ascii   pidfile_write_release\n274  0x00003804 0x00003804 10   11           ascii   setlinebuf\n275  0x0000380f 0x0000380f 6    7            ascii   daemon\n276  0x00003816 0x00003816 7    8            ascii   sysinfo\n277  0x0000381e 0x0000381e 6    7            ascii   fdopen\n278  0x00003825 0x00003825 7    8            ascii   lockf64\n279  0x0000382d 0x0000382d 6    7            ascii   unlink\n280  0x00003834 0x00003834 4    5            ascii   send\n281  0x00003839 0x00003839 10   11           ascii   socketpair\n282  0x00003844 0x00003844 14   15           ascii   u_signal_names\n283  0x00003853 0x00003853 11   12           ascii   procps_scan\n284  0x0000385f 0x0000385f 12   13           ascii   safe_strtoul\n285  0x0000386c 0x0000386c 16   17           ascii   bb_value_to_baud\n286  0x0000387d 0x0000387d 6    7            ascii   setenv\n287  0x00003884 0x00003884 4    5            ascii   dup2\n288  0x00003889 0x00003889 7    8            ascii   fcntl64\n289  0x00003891 0x00003891 5    6            ascii   chown\n290  0x00003897 0x00003897 17   18           ascii   print_login_issue\n291  0x000038a9 0x000038a9 18   19           ascii   print_login_prompt\n292  0x000038bc 0x000038bc 15   16           ascii   __ctype_tolower\n293  0x000038cc 0x000038cc 7    8            ascii   ttyname\n294  0x000038d4 0x000038d4 7    8            ascii   setpgrp\n295  0x000038dc 0x000038dc 22   23           ascii   bb_path_securetty_file\n296  0x000038f3 0x000038f3 8    9            ascii   getpwnam\n297  0x000038fc 0x000038fc 16   17           ascii   correct_password\n298  0x0000390d 0x0000390d 8    9            ascii   difftime\n299  0x00003916 0x00003916 7    8            ascii   __ltdf2\n300  0x0000391e 0x0000391e 20   21           ascii   bb_path_nologin_file\n301  0x00003933 0x00003933 16   17           ascii   __fgetc_unlocked\n302  0x00003944 0x00003944 5    6            ascii   fgetc\n303  0x0000394a 0x0000394a 15   16           ascii   change_identity\n304  0x0000395a 0x0000395a 17   18           ascii   setup_environment\n305  0x0000396c 0x0000396c 17   18           ascii   bb_path_motd_file\n306  0x0000397e 0x0000397e 9    10           ascii   run_shell\n307  0x00003988 0x00003988 5    6            ascii   globv\n308  0x0000398e 0x0000398e 4    5            ascii   func\n309  0x00003993 0x00003993 5    6            ascii   abort\n310  0x00003999 0x00003999 7    8            ascii   longjmp\n311  0x000039a1 0x000039a1 6    7            ascii   execve\n312  0x000039a8 0x000039a8 5    6            ascii   umask\n313  0x000039ae 0x000039ae 5    6            ascii   times\n314  0x000039b4 0x000039b4 8    9            ascii   __divdf3\n315  0x000039bd 0x000039bd 5    6            ascii   vfork\n316  0x000039c3 0x000039c3 9    10           ascii   mkstemp64\n317  0x000039cd 0x000039cd 7    8            ascii   _setjmp\n318  0x000039d5 0x000039d5 7    8            ascii   lseek64\n319  0x000039dd 0x000039dd 7    8            ascii   creat64\n320  0x000039e5 0x000039e5 4    5            ascii   pipe\n321  0x000039ea 0x000039ea 9    10           ascii   safe_read\n322  0x000039f4 0x000039f4 18   19           ascii   cmdedit_read_input\n323  0x00003a07 0x00003a07 7    8            ascii   klogctl\n324  0x00003a0f 0x00003a0f 11   12           ascii   my_getpwuid\n325  0x00003a1b 0x00003a1b 13   14           ascii   prioritynames\n326  0x00003a29 0x00003a29 13   14           ascii   facilitynames\n327  0x00003a37 0x00003a37 5    6            ascii   shmdt\n328  0x00003a3d 0x00003a3d 5    6            ascii   semop\n329  0x00003a43 0x00003a43 6    7            ascii   semget\n330  0x00003a4a 0x00003a4a 6    7            ascii   memchr\n331  0x00003a51 0x00003a51 8    9            ascii   vdprintf\n332  0x00003a5a 0x00003a5a 11   12           ascii   gethostname\n333  0x00003a66 0x00003a66 6    7            ascii   shmctl\n334  0x00003a6d 0x00003a6d 6    7            ascii   semctl\n335  0x00003a74 0x00003a74 31   32           ascii   bb_msg_perm_denied_are_you_root\n336  0x00003a94 0x00003a94 16   17           ascii   bb_simplify_path\n337  0x00003aa5 0x00003aa5 8    9            ascii   nfsmount\n338  0x00003aae 0x00003aae 8    9            ascii   xdr_enum\n339  0x00003ab7 0x00003ab7 9    10           ascii   xdr_bytes\n340  0x00003ac1 0x00003ac1 7    8            ascii   xdr_int\n341  0x00003ac9 0x00003ac9 9    10           ascii   xdr_array\n342  0x00003ad3 0x00003ad3 10   11           ascii   xdr_string\n343  0x00003ade 0x00003ade 9    10           ascii   xdr_u_int\n344  0x00003ae8 0x00003ae8 10   11           ascii   xdr_opaque\n345  0x00003af3 0x00003af3 19   20           ascii   get_kernel_revision\n346  0x00003b07 0x00003b07 13   14           ascii   bb_herror_msg\n347  0x00003b15 0x00003b15 7    8            ascii   strcspn\n348  0x00003b1d 0x00003b1d 11   12           ascii   bb_xstrndup\n349  0x00003b29 0x00003b29 12   13           ascii   pmap_getmaps\n350  0x00003b36 0x00003b36 14   15           ascii   clntudp_create\n351  0x00003b45 0x00003b45 14   15           ascii   clnttcp_create\n352  0x00003b54 0x00003b54 23   24           ascii   authunix_create_default\n353  0x00003b6c 0x00003b6c 11   12           ascii   clnt_perror\n354  0x00003b78 0x00003b78 17   18           ascii   clnt_pcreateerror\n355  0x00003b8a 0x00003b8a 12   13           ascii   bindresvport\n356  0x00003b97 0x00003b97 12   13           ascii   pmap_getport\n357  0x00003ba4 0x00003ba4 6    7            ascii   umount\n358  0x00003bab 0x00003bab 7    8            ascii   umount2\n359  0x00003bb3 0x00003bb3 8    9            ascii   realpath\n360  0x00003bbc 0x00003bbc 10   11           ascii   initgroups\n361  0x00003bc7 0x00003bc7 8    9            ascii   endgrent\n362  0x00003bd0 0x00003bd0 12   13           ascii   last_char_is\n363  0x00003bdd 0x00003bdd 12   13           ascii   bb_xasprintf\n364  0x00003bea 0x00003bea 18   19           ascii   bb_msg_write_error\n365  0x00003bfd 0x00003bfd 8    9            ascii   getspnam\n366  0x00003c06 0x00003c06 10   11           ascii   bb_askpass\n367  0x00003c11 0x00003c11 5    6            ascii   crypt\n368  0x00003c17 0x00003c17 14   15           ascii   getprotobyname\n369  0x00003c26 0x00003c26 13   14           ascii   bb_verror_msg\n370  0x00003c34 0x00003c34 23   24           ascii   bb_default_error_retval\n371  0x00003c4c 0x00003c4c 10   11           ascii   safe_write\n372  0x00003c57 0x00003c57 14   15           ascii   bb_vherror_msg\n373  0x00003c66 0x00003c66 13   14           ascii   gethostbyaddr\n374  0x00003c74 0x00003c74 12   13           ascii   getnetbyaddr\n375  0x00003c81 0x00003c81 12   13           ascii   getnetbyname\n376  0x00003c8e 0x00003c8e 18   19           ascii   __h_errno_location\n377  0x00003ca1 0x00003ca1 5    6            ascii   uname\n378  0x00003ca7 0x00003ca7 13   14           ascii   getdomainname\n379  0x00003cb5 0x00003cb5 8    9            ascii   my_getug\n380  0x00003cbe 0x00003cbe 14   15           ascii   bb_vperror_msg\n381  0x00003ccd 0x00003ccd 17   18           ascii   bb_xfflush_stdout\n382  0x00003cdf 0x00003cdf 9    10           ascii   bb_wfopen\n383  0x00003ce9 0x00003ce9 11   12           ascii   getpagesize\n384  0x00003cf5 0x00003cf5 5    6            ascii   fread\n385  0x00003cfb 0x00003cfb 19   20           ascii   concat_subpath_file\n386  0x00003d0f 0x00003d0f 19   20           ascii   bb_ask_confirmation\n387  0x00003d23 0x00003d23 5    6            ascii   rmdir\n388  0x00003d29 0x00003d29 8    9            ascii   clearenv\n389  0x00003d32 0x00003d32 7    8            ascii   xgetcwd\n390  0x00003d3a 0x00003d3a 11   12           ascii   strncasecmp\n391  0x00003d46 0x00003d46 6    7            ascii   herror\n392  0x00003d4d 0x00003d4d 13   14           ascii   getservbyname\n393  0x00003d5b 0x00003d5b 21   22           ascii   bb_herror_msg_and_die\n394  0x00003d71 0x00003d71 12   13           ascii   llist_add_to\n395  0x00003d7e 0x00003d7e 21   22           ascii   bb_msg_standard_input\n396  0x00003d94 0x00003d94 10   11           ascii   bb_xferror\n397  0x00003d9f 0x00003d9f 22   23           ascii   bb_msg_standard_output\n398  0x00003db6 0x00003db6 11   12           ascii   bb_vfprintf\n399  0x00003dc2 0x00003dc2 16   17           ascii   bb_xgetularg_bnd\n400  0x00003dd3 0x00003dd3 9    10           ascii   vasprintf\n401  0x00003ddd 0x00003ddd 7    8            ascii   __stdin\n402  0x00003de5 0x00003de5 7    8            ascii   isspace\n403  0x00003ded 0x00003ded 20   21           ascii   bb_xgetularg_bnd_sfx\n404  0x00003e02 0x00003e02 12   13           ascii   libmsglog.so\n405  0x00003e0f 0x00003e0f 16   17           ascii   _DYNAMIC_LINKING\n406  0x00003e20 0x00003e20 9    10           ascii   __RLD_MAP\n407  0x00003e2a 0x00003e2a 21   22           ascii   _GLOBAL_OFFSET_TABLE_\n408  0x00003e40 0x00003e40 13   14           ascii   libcrypt.so.0\n409  0x00003e4e 0x00003e4e 9    10           ascii   __clz_tab\n410  0x00003e58 0x00003e58 11   12           ascii   __thenan_df\n411  0x00003e64 0x00003e64 9    10           ascii   __lshrdi3\n412  0x00003e6e 0x00003e6e 9    10           ascii   __ashldi3\n413  0x00003e78 0x00003e78 9    10           ascii   __ucmpdi2\n414  0x00003e82 0x00003e82 10   11           ascii   __unpack_d\n415  0x00003e8d 0x00003e8d 8    9            ascii   __pack_d\n416  0x00003e96 0x00003e96 15   16           ascii   __fpcmp_parts_d\n417  0x00003ea6 0x00003ea6 8    9            ascii   __clzsi2\n418  0x00003eaf 0x00003eaf 13   14           ascii   libgcc_s.so.1\n419  0x00003ebd 0x00003ebd 9    10           ascii   libc.so.0\n420  0x00003ec7 0x00003ec7 12   13           ascii   if_nameindex\n421  0x00003ed4 0x00003ed4 16   17           ascii   if_freenameindex\n422  0x00003ee5 0x00003ee5 9    10           ascii   __environ\n423  0x00003eef 0x00003eef 12   13           ascii   __cxa_atexit\n424  0x00003efc 0x00003efc 6    7            ascii   _ftext\n425  0x00003f03 0x00003f03 6    7            ascii   _fdata\n426  0x00003f0e 0x00003f0e 6    7            ascii   _edata\n427  0x00003f15 0x00003f15 11   12           ascii   __bss_start\n428  0x00003f21 0x00003f21 5    6            ascii   _fbss\n429  0x00003f27 0x00003f27 4    5            ascii   _end\n430  0x00003f2c 0x00003f2c 9    10           ascii   GLIBC_2.0\n431  0x00004360 0x00004360 4    5            ascii   '9.p\n432  0x00004670 0x00004670 5    6            ascii   $Uv$<\n433  0x00004677 0x00004677 4    5            ascii   C$Tz\n434  0x0000467f 0x0000467f 4    5            ascii   C$S>\n435  0x000047c5 0x000047c5 4    5            ascii   @ !\\f\n436  0x00004837 0x00004837 4    5            ascii   @$BH\n437  0x000048a8 0x000048a8 4    5            ascii   $F@P\n438  0x000048d8 0x000048d8 4    8            utf8    $E>\n439  0x00004afd 0x00004afd 4    5            ascii     !<\n440  0x00004f03 0x00004f03 4    5            ascii   X$Bf\n441  0x0000536d 0x0000536d 4    5            ascii   `0!$\n442  0x00005388 0x00005388 4    5            ascii   (b\\al\n443  0x00005478 0x00005478 4    5            ascii   $Rg,\n444  0x00005493 0x00005493 5    6            ascii   \\t$RgD\n445  0x000054b4 0x000054b4 4    5            ascii   $Rg`\n446  0x000054db 0x000054db 4    5            ascii   C$Rg\n447  0x000054ed 0x000054ed 4    5            ascii   @0!$\n448  0x0000581d 0x0000581d 4    5            ascii    (!$\n449  0x00005891 0x00005891 4    5            ascii   F0%%\n450  0x00005ba2 0x00005ba2 5    6            ascii   8!$\\v@\n451  0x00005cc1 0x00005cc1 5    6            ascii   @ !2\\n\n452  0x00005cce 0x00005cce 5    6            ascii   8!$\\f@\n453  0x00005e11 0x00005e11 4    5            ascii    (!$\n454  0x00005f22 0x00005f22 4    5            ascii   (*0d\n455  0x000062b5 0x000062b5 4    5            ascii   F0%$\n456  0x00006873 0x00006873 4    5            ascii   C$Fh\n457  0x0000689a 0x0000689a 4    5            ascii   (!<\\f\n458  0x000068a7 0x000068a7 4    5            ascii   `<\\np\n459  0x00006ab9 0x00006ab9 4    5            ascii   @ !\\f\n460  0x00006b69 0x00006b69 4    5            ascii    (!\\f\n461  0x00006b8d 0x00006b8d 4    5            ascii    (!$\n462  0x00006bad 0x00006bad 4    5            ascii   @ !\\f\n463  0x00006bb9 0x00006bb9 4    5            ascii   @ !\\f\n464  0x00006bcd 0x00006bcd 4    5            ascii   ` !\\f\n465  0x00006d21 0x00006d21 4    5            ascii   @ !$\n466  0x00006e0d 0x00006e0d 4    5            ascii     !\\f\n467  0x00006e19 0x00006e19 4    5            ascii     !\\f\n468  0x00006ea3 0x00006ea3 6    7            ascii   C$Bi0<\n469  0x00006f0f 0x00006f0f 5    6            ascii   C$Ti@\n470  0x0000707d 0x0000707d 4    5            ascii   @(!<\n471  0x00007131 0x00007131 4    5            ascii     !'\n472  0x000073e8 0x000073e8 4    5            ascii   $cjp\n473  0x00007485 0x00007485 4    5            ascii   ` !\\f\n474  0x000074a9 0x000074a9 4    5            ascii   ` !\\f\n475  0x000074cd 0x000074cd 4    5            ascii   ` !\\f\n476  0x000074ed 0x000074ed 4    5            ascii   ` !\\f\n477  0x0000750d 0x0000750d 4    5            ascii   ` !\\f\n478  0x00007531 0x00007531 4    5            ascii   ` !\\f\n479  0x00007cf4 0x00007cf4 4    5            ascii   $ck\\b\n480  0x0000840f 0x0000840f 6    7            ascii   C&&w@$\n481  0x00008423 0x00008423 6    7            ascii   C&&w@$\n482  0x00008437 0x00008437 6    7            ascii   C&&w@$\n483  0x0000844b 0x0000844b 6    7            ascii   C&&w@$\n484  0x00008460 0x00008460 5    6            ascii   &&w@$\n485  0x000084c0 0x000084c0 5    6            ascii   &&w@\\f\n486  0x0000868b 0x0000868b 4    5            ascii   C$Vk\n487  0x00008bdb 0x00008bdb 5    8            utf8    C$Bi询\n488  0x00008bf6 0x00008bf6 4    5            ascii   lX$B\n489  0x00008c35 0x00008c35 4    5            ascii     !<\n490  0x00008c44 0x00008c44 5    6            ascii   $Sl`'\n491  0x00008e25 0x00008e25 4    5            ascii    (!$\n492  0x000092df 0x000092df 6    7            ascii   C$Tk <\n493  0x000092e7 0x000092e7 5    7            utf8    C$Slԏ\n494  0x00009345 0x00009345 4    5            ascii     !$\n495  0x0000963b 0x0000963b 6    7            ascii   C$Tm <\n496  0x0000a01f 0x0000a01f 6    7            ascii   C$Uo(<\n497  0x0000a02b 0x0000a02b 4    5            ascii   !$Vz\n498  0x0000a199 0x0000a199 4    5            ascii   @(!$\n499  0x0000a21c 0x0000a21c 4    5            ascii   $BoX\n500  0x0000a237 0x0000a237 4    5            ascii   \\v$Bo\n501  0x0000a23f 0x0000a23f 5    6            ascii   \\t$Bot\n502  0x0000a247 0x0000a247 4    5            ascii   \\a$Bo\n503  0x0000a367 0x0000a367 4    5            ascii   !$Vp\n504  0x0000a5dd 0x0000a5dd 4    6            utf8    8!0F\n505  0x0000a675 0x0000a675 4    5            ascii     !&\n506  0x0000a6f5 0x0000a6f5 4    5            ascii   @@!<\n507  0x0000a7ab 0x0000a7ab 4    7            utf8    ԌFը<\n508  0x0000a7e0 0x0000a7e0 4    5            ascii   $Fp@\n509  0x0000a87c 0x0000a87c 8    10           utf8    $Ew@$Ezԏ\n510  0x0000ac1f 0x0000ac1f 4    5            ascii   C$Ep\n511  0x0000ac99 0x0000ac99 4    5            ascii   @(!<\n512  0x0000ad8c 0x0000ad8c 4    5            ascii   4BB@\n513  0x0000b16f 0x0000b16f 5    8            utf8    C$Sp菐\n514  0x0000b255 0x0000b255 4    6            utf8    #Ո$B\n515  0x0000b615 0x0000b615 4    5            ascii   `8!$\n516  0x0000b735 0x0000b735 4    5            ascii   @(!<\n517  0x0000b795 0x0000b795 4    6            utf8    D՜$q\n518  0x0000b829 0x0000b829 4    5            ascii   `(!<\n519  0x0000b8e5 0x0000b8e5 4    5            ascii   @(!<\n520  0x0000b8eb 0x0000b8eb 5    6            ascii   C$Srd\n521  0x0000b9cb 0x0000b9cb 4    5            ascii   C$^r\n522  0x0000b9fd 0x0000b9fd 4    5            ascii   `(!$\n523  0x0000ba91 0x0000ba91 4    5            ascii   ` !\\f\n524  0x0000bafb 0x0000bafb 4    6            utf8    !$Qh\n525  0x0000be23 0x0000be23 4    5            ascii   C$Es\n526  0x0000bee1 0x0000bee1 4    5            ascii   @(!$\n527  0x0000bf11 0x0000bf11 4    5            ascii     !&\n528  0x0000c065 0x0000c065 4    5            ascii     !$\n529  0x0000c121 0x0000c121 4    5            ascii     !$\n530  0x0000c756 0x0000c756 4    5            ascii   0!&'\n531  0x0000c83e 0x0000c83e 4    5            ascii   0!&'\n532  0x0000ca77 0x0000ca77 5    7            utf8    \\f$QuĎ\n533  0x0000cb1b 0x0000cb1b 4    5            ascii   C$Ts\n534  0x0000cb23 0x0000cb23 4    5            ascii   C$Ss\n535  0x0000cb2b 0x0000cb2b 4    5            ascii   C$Rs\n536  0x0000d45e 0x0000d45e 4    5            ascii   8!$\\t\n537  0x0000da89 0x0000da89 4    9            utf16le b\\e\\a\\r\n538  0x0000db6f 0x0000db6f 4    7            utf8    .b $\n539  0x0000dc25 0x0000dc25 4    5            ascii    8!4\n540  0x0000dc69 0x0000dc69 4    5            ascii   @0!$\n541  0x0000dca3 0x0000dca3 6    7            ascii   C$V|4<\n542  0x0000ddb4 0x0000ddb4 4    5            ascii   4cB@\n543  0x0000dfbb 0x0000dfbb 4    5            ascii   &$F{\n544  0x0000dfc7 0x0000dfc7 4    5            ascii   #$F{\n545  0x0000dfd3 0x0000dfd3 4    5            ascii    $F{\n546  0x0000dfe0 0x0000dfe0 5    6            ascii   $F|\\f<\n547  0x0000dfec 0x0000dfec 4    5            ascii   $F|$\n548  0x0000e3bc 0x0000e3bc 5    6            ascii   $E}`<\n549  0x0000e3c3 0x0000e3c3 5    6            ascii   C$E}t\n550  0x0000e465 0x0000e465 4    5            ascii   ` !$\n551  0x0000e57d 0x0000e57d 4    5            ascii   @ !$\n552  0x0000e586 0x0000e586 4    6            utf8    0!6ǀ\n553  0x0000e6cf 0x0000e6cf 6    7            ascii   C$T~L<\n554  0x0000e6e3 0x0000e6e3 5    6            ascii   !$S~T\n555  0x0000ea51 0x0000ea51 5    6            ascii     !4B\n556  0x0000eabd 0x0000eabd 5    6            ascii     !4B\n557  0x0000ebab 0x0000ebab 4    5            ascii   C$B~\n558  0x0000ec7d 0x0000ec7d 4    5            ascii   @ !<\n559  0x0000fd1d 0x0000fd1d 4    5            ascii   @ !4\n560  0x0000ff71 0x0000ff71 4    5            ascii   `0!\\f\n561  0x0000ffcd 0x0000ffcd 4    5            ascii   e(!&\n562  0x000101a9 0x000101a9 4    5            ascii   @0!$\n563  0x00010221 0x00010221 4    5            ascii   @0!$\n564  0x00010299 0x00010299 4    5            ascii   @0!$\n565  0x00010311 0x00010311 4    5            ascii   @0!$\n566  0x00010389 0x00010389 4    5            ascii   @0!$\n567  0x00010736 0x00010736 4    5            ascii    %4B\n568  0x00010dcc 0x00010dcc 4    5            ascii   4BB@\n569  0x00010ea1 0x00010ea1 4    5            ascii   `(!4\n570  0x0001108f 0x0001108f 5    7            utf8    D$ƂL$\n571  0x000111c3 0x000111c3 4    6            utf8    D$Ƃt\n572  0x000111cd 0x000111cd 4    5            ascii   @8!$\n573  0x0001130b 0x0001130b 4    7            utf8    \\t$繀$\n574  0x00011805 0x00011805 7    8            ascii   @ !*#\\a\\t\n575  0x00011815 0x00011815 7    8            ascii    @!$\\b\\a\\b\n576  0x000119bb 0x000119bb 4    6            utf8    D$ƃx\n577  0x00011c03 0x00011c03 4    7            utf8    ̬D֜<\n578  0x00011c77 0x00011c77 4    8            utf8    \\t$ƃϥ\n579  0x00011cb1 0x00011cb1 4    9            utf16le C\\e\\a\\r\n580  0x00011ea5 0x00011ea5 4    5            ascii   @ !<\n581  0x00011f6f 0x00011f6f 4    6            utf8    ($Ƅ|\n582  0x00012071 0x00012071 4    5            ascii     !<\n583  0x00012109 0x00012109 4    5            ascii   @0!$\n584  0x000121bf 0x000121bf 4    6            utf8    ($ƅP\n585  0x000124dc 0x000124dc 4    6            utf8    $Ɔ <\n586  0x000124e3 0x000124e3 5    7            utf8    D$Ɔd$\n587  0x0001271c 0x0001271c 4    5            ascii   4BSc\n588  0x000129c1 0x000129c1 4    5            ascii   @ !$\n589  0x00012a59 0x00012a59 4    5            ascii     !$\n590  0x00012b49 0x00012b49 4    5            ascii     !\\f\n591  0x00012bf9 0x00012bf9 4    5            ascii   @ !$\n592  0x00012d2d 0x00012d2d 4    5            ascii   @ !'\n593  0x00012e19 0x00012e19 4    5            ascii   @ !\\f\n594  0x000134d1 0x000134d1 4    5            ascii   \\a1@$\n595  0x000134dd 0x000134dd 4    5            ascii   G8#\\f\n596  0x00013521 0x00013521 5    7            utf8    @8!$Ɖ\n597  0x00013569 0x00013569 4    5            ascii   \\a1@$\n598  0x00013575 0x00013575 4    5            ascii   G8#\\f\n599  0x00013597 0x00013597 5    7            utf8    D$Ɖ`$\n600  0x000135b9 0x000135b9 5    7            utf8    @8!$Ɖ\n601  0x00013735 0x00013735 4    5            ascii   `0!$\n602  0x0001373d 0x0001373d 4    5            ascii   \\a9@$\n603  0x00013787 0x00013787 5    7            utf8    D$ƊX$\n604  0x00013aa7 0x00013aa7 4    6            utf8    D$Ƌ`\n605  0x00013b69 0x00013b69 4    5            ascii   @ !$\n606  0x00013caf 0x00013caf 4    5            ascii   \\r4B/\n607  0x00014121 0x00014121 4    5            ascii    (!'\n608  0x00014357 0x00014357 4    6            utf8    \\t$ƍ8\n609  0x0001439f 0x0001439f 4    6            utf8    \\t$ƍl\n610  0x00014503 0x00014503 4    8            utf8    \\t$ƍ쏼\n611  0x0001458f 0x0001458f 4    6            utf8    \\t$Ǝ$\n612  0x000145f7 0x000145f7 4    6            utf8    \\t$Ǝ\\\n613  0x00014715 0x00014715 4    5            ascii   ` !4\n614  0x00014bfd 0x00014bfd 4    5            ascii   D !<\n615  0x00014e31 0x00014e31 5    6            ascii   # !$c\n616  0x000152d5 0x000152d5 4    5            ascii     !\\f\n617  0x0001535d 0x0001535d 4    5            ascii     !\\f\n618  0x000157f5 0x000157f5 5    6            ascii   @(!$D\n619  0x0001580d 0x0001580d 4    5            ascii   `(!&\n620  0x00015909 0x00015909 4    5            ascii   @0!$\n621  0x0001592d 0x0001592d 4    5            ascii    8!$\n622  0x00015d09 0x00015d09 4    5            ascii     !'\n623  0x00015d73 0x00015d73 4    8            utf8    D$Ɛ䏙\n624  0x00015df1 0x00015df1 4    5            ascii   `(!$\n625  0x00015f01 0x00015f01 4    5            ascii   @ !'\n626  0x00015f2f 0x00015f2f 4    9            utf8    D$Ɛ􏙅\n627  0x00015f39 0x00015f39 4    5            ascii   @8!$\n628  0x00016015 0x00016015 4    5            ascii   @0!'\n629  0x000162bf 0x000162bf 5    7            utf8    D$Ƒ`$\n630  0x00016351 0x00016351 4    5            ascii   @0!'\n631  0x00016485 0x00016485 4    5            ascii   ` !<\n632  0x000164c7 0x000164c7 5    7            utf8    D$Ƒ`$\n633  0x00016559 0x00016559 4    5            ascii   @0!'\n634  0x00016611 0x00016611 4    5            ascii   @ !'\n635  0x00016649 0x00016649 4    5            ascii   @8!$\n636  0x00016829 0x00016829 4    5            ascii   @0!<\n637  0x00016b36 0x00016b36 4    5            ascii    !$c\n638  0x00016cb5 0x00016cb5 4    5            ascii   \"(!(\n639  0x0001709d 0x0001709d 5    6            ascii   `P!$\\b\n640  0x000171d9 0x000171d9 4    5            ascii     !4\n641  0x00017415 0x00017415 4    5            ascii   @ !$\n642  0x00017499 0x00017499 4    5            ascii   @ !$\n643  0x000174c5 0x000174c5 4    5            ascii   @(!$\n644  0x000175a4 0x000175a4 4    5            ascii   4BSc\n645  0x0001772c 0x0001772c 4    5            ascii   4BSc\n646  0x000177f1 0x000177f1 4    5            ascii     !$\n647  0x000178a5 0x000178a5 4    5            ascii   @ !$\n648  0x00017bf9 0x00017bf9 4    5            ascii     !4\n649  0x00017c29 0x00017c29 4    5            ascii     !4\n650  0x00017c71 0x00017c71 4    5            ascii     !4\n651  0x0001829d 0x0001829d 4    5            ascii   @ !&\n652  0x000183c2 0x000183c2 4    5            ascii   0!6B\n653  0x0001861d 0x0001861d 4    5            ascii     !&\n654  0x0001864d 0x0001864d 4    5            ascii    (!*\n655  0x00018b36 0x00018b36 4    5            ascii   0!0B\n656  0x00018fb6 0x00018fb6 4    5            ascii   (@$c\n657  0x000192bb 0x000192bb 6    7            ascii   ,4B\\b;4\n658  0x00019422 0x00019422 4    6            utf8    (!$ƕ\n659  0x00019712 0x00019712 4    6            utf8    8!$Ɩ\n660  0x00019895 0x00019895 4    5            ascii   @(!<\n661  0x00019ad1 0x00019ad1 4    5            ascii   @ !<\n662  0x00019d06 0x00019d06 4    6            utf8    8!$Ɩ\n663  0x00019e39 0x00019e39 5    6            ascii     !8f\n664  0x00019f9d 0x00019f9d 4    5            ascii     !$\n665  0x0001a1b1 0x0001a1b1 4    5            ascii   @8!&\n666  0x0001a1b9 0x0001a1b9 5    6            ascii   @8!,I\n667  0x0001a369 0x0001a369 4    9            utf16le d\\e\\a\\r\n668  0x0001a682 0x0001a682 4    5            ascii   (!$b\n669  0x0001a8e7 0x0001a8e7 4    6            utf8    E$Bɸ\n670  0x0001a9c5 0x0001a9c5 4    5            ascii   @0!$\n671  0x0001ab5d 0x0001ab5d 4    5            ascii   ` !<\n672  0x0001ad6f 0x0001ad6f 5    6            ascii   C$Pw@\n673  0x0001b0f2 0x0001b0f2 4    6            utf8    8!$ƭ\n674  0x0001b43f 0x0001b43f 4    5            ascii   C$T>\n675  0x0001b447 0x0001b447 6    7            ascii   C$Sv$<\n676  0x0001b54f 0x0001b54f 5    7            utf8    E$Tɸ$\n677  0x0001b5d9 0x0001b5d9 4    5            ascii     !<\n678  0x0001b71a 0x0001b71a 4    5            ascii   (!&c\n679  0x0001b951 0x0001b951 4    5            ascii   @ !\\f\n680  0x0001bac4 0x0001bac4 5    6            ascii   $E8`<\n681  0x0001bacb 0x0001bacb 6    7            ascii   B$E7p<\n682  0x0001bb7f 0x0001bb7f 5    8            utf8    C$Bi询\n683  0x0001bba1 0x0001bba1 4    5            ascii   @0!'\n684  0x0001bfb6 0x0001bfb6 4    5            ascii    !$B\n685  0x0001c035 0x0001c035 4    5            ascii   @(!<\n686  0x0001c065 0x0001c065 4    5            ascii   @ !<\n687  0x0001c239 0x0001c239 4    5            ascii   @ !\\f\n688  0x0001c247 0x0001c247 4    6            utf8    E$Bɸ\n689  0x0001c3ef 0x0001c3ef 4    5            ascii   C$Rz\n690  0x0001c5e1 0x0001c5e1 4    5            ascii   @ !\\f\n691  0x0001c6bd 0x0001c6bd 4    5            ascii   @ !\\f\n692  0x0001c75f 0x0001c75f 5    6            ascii   B$B&|\n693  0x0001c881 0x0001c881 4    5            ascii   @ !<\n694  0x0001c92e 0x0001c92e 4    5            ascii   p]&R\n695  0x0001c9cd 0x0001c9cd 4    5            ascii   @ !<\n696  0x0001cb61 0x0001cb61 4    5            ascii   @0!\\f\n697  0x0001ced5 0x0001ced5 4    5            ascii     !\\f\n698  0x0001d303 0x0001d303 5    6            ascii   C$Bw@\n699  0x0001d537 0x0001d537 4    6            utf8    E$Bɸ\n700  0x0001d853 0x0001d853 7    9            utf8    E$cɸ$B\\e\n701  0x0001dc05 0x0001dc05 4    5            ascii   `(!\\f\n702  0x0001dc21 0x0001dc21 4    5            ascii   @ !\\b\n703  0x0001dc69 0x0001dc69 4    5            ascii   @ !<\n704  0x0001dc73 0x0001dc73 5    6            ascii   \\b$Dw@\n705  0x0001dd61 0x0001dd61 4    5            ascii   @ !\\f\n706  0x0001e20d 0x0001e20d 4    5            ascii   2 #\\f\n707  0x0001e233 0x0001e233 7    8            ascii   C$cw@$D\n708  0x0001e6a9 0x0001e6a9 4    5            ascii   @0!\\f\n709  0x0001e8af 0x0001e8af 4    6            utf8    E$Cɸ\n710  0x0001e99b 0x0001e99b 4    5            ascii   E$B\\e\n711  0x0001e9c5 0x0001e9c5 4    5            ascii   @ !$\n712  0x0001ea2b 0x0001ea2b 5    6            ascii   B$B5X\n713  0x0001ea43 0x0001ea43 4    5            ascii   B$B8\n714  0x0001ea5b 0x0001ea5b 5    6            ascii   B$B8`\n715  0x0001ea67 0x0001ea67 5    6            ascii   B$B7p\n716  0x0001ede9 0x0001ede9 4    5            ascii   @ !\\f\n717  0x0001edf5 0x0001edf5 4    5            ascii   @ !\\f\n718  0x0001f0f1 0x0001f0f1 4    5            ascii   `(!\\f\n719  0x0001f221 0x0001f221 4    5            ascii   @(!4\n720  0x0001f2d1 0x0001f2d1 4    5            ascii   @ !<\n721  0x0001f377 0x0001f377 4    6            utf8    E$Bɸ\n722  0x0001f44d 0x0001f44d 4    5            ascii   @ !\\f\n723  0x0001f574 0x0001f574 4    5            ascii   $Dw@\n724  0x0001f621 0x0001f621 4    5            ascii   @(!\\f\n725  0x0001f70d 0x0001f70d 4    5            ascii   @ !\\f\n726  0x0001f771 0x0001f771 4    5            ascii    0!&\n727  0x0001f815 0x0001f815 4    5            ascii   @ !\\f\n728  0x0001f8bd 0x0001f8bd 4    5            ascii   @ !\\f\n729  0x0001f8f5 0x0001f8f5 4    5            ascii   ` !$\n730  0x0001fbc5 0x0001fbc5 5    6            ascii   @ !:f\n731  0x0001fbd9 0x0001fbd9 5    6            ascii   F0$&%\n732  0x0001fc8a 0x0001fc8a 4    6            utf8    8!$ƭ\n733  0x0001fc99 0x0001fc99 4    5            ascii   @ !\\f\n734  0x0001ff8d 0x0001ff8d 4    5            ascii     !\\f\n735  0x00020321 0x00020321 4    5            ascii   @0!<\n736  0x000203ad 0x000203ad 4    5            ascii     !\\f\n737  0x0002050e 0x0002050e 4    5            ascii   x &R\n738  0x0002059b 0x0002059b 5    7            utf8    E$Rɸ$\n739  0x0002061f 0x0002061f 4    5            ascii   \\b$B\\e\n740  0x000206a3 0x000206a3 4    5            ascii   E$B\\e\n741  0x0002072f 0x0002072f 4    5            ascii   E$B\\e\n742  0x00020777 0x00020777 4    5            ascii   E$B\\e\n743  0x0002081b 0x0002081b 5    7            utf8    `&Wɸ$\n744  0x00020a5b 0x00020a5b 4    6            utf8    E$cɸ\n745  0x00020a67 0x00020a67 4    5            ascii   E$c\\e\n746  0x00020beb 0x00020beb 4    5            ascii   E$W\\e\n747  0x00020c0f 0x00020c0f 4    6            utf8    E$Bɸ\n748  0x00020cc2 0x00020cc2 4    5            ascii   (!$d\n749  0x00020d93 0x00020d93 4    6            utf8    Ԡ`\\b3\n750  0x00020f7d 0x00020f7d 4    5            ascii    (!\\f\n751  0x00021019 0x00021019 4    5            ascii   @ !<\n752  0x0002101f 0x0002101f 4    6            utf8    E$Bɸ\n753  0x0002106d 0x0002106d 4    5            ascii   @ !$\n754  0x000210f3 0x000210f3 4    6            utf8    E$Bɸ\n755  0x000211cb 0x000211cb 4    5            ascii   E$c\\e\n756  0x00021251 0x00021251 4    5            ascii   @ !<\n757  0x000213b3 0x000213b3 4    7            utf8    ݬDɸ<\n758  0x0002140f 0x0002140f 4    6            utf8    E$Dɸ\n759  0x0002141b 0x0002141b 4    5            ascii   E$B\\e\n760  0x00021595 0x00021595 4    5            ascii   @ !\\f\n761  0x000215d1 0x000215d1 4    5            ascii     !\\f\n762  0x00021929 0x00021929 4    5            ascii   @ !<\n763  0x00021d01 0x00021d01 4    5            ascii   @ !\\f\n764  0x00022029 0x00022029 4    5            ascii   @ !\\f\n765  0x00022035 0x00022035 4    5            ascii   @ !$\n766  0x000222e5 0x000222e5 4    5            ascii   @ !\\f\n767  0x000224b5 0x000224b5 4    5            ascii   @ !\\f\n768  0x000224d5 0x000224d5 4    5            ascii   @ !\\f\n769  0x00022631 0x00022631 4    5            ascii   @ !\\f\n770  0x0002266d 0x0002266d 4    5            ascii   @ !$\n771  0x00022764 0x00022764 4    6            utf8    $Pɸ\\f\n772  0x0002284b 0x0002284b 4    6            utf8    <$eɸ\n773  0x00022917 0x00022917 4    6            utf8    E$Pɸ\n774  0x00022bf9 0x00022bf9 4    5            ascii   @ !<\n775  0x00022c55 0x00022c55 4    5            ascii   @ !<\n776  0x00022cb7 0x00022cb7 4    7            utf8    D$ƭ̏\n777  0x00022cc1 0x00022cc1 5    6            ascii   @8!&$\n778  0x00022d59 0x00022d59 4    5            ascii   @ !<\n779  0x00022d85 0x00022d85 4    5            ascii   @ !$\n780  0x00022ded 0x00022ded 4    5            ascii   @ !$\n781  0x00022e53 0x00022e53 6    7            ascii   B$P5X<\n782  0x00022e5b 0x00022e5b 5    6            ascii   C$^w@\n783  0x00022eb2 0x00022eb2 4    5            ascii   (!&s\n784  0x00022fcf 0x00022fcf 5    6            ascii   B$B5X\n785  0x0002306f 0x0002306f 5    6            ascii   \\b$P5X\n786  0x00023087 0x00023087 5    6            ascii   B$P5X\n787  0x000230a3 0x000230a3 4    5            ascii   E$B\\e\n788  0x000231b5 0x000231b5 4    5            ascii   @ !<\n789  0x000231c5 0x000231c5 4    5            ascii   ` !$\n790  0x00023201 0x00023201 4    5            ascii   @ !<\n791  0x00023211 0x00023211 4    5            ascii   ` !$\n792  0x00023335 0x00023335 4    5            ascii     !\\f\n793  0x00023343 0x00023343 5    7            utf8    E$Vɸ<\n794  0x0002334b 0x0002334b 4    5            ascii   E$U\\e\n795  0x000234a9 0x000234a9 4    5            ascii   @ !<\n796  0x00023509 0x00023509 4    5            ascii     !<\n797  0x000246a1 0x000246a1 5    6            ascii     !&%\n798  0x00024b29 0x00024b29 5    6            ascii   C !$\\b\n799  0x00024d99 0x00024d99 4    5            ascii   @ !$\n800  0x00024f01 0x00024f01 4    5            ascii   @(!'\n801  0x00024fb1 0x00024fb1 4    5            ascii   @0!4\n802  0x000250ed 0x000250ed 4    5            ascii     !\\f\n803  0x000255cd 0x000255cd 4    5            ascii   ` !<\n804  0x0002566d 0x0002566d 4    5            ascii   `(!4\n805  0x00025a5a 0x00025a5a 4    5            ascii    !&%\n806  0x000265bd 0x000265bd 4    5            ascii   \"0!$\n807  0x00026825 0x00026825 4    5            ascii   @(!$\n808  0x00026961 0x00026961 5    6            ascii   @(!0B\n809  0x000269b3 0x000269b3 4    6            utf8    \\t$Ɵx\n810  0x00026ae3 0x00026ae3 4    5            ascii   C$Vz\n811  0x00026e4f 0x00026e4f 5    7            utf8    E$^ʈ<\n812  0x00027067 0x00027067 4    5            ascii   E$b2\n813  0x00027285 0x00027285 4    5            ascii   3 !$\n814  0x000272b5 0x000272b5 4    5            ascii   2 !$\n815  0x000272f6 0x000272f6 4    5            ascii   \"T&b\n816  0x0002745d 0x0002745d 4    5            ascii     !$\n817  0x0002766a 0x0002766a 4    7            utf8    ʸ$ơ\\b\n818  0x000276ce 0x000276ce 4    5            ascii    !,B\n819  0x000277ef 0x000277ef 4    5            ascii   P$^2\n820  0x0002792a 0x0002792a 5    7            utf8    2X&Gʸ\n821  0x00027946 0x00027946 5    7            utf8    2X&Gʸ\n822  0x000279d6 0x000279d6 6    7            ascii   AN6DEG\n823  0x00027a3d 0x00027a3d 4    5            ascii   \"\"T<\n824  0x00027a83 0x00027a83 6    7            ascii   \\b6DEG$\n825  0x00027ad0 0x00027ad0 4    5            ascii   6DEG\n826  0x00027cf5 0x00027cf5 5    6            ascii   `(!$F\n827  0x00027f21 0x00027f21 4    5            ascii   C !&\n828  0x000285e9 0x000285e9 4    5            ascii   @(!\\f\n829  0x00028a2f 0x00028a2f 4    5            ascii   C$Vg\n830  0x00028a37 0x00028a37 4    5            ascii   C$Ug\n831  0x00028ea1 0x00028ea1 4    5            ascii   @ !$\n832  0x00029152 0x00029152 4    5            ascii   0!$\\a\n833  0x00029301 0x00029301 4    5            ascii     !&\n834  0x000294cd 0x000294cd 5    6            ascii   ` !,B\n835  0x0002965f 0x0002965f 5    6            ascii   C$Qw@\n836  0x000296d4 0x000296d4 6    7            ascii   $Gw@$G\n837  0x000296e9 0x000296e9 4    5            ascii    0!$\n838  0x000297a6 0x000297a6 7    16           utf8    \\n쯠\\n诤\\n䯠\\n\n839  0x00029ad5 0x00029ad5 4    5            ascii   @ !$\n840  0x00029b01 0x00029b01 5    6            ascii   @ !$e\n841  0x00029bc1 0x00029bc1 4    5            ascii     !$\n842  0x00029db8 0x00029db8 5    6            ascii   $Ew@<\n843  0x0002a0ff 0x0002a0ff 4    5            ascii   E$s2\n844  0x0002a4bd 0x0002a4bd 4    5            ascii   @ !$\n845  0x0002a4c7 0x0002a4c7 4    6            utf8    \\t$ƒ|\n846  0x0002aa9f 0x0002aa9f 4    5            ascii   !$Ug\n847  0x0002ac7d 0x0002ac7d 4    5            ascii    (!4\n848  0x0002b095 0x0002b095 4    5            ascii    (!&\n849  0x0002b22b 0x0002b22b 5    6            ascii   C$Qw@\n850  0x0002b26c 0x0002b26c 5    6            ascii   $Gw@<\n851  0x0002b273 0x0002b273 4    5            ascii   C$Gk\n852  0x0002b285 0x0002b285 4    5            ascii    0!'\n853  0x0002b305 0x0002b305 4    5            ascii   Q0#$\n854  0x0002c26d 0x0002c26d 4    5            ascii   @(!<\n855  0x0002c5ab 0x0002c5ab 6    7            ascii   E$P44<\n856  0x0002c5bf 0x0002c5bf 5    6            ascii   !$R4d\n857  0x0002c5eb 0x0002c5eb 5    6            ascii   E$B44\n858  0x0002c855 0x0002c855 5    6            ascii   `(!$D\n859  0x0002c87b 0x0002c87b 5    6            ascii   E$C5,\n860  0x0002ce9d 0x0002ce9d 4    5            ascii   @0!$\n861  0x0002d021 0x0002d021 4    5            ascii   Q !<\n862  0x0002d34e 0x0002d34e 4    5            ascii   @!$K\n863  0x0002d35a 0x0002d35a 4    5            ascii   h!$\\t\n864  0x0002d59b 0x0002d59b 4    5            ascii    0B@\n865  0x0002db39 0x0002db39 4    5            ascii   Q5,<\n866  0x0002db43 0x0002db43 4    5            ascii   \\b$R3\n867  0x0002e06d 0x0002e06d 4    5            ascii     !$\n868  0x0002e09d 0x0002e09d 4    5            ascii     !$\n869  0x0002e20b 0x0002e20b 5    6            ascii   E$H5@\n870  0x0002e211 0x0002e211 4    5            ascii   C5@<\n871  0x0002e21e 0x0002e21e 4    5            ascii   8!$\\n\n872  0x0002e2ab 0x0002e2ab 6    7            ascii   \\b$B5@<\n873  0x0002e4be 0x0002e4be 4    5            ascii   0$&1\n874  0x0002e4f5 0x0002e4f5 4    5            ascii   C $0\n875  0x0002e582 0x0002e582 4    5            ascii    %&1\n876  0x0002e94b 0x0002e94b 4    5            ascii   C$Uk\n877  0x0002ec39 0x0002ec39 5    6            ascii   @ !$E\n878  0x0002ee35 0x0002ee35 4    5            ascii   ` !'\n879  0x0002ee99 0x0002ee99 4    5            ascii   @ !$\n880  0x0002f15d 0x0002f15d 4    5            ascii   @ !\\f\n881  0x0002f425 0x0002f425 4    5            ascii   @0!$\n882  0x0002f44b 0x0002f44b 4    5            ascii   C$Bi\n883  0x0002fad1 0x0002fad1 4    5            ascii   @ !'\n884  0x0002fd13 0x0002fd13 5    6            ascii   C$Pw@\n885  0x0002fdaf 0x0002fdaf 5    6            ascii   C$Qw@\n886  0x000307da 0x000307da 4    5            ascii   P!$\\t\n887  0x000309a7 0x000309a7 4    5            ascii   <$B\\b\n888  0x00030a2b 0x00030a2b 4    5            ascii   E$B5\n889  0x00030f59 0x00030f59 4    5            ascii   ` !'\n890  0x0003123e 0x0003123e 5    7            utf8    (!$Ƶ\n891  0x00031491 0x00031491 4    9            utf16le C\\e\\a\\r\n892  0x00031691 0x00031691 4    9            utf16le G\\e\\a\\r\n893  0x0003222e 0x0003222e 4    5            ascii   (B%\\b\n894  0x00032261 0x00032261 4    5            ascii   \\tH@$\n895  0x000322bd 0x000322bd 4    5            ascii   e(!$\n896  0x0003244e 0x0003244e 4    5            ascii   P!$d\n897  0x00032472 0x00032472 4    5            ascii   h!<\\f\n898  0x000324f6 0x000324f6 4    5            ascii   p@1c\n899  0x0003251d 0x0003251d 4    5            ascii   jP!$\n900  0x00032ab5 0x00032ab5 4    5            ascii   58%0\n901  0x00032ae1 0x00032ae1 4    5            ascii   `0!<\n902  0x00032af2 0x00032af2 4    5            ascii   @!$\\b\n903  0x00032b97 0x00032b97 4    5            ascii   !$\\b\\a\n904  0x00032c39 0x00032c39 4    5            ascii   D %$\n905  0x00033d60 0x00033d60 16   17           ascii   applet not found\n906  0x00033d74 0x00033d74 343  344          ascii   %s\\n\\nUsage: busybox [function] [arguments]...\\n   or: [function] [arguments]...\\n\\n\\tBusyBox is a multi-call binary that combines many common Unix\\n\\tutilities into a single executable.  Most people will create a\\n\\tlink to busybox for each function they wish to use and BusyBox\\n\\twill act like whatever it was invoked as!\\n\\nCurrently defined functions:\\n\n907  0x00033ecc 0x00033ecc 4    5            ascii   %s%s\n908  0x00033ed4 0x00033ed4 24   25           ascii   %s\\n\\nNo help available.\\n\\n\n909  0x00033ef0 0x00033ef0 18   19           ascii   %s\\n\\nUsage: %s %s\\n\\n\n910  0x00033f04 0x00033f04 6    7            ascii   --help\n911  0x00033f0c 0x00033f0c 7    8            ascii   busybox\n912  0x00033f14 0x00033f14 38   39           ascii   This applet requires root priviledges!\n913  0x00033f40 0x00033f40 6    7            ascii   arping\n914  0x00033f48 0x00033f48 5    6            ascii   brctl\n915  0x00033f54 0x00033f54 5    6            ascii   chmod\n916  0x00033f5c 0x00033f5c 4    5            ascii   date\n917  0x00033f68 0x00033f68 4    5            ascii   echo\n918  0x00033f70 0x00033f70 5    6            ascii   false\n919  0x00033f78 0x00033f78 5    6            ascii   getty\n920  0x00033f80 0x00033f80 8    9            ascii   ifconfig\n921  0x00033f8c 0x00033f8c 4    5            ascii   init\n922  0x00033f94 0x00033f94 6    7            ascii   insmod\n923  0x00033f9c 0x00033f9c 4    5            ascii   kill\n924  0x00033fa4 0x00033fa4 5    6            ascii   klogd\n925  0x00033fac 0x00033fac 7    8            ascii   linuxrc\n926  0x00033fb4 0x00033fb4 6    7            ascii   logger\n927  0x00033fbc 0x00033fbc 5    6            ascii   login\n928  0x00033fc4 0x00033fc4 7    8            ascii   logread\n929  0x00033fd0 0x00033fd0 5    6            ascii   lsmod\n930  0x00033fd8 0x00033fd8 5    6            ascii   mount\n931  0x00033fe4 0x00033fe4 4    5            ascii   ping\n932  0x00033ff0 0x00033ff0 6    7            ascii   reboot\n933  0x00033ffc 0x00033ffc 5    6            ascii   rmmod\n934  0x00034004 0x00034004 5    6            ascii   route\n935  0x00034010 0x00034010 7    8            ascii   syslogd\n936  0x00034018 0x00034018 4    5            ascii   test\n937  0x00034020 0x00034020 4    5            ascii   tftp\n938  0x00034028 0x00034028 4    5            ascii   true\n939  0x00034030 0x00034030 6    7            ascii   udhcpc\n940  0x00034038 0x00034038 6    7            ascii   udhcpd\n941  0x00034040 0x00034040 6    7            ascii   umount\n942  0x00034048 0x00034048 7    8            ascii   vconfig\n943  0x00034052 0x00034052 572  573          ascii   [-fqbDUA] [-c count] [-w timeout] [-I device] [-s sender] target\\n\\n\\nPing hosts by ARP requests/replies.\\n\\nOptions:\\n\\t-f\\t\\tQuit on first ARP reply\\n\\t-q\\t\\tBe quiet\\n\\t-b\\t\\tKeep broadcasting, don't go unicast\\n\\t-D\\t\\tDuplicated address detection mode\\n\\t-U\\t\\tUnsolicited ARP mode, update your neighbours\\n\\t-A\\t\\tARP answer mode, update your neighbours\\n\\t-c count\\tStop after sending count ARP request packets\\n\\t-w timeout\\tTime to wait for ARP reply, in seconds\\n\\t-I device\\tOutgoing interface name, default is eth0\\n\\t-s sender\\tSet specific sender IP address\\n\\ttarget\\t\\tTarget IP address of ARP request\n944  0x0003428f 0x0003428f 798  799          ascii   COMMAND [OPTIONS]\\n\\nCreate, delete and configue ethernet bridge.\\n\\nCommands:\\n\\taddbr\\t\\t<bridge>\\t\\tadd bridge\\n\\taddif\\t\\t<bridge> <device>\\tadd interface to bridge\\n\\tdelbr\\t\\t<bridge>\\t\\tdelete bridge\\n\\tdelif\\t\\t<bridge> <device>\\tdelete interface from bridge\\n\\tshow\\t\\t\\t\\t\\tshow a list of bridges\\n\\tshowmacs\\t<bridge>\\t\\tshow a list of mac addrs\\n\\tshowstp\\t\\t<bridge>\\t\\tshow bridge stp info\\n\\tsetageing\\t<bridge> <time>\\t\\tset ageing time\\n\\tsetbridgeprio\\t<bridge> <prio>\\t\\tset bridge priority\\n\\tsetfd\\t\\t<bridge> <time>\\t\\tset bridge forward delay\\n\\tsetgcint\\t<bridge> <time>\\t\\tset garbage collection interval\\n\\tsethello\\t<bridge> <time>\\t\\tset hello time\\n\\tsetmaxage\\t<bridge> <time>\\t\\tset max message age\\n\\tsetpathcost\\t<bridge> <port> <cost>\\tset path cost\\n\\tsetportprio\\t<bridge> <port> <prio>\\tset port priority\\n\\tstp\\t\\t<bridge> <state>\\tturn stp on/off\\n\n945  0x000345b0 0x000345b0 121  122          ascii   [-u] [FILE]...\\n\\nConcatenates FILE(s) and prints them to stdout.\\n\\nOptions:\\n\\t-u\\tignored since unbuffered i/o is always used\n946  0x0003462a 0x0003462a 192  193          ascii   [-R] MODE[,MODE]... FILE...\\n\\nEach MODE is one or more of the letters ugoa, one of the\\nsymbols +-= and one or more of the letters rwxst.\\n\\nOptions:\\n\\t-R\\tChanges files and directories recursively.\n947  0x000346eb 0x000346eb 363  364          ascii   [OPTION]... [MMDDhhmm[[CC]YY][.ss]] [+FORMAT]\\n\\nDisplays the current time in the given FORMAT, or sets the system date.\\n\\nOptions:\\n\\t-R\\t\\tOutputs RFC-822 compliant date string\\n\\t-d STRING\\tDisplays time described by STRING, not `now'\\n\\t-s\\t\\tSets time described by STRING\\n\\t-r FILE\\t\\tDisplays the last modification time of FILE\\n\\t-u\\t\\tPrints or sets Coordinated Universal Time\n948  0x00034857 0x00034857 130  131          ascii   [-k] [FILESYSTEM ...]\\n\\nPrint the filesystem space used and space available.\\n\\nOptions:\\n\\n\\t-k\\tprint sizes in kilobytes(compatibility)\n949  0x000348da 0x000348da 48   49           ascii   [ARG ...]\\n\\nPrints the specified ARGs to stdout\\n\\n\n950  0x0003490b 0x0003490b 35   36           ascii   \\n\\nReturn an exit code of FALSE (1).\n951  0x0003492f 0x0003492f 717  718          ascii   [OPTIONS]... baud_rate,... line [termtype]\\n\\nOpens a tty, prompts for a login name, then invokes /bin/login\\n\\nOptions:\\n\\t-h\\t\\tEnable hardware (RTS/CTS) flow control.\\n\\t-i\\t\\tDo not display /etc/issue before running login.\\n\\t-L\\t\\tLocal line, so do not do carrier detect.\\n\\t-m\\t\\tGet baud rate from modem's CONNECT status message.\\n\\t-w\\t\\tWait for a CR or LF before sending /etc/issue.\\n\\t-n\\t\\tDo not prompt the user for a login name.\\n\\t-f issue_file\\tDisplay issue_file instead of /etc/issue.\\n\\t-l login_app\\tInvoke login_app instead of /bin/login.\\n\\t-t timeout\\tTerminate after timeout if no username is read.\\n\\t-I initstring\\tSets the init string to send before anything else.\\n\\t-H login_host\\tLog login_host into the utmp file as the hostname.\n952  0x00034bfd 0x00034bfd 333  334          ascii   [-a] <interface> [<address>]\\n\\nconfigure a network interface\\n\\nOptions:\\n\\t[[-]broadcast [<address>]]  [[-]pointopoint [<address>]]\\n\\t[netmask <address>]  [dstaddr <address>]\\n\\t[hw ether <address>]  [metric <NN>]  [mtu <NN>]\\n\\t[[-]trailers]  [[-]arp]  [[-]allmulti]\\n\\t[multicast]  [[-]promisc]  [txqueuelen <NN>]  [[-]dynamic]\\n\\t[up|down] ...\n953  0x00034d4b 0x00034d4b 38   39           ascii   \\n\\nInit is the parent of all processes.\n954  0x00034d72 0x00034d72 342  343          ascii   [OPTION]... MODULE [symbol=value]...\\n\\nLoads the specified kernel modules into the kernel.\\n\\nOptions:\\n\\t-f\\tForce module to load into the wrong kernel version.\\n\\t-k\\tMake module autoclean-able.\\n\\t-v\\tverbose output\\n\\t-q\\tquiet output\\n\\t-L\\tLock to prevent simultaneous loads of a module\\n\\t-o NAME\\tSet internal module name to NAME\\n\\t-x\\tdo not export externs\n955  0x00034ec9 0x00034ec9 152  153          ascii   [-signal] process-id [process-id ...]\\n\\nSend a signal (default is SIGTERM) to the specified process(es).\\n\\nOptions:\\n\\t-l\\tList all signal names and numbers.\n956  0x00034f62 0x00034f62 128  129          ascii   [-c n] [-n]\\n\\nKernel logger.\\nOptions:\\n\\t-c n\\tSets the default log level of console messages to n.\\n\\t-n\\tRun as a foreground process.\n957  0x00034fe5 0x00034fe5 320  321          ascii   [OPTION]... [MESSAGE]\\n\\nWrite MESSAGE to the system log.  If MESSAGE is omitted, log stdin.\\n\\nOptions:\\n\\t-s\\tLog to stderr as well as the system log.\\n\\t-t TAG\\tLog using the specified tag (defaults to user name).\\n\\t-p PRIORITY\\tEnter the message with the specified priority.\\n\\t\\tThis may be numerical or a ``facility.level'' pair.\n958  0x00035126 0x00035126 204  205          ascii   [OPTION]... [username] [ENV=VAR ...]\\n\\nBegin a new session on the system\\n\\nOptions:\\n\\t-f\\tDo not authenticate (user already authenticated)\\n\\t-h\\tName of the remote host for this login.\\n\\t-p\\tPreserve environment.\n959  0x000351f3 0x000351f3 113  114          ascii   [OPTION]...\\n\\nShows the messages from syslogd (using circular buffer).\\n\\nOptions:\\n\\t-f\\t\\toutput data as the log grows\n960  0x00035265 0x00035265 861  862          ascii   [-1AacCdeilnLrSsTtuvwxXk] [filenames...]\\n\\nList directory contents\\n\\nOptions:\\n\\t-1\\tlist files in a single column\\n\\t-A\\tdo not list implied . and ..\\n\\t-a\\tdo not hide entries starting with .\\n\\t-C\\tlist entries by columns\\n\\t-c\\twith -l: show ctime\\n\\t-d\\tlist directory entries instead of contents\\n\\t-e\\tlist both full date and full time\\n\\t-i\\tlist the i-node for each file\\n\\t-l\\tuse a long listing format\\n\\t-n\\tlist numeric UIDs and GIDs instead of names\\n\\t-L\\tlist entries pointed to by symbolic links\\n\\t-r\\tsort the listing in reverse order\\n\\t-S\\tsort the listing by file size\\n\\t-s\\tlist the size of each file, in blocks\\n\\t-T NUM\\tassume Tabstop every NUM columns\\n\\t-t\\twith -l: show modification time\\n\\t-u\\twith -l: show access time\\n\\t-v\\tsort the listing by version\\n\\t-w NUM\\tassume the terminal is NUM columns wide\\n\\t-x\\tlist entries by lines instead of by columns\\n\\t-X\\tsort the listing by extension\\n\n961  0x000355c3 0x000355c3 43   44           ascii   \\n\\nList the currently loaded kernel modules.\n962  0x000355ef 0x000355ef 1002 1003         ascii   [flags] DEVICE NODE [-o options,more-options]\\n\\nMount a filesystem.  Autodetection of filesystem type requires the\\n/proc filesystem be already mounted.\\n\\nFlags:\\n\\t-a:\\t\\tMount all filesystems in fstab.\\n\\t-o option:\\tOne of many filesystem options, listed below.\\n\\t-r:\\t\\tMount the filesystem read-only.\\n\\t-t fs-type:\\tSpecify the filesystem type.\\n\\t-w:\\t\\tMount for reading and writing (default).\\n\\nOptions for use with the \"-o\" flag:\\n\\tasync/sync:\\tWrites are asynchronous / synchronous.\\n\\tatime/noatime:\\tEnable / disable updates to inode access times.\\n\\tdev/nodev:\\tAllow use of special device files / disallow them.\\n\\texec/noexec:\\tAllow use of executable files / disallow them.\\n\\tsuid/nosuid:\\tAllow set-user-id-root programs / disallow them.\\n\\tremount:\\tRe-mount a mounted filesystem, changing its flags.\\n\\tro/rw:\\t\\tMount for read-only / read-write.\\n\\tbind:\\t\\tUse the linux 2.4.x \"bind\" feature.\\n\\nThere are EVEN MORE flags that are specific to each filesystem.\\nYou'll have to see the written documentation for those filesystems.\n963  0x000359dc 0x000359dc 234  235          ascii   [OPTION]... host\\n\\nSend ICMP ECHO_REQUEST packets to network hosts.\\n\\nOptions:\\n\\t-c COUNT\\tSend only COUNT pings.\\n\\t-s SIZE\\t\\tSend SIZE data bytes in packets (default=56).\\n\\t-q\\t\\tQuiet mode, only displays output at start\\n\\t\\t\\tand when finished.\n964  0x00035ac7 0x00035ac7 64   65           ascii   \\n\\nReport process status\\n\\n\\tThis version of ps accepts no options.\n965  0x00035b08 0x00035b08 75   76           ascii   [-d<delay>]\\n\\nReboot the system.\\nOptions:\\n\\t-d\\t\\tdelay interval for rebooting.\n966  0x00035b54 0x00035b54 292  293          ascii   [OPTION]... FILE...\\n\\nRemove (unlink) the FILE(s).  You may use '--' to\\nindicate that all following arguments are non-options.\\n\\nOptions:\\n\\t-i\\t\\talways prompt before removing each destination\\n\\t-f\\t\\tremove existing destinations, never prompt\\n\\t-r or -R\\tremove the contents of directories recursively\n967  0x00035c79 0x00035c79 132  133          ascii   [OPTION]... [MODULE]...\\n\\nUnloads the specified kernel modules from the kernel.\\n\\nOptions:\\n\\t-a\\tRemove all unused modules (recursively)\n968  0x00035cfe 0x00035cfe 158  159          ascii   [{add|del|delete}]\\n\\nEdit the kernel's routing tables.\\n\\nOptions:\\n\\t-n\\t\\tDont resolve names.\\n\\t-e\\t\\tDisplay other/more information.\\n\\t-A inet\\t\\tSelect address family.\n969  0x00035d9f 0x00035d9f 519  520          ascii   [OPTION]...\\n\\nLinux system and kernel logging utility.\\nNote that this version of syslogd ignores /etc/syslog.conf.\\n\\nOptions:\\n\\t-m MIN\\t\\tMinutes between MARK lines (default=20, 0=off)\\n\\t-n\\t\\tRun as a foreground process\\n\\t-O FILE\\t\\tUse an alternate log file (default=/var/log/messages)\\n\\t-S\\t\\tMake logging output smaller.\\n\\t-R HOST[:PORT]\\tLog to IP or hostname on PORT (default PORT=514/UDP)\\n\\t-L\\t\\tLog locally and via network logging (default is network only)\\n\\t-C [size(KiB)]\\tLog to a circular buffer (read the buffer using logread)\n970  0x00035fa7 0x00035fa7 133  134          ascii   EXPRESSION\\n  or   [ EXPRESSION ]\\n\\nChecks file types and compares values returning an exit\\ncode determined by the value of EXPRESSION.\n971  0x0003602d 0x0003602d 164  165          ascii   [OPTION]... HOST [PORT]\\n\\nTransfers a file from/to a tftp server using \"octet\" mode.\\n\\nOptions:\\n\\t-l FILE\\tLocal FILE.\\n\\t-r FILE\\tRemote FILE.\\n\\t-g\\tGet file.\\n\\t-p\\tPut file.\n972  0x000360d2 0x000360d2 34   35           ascii   \\n\\nReturn an exit code of TRUE (0).\n973  0x000360f5 0x000360f5 798  799          ascii   [-Cfbnqv] [-c CLIENTID] [-H HOSTNAME] [-i INTERFACE]\\n[-p pidfile] [-r IP] [-s script]\\n\\n\\t-c,\\t--clientid=CLIENTID\\tSet client identifier\\n\\t-C,\\t--clientid-none\\tSuppress default client identifier\\n\\t-H,\\t--hostname=HOSTNAME\\tClient hostname\\n\\t-h,\\t                   \\tAlias for -H\\n\\t-f,\\t--foreground\\tDo not fork after getting lease\\n\\t-b,\\t--background\\tFork to background if lease cannot be immediately negotiated.\\n\\t-i,\\t--interface=INTERFACE\\tInterface to use (default: eth0)\\n\\t-n,\\t--now\\tExit with failure if lease cannot be immediately negotiated.\\n\\t-p,\\t--pidfile=file\\tStore process ID of daemon in file\\n\\t-q,\\t--quit\\tQuit after obtaining lease\\n\\t-r,\\t--request=IP\\tIP address to request (default: none)\\n\\t-s,\\t--script=file\\tRun file at dhcp events (default: /usr/share/udhcpc/default.script)\\n\\t-v,\\t--version\\tDisplay version\n974  0x00036414 0x00036414 15   16           ascii   [configfile]\\n\\n\\n\n975  0x00036424 0x00036424 192  193          ascii   [flags] FILESYSTEM|DIRECTORY\\n\\nUnmount file systems\\n\\nFlags:\\n\\t-a\\tUnmount all file systems\\n\\t-r\\tTry to remount devices as read-only if mount is busy\\n\\t-f\\tForce umount (i.e., unreachable NFS server)\n976  0x000364e5 0x000364e5 378  379          ascii   COMMAND [OPTIONS] ...\\n\\nvconfig lets you create and remove virtual ethernet devices.\\n\\nOptions:\\n\\tadd             [interface-name] [vlan_id]\\n\\trem             [vlan-name]\\n\\tset_flag        [interface-name] [flag-num]       [0 | 1]\\n\\tset_egress_map  [vlan-name]      [skb_priority]   [vlan_qos]\\n\\tset_ingress_map [vlan-name]      [skb_priority]   [vlan_qos]\\n\\tset_name_type   [name-type]\n977  0x00036670 0x00036670 16   17           ascii   invalid mode: %s\n978  0x00036684 0x00036684 9    10           ascii   d~ds:s~ds\n979  0x00036690 0x00036690 8    9            ascii   Rs:ud:r:\n980  0x0003669c 0x0003669c 7    8            ascii   TZ=UTC0\n981  0x000366a4 0x000366a4 21   22           ascii   File '%s' not found.\\n\n982  0x000366bc 0x000366bc 8    9            ascii   %d:%d:%d\n983  0x000366c8 0x000366c8 14   15           ascii   %d.%d-%d:%d:%d\n984  0x000366d8 0x000366d8 11   12           ascii   %d.%d-%d:%d\n985  0x000366e4 0x000366e4 17   18           ascii   %d.%d.%d-%d:%d:%d\n986  0x000366f8 0x000366f8 14   15           ascii   %d.%d.%d-%d:%d\n987  0x00036708 0x00036708 14   15           ascii   %2d%2d%2d%2d%d\n988  0x0003671c 0x0003671c 15   16           ascii   cannot set date\n989  0x0003672c 0x0003672c 23   24           ascii   %a %b %e %H:%M:%S %Z %Y\n990  0x00036744 0x00036744 24   25           ascii   %a, %d %b %Y %H:%M:%S %z\n991  0x00036760 0x00036760 25   26           ascii   %a, %d %b %Y %H:%M:%S GMT\n992  0x00036780 0x00036780 17   18           ascii   %Y.%m.%d-%H:%M:%S\n993  0x00036794 0x00036794 51   52           ascii   Filesystem%11s%-15sUsed Available Use%% Mounted on\\n\n994  0x000367c8 0x000367c8 27   28           ascii   %s: can't find mount point.\n995  0x000367e4 0x000367e4 6    7            ascii   rootfs\n996  0x000367ec 0x000367ec 9    10           ascii   /dev/root\n997  0x000367f8 0x000367f8 30   31           ascii   %-21s%9ld %9ld %9ld %3ld%% %s\\n\n998  0x00036820 0x00036820 9    10           ascii   1k-blocks\n999  0x00036830 0x00036830 5    6            ascii   %7ld\n1000 0x00036838 0x00036838 6    7            ascii   %4lld\n1001 0x00036840 0x00036840 6    7            ascii   %-10s\n1002 0x00036848 0x00036848 5    6            ascii   %4ld\n1003 0x00036850 0x00036850 9    10           ascii   %-8d %-8d\n1004 0x0003685c 0x0003685c 9    10           ascii   %4d, %3d\n1005 0x00036868 0x00036868 6    7            ascii   %9lld\n1006 0x00036870 0x00036870 8    9            ascii   %24.24s\n1007 0x0003687c 0x0003687c 6    7            ascii   %6.6s\n1008 0x00036884 0x00036884 6    7            ascii   %5.5s\n1009 0x0003688c 0x0003688c 7    8            ascii    %4.4s\n1010 0x00036894 0x00036894 4    5            ascii    ->\n1011 0x0003689c 0x0003689c 4    5            ascii   %s:\\n\n1012 0x000368b0 0x000368b0 25   26           ascii   Cadil1gnsxAkcetuSXrvLT:w:\n1013 0x00036930 0x00036930 7    8            ascii   f-i:i-f\n1014 0x00036938 0x00036938 4    5            ascii   fiRr\n1015 0x00036940 0x00036940 25   26           ascii   cannot remove `.' or `..'\n1016 0x0003695c 0x0003695c 6    7            ascii   %s: %s\n1017 0x00036964 0x00036964 16   17           ascii   %s: out of range\n1018 0x00036978 0x00036978 14   15           ascii   %s: bad number\n1019 0x00036988 0x00036988 17   18           ascii   argument expected\n1020 0x0003699c 0x0003699c 22   23           ascii   closing paren expected\n1021 0x000369b4 0x000369b4 9    10           ascii   missing ]\n1022 0x000369c0 0x000369c0 15   16           ascii   unknown operand\n1023 0x00036b20 0x00036b20 12   13           ascii   /dev/console\n1024 0x00036b30 0x00036b30 9    10           ascii   /dev/null\n1025 0x00036b3c 0x00036b3c 25   26           ascii   Memory allocation failure\n1026 0x00036b58 0x00036b58 12   13           ascii   /etc/inittab\n1027 0x00036b68 0x00036b68 12   13           ascii   /sbin/reboot\n1028 0x00036b78 0x00036b78 17   18           ascii   /bin/umount -a -r\n1029 0x00036b8c 0x00036b8c 16   17           ascii   /sbin/swapoff -a\n1030 0x00036ba0 0x00036ba0 10   11           ascii   /sbin/init\n1031 0x00036bac 0x00036bac 9    10           ascii   /dev/tty2\n1032 0x00036bb8 0x00036bb8 9    10           ascii   /dev/tty3\n1033 0x00036bc4 0x00036bc4 9    10           ascii   /dev/tty4\n1034 0x00036bd0 0x00036bd0 15   16           ascii   /etc/init.d/rcS\n1035 0x00036be0 0x00036be0 21   22           ascii   Bad inittab entry: %s\n1036 0x00036bf8 0x00036bf8 5    6            ascii   /dev/\n1037 0x00036c00 0x00036c00 27   28           ascii   device '%s' does not exist.\n1038 0x00036c1c 0x00036c1c 21   22           ascii   Bummer, can't open %s\n1039 0x00036c34 0x00036c34 11   12           ascii   Can't fork!\n1040 0x00036c40 0x00036c40 22   23           ascii   ~`!$^&*()=|\\{}[];\"'<>?\n1041 0x00036c58 0x00036c58 5    6            ascii   exec\n1042 0x00036c64 0x00036c64 33   34           ascii   Starting pid %d, console %s: '%s'\n1043 0x00036c88 0x00036c88 30   31           ascii   Bummer, could not run '%s': %m\n1044 0x00036cac 0x00036cac 7    8            ascii   CONSOLE\n1045 0x00036cb4 0x00036cb4 7    8            ascii   console\n1046 0x00036cbc 0x00036cbc 11   12           ascii   /dev/ttyS%d\n1047 0x00036cc8 0x00036cc8 10   11           ascii   /dev/tty%d\n1048 0x00036cd4 0x00036cd4 9    10           ascii   /dev/tty0\n1049 0x00036ce0 0x00036ce0 5    6            ascii   linux\n1050 0x00036ce8 0x00036ce8 10   11           ascii   TERM=vt102\n1051 0x00036cf4 0x00036cf4 10   11           ascii   TERM=linux\n1052 0x00036d00 0x00036d00 17   18           ascii   init started:  %s\n1053 0x00036d14 0x00036d14 6    7            ascii   single\n1054 0x00036d20 0x00036d20 57   58           ascii   Process '%s' (pid %d) exited.  Scheduling it for restart.\n1055 0x00036d5c 0x00036d5c 22   23           ascii   Reloading /etc/inittab\n1056 0x00036d74 0x00036d74 31   32           ascii   The system is going down NOW !!\n1057 0x00036d94 0x00036d94 33   34           ascii   Sending SIGTERM to all processes.\n1058 0x00036db8 0x00036db8 33   34           ascii   Sending SIGKILL to all processes.\n1059 0x00036ddc 0x00036ddc 43   44           ascii   Please stand by while rebooting the system.\n1060 0x00036e08 0x00036e08 51   52           ascii   The system is halted. Press Reset or turn off power\n1061 0x00036e3c 0x00036e3c 23   24           ascii   exec of '%s' failed: %m\n1062 0x00036e54 0x00036e54 6    7            ascii   HOME=/\n1063 0x00036e5c 0x00036e5c 34   35           ascii   PATH=/usr/bin:/bin:/usr/sbin:/sbin\n1064 0x00036e80 0x00036e80 13   14           ascii   SHELL=/bin/sh\n1065 0x00036e90 0x00036e90 9    10           ascii   USER=root\n1066 0x00036e9c 0x00036e9c 7    8            ascii   sysinit\n1067 0x00036ea4 0x00036ea4 7    8            ascii   respawn\n1068 0x00036eac 0x00036eac 8    9            ascii   askfirst\n1069 0x00036eb8 0x00036eb8 4    5            ascii   wait\n1070 0x00036ec0 0x00036ec0 4    5            ascii   once\n1071 0x00036ec8 0x00036ec8 10   11           ascii   ctrlaltdel\n1072 0x00036ed4 0x00036ed4 8    9            ascii   shutdown\n1073 0x00036ee0 0x00036ee0 46   47           ascii   \\nPlease press Enter to activate this console.\n1074 0x00036f14 0x00036f14 17   18           ascii   no process killed\n1075 0x00036f2c 0x00036f2c 23   24           ascii   cannot open module `%s'\n1076 0x00036f44 0x00036f44 16   17           ascii   cannot mmap `%s'\n1077 0x00036f58 0x00036f58 24   25           ascii   Unknown symbol in module\n1078 0x00036f74 0x00036f74 21   22           ascii   Invalid module format\n1079 0x00036f8c 0x00036f8c 31   32           ascii   Module has wrong symbol version\n1080 0x00036fac 0x00036fac 18   19           ascii   Invalid parameters\n1081 0x00036fc0 0x00036fc0 28   29           ascii   cannot insert `%s': %s (%li)\n1082 0x00036fe0 0x00036fe0 37   38           ascii   Module                  Size  Used by\n1083 0x00037008 0x00037008 13   14           ascii   /proc/modules\n1084 0x0003701c 0x0003701c 33   34           ascii   Sent %d probes (%d broadcast(s))\\n\n1085 0x00037044 0x00037044 18   19           ascii   Received %d repl%s\n1086 0x0003705c 0x0003705c 13   14           ascii   %d request(s)\n1087 0x0003706c 0x0003706c 17   18           ascii   %s%d broadcast(s)\n1088 0x00037080 0x00037080 9    10           ascii   Broadcast\n1089 0x0003708c 0x0003708c 7    8            ascii   Unicast\n1090 0x00037094 0x00037094 7    8            ascii   request\n1091 0x0003709c 0x0003709c 5    6            ascii   reply\n1092 0x000370a4 0x000370a4 8    9            ascii   %s from\n1093 0x000370b0 0x000370b0 4    5            ascii   [%s]\n1094 0x000370b8 0x000370b8 7    8            ascii   for %s\n1095 0x000370c0 0x000370c0 4    5            ascii   for\n1096 0x000370c8 0x000370c8 13   14           ascii    %ld.%03ldms\\n\n1097 0x000370d8 0x000370d8 13   14           ascii    UNSOLICITED?\n1098 0x000370e8 0x000370e8 4    5            ascii   eth0\n1099 0x000370f0 0x000370f0 40   41           ascii   Interface name `%s' must be less than %d\n1100 0x0003711c 0x0003711c 16   17           ascii   h?bfDUAqc:w:s:I:\n1101 0x00037130 0x00037130 22   23           ascii   Interface %s not found\n1102 0x00037148 0x00037148 12   13           ascii   SIOCGIFFLAGS\n1103 0x00037158 0x00037158 20   21           ascii   Interface %s is down\n1104 0x00037170 0x00037170 27   28           ascii   Interface %s is not ARPable\n1105 0x0003718c 0x0003718c 28   29           ascii   invalid or unknown target %s\n1106 0x000371ac 0x000371ac 25   26           ascii   invalid source address %s\n1107 0x000371c8 0x000371c8 32   33           ascii   WARNING: interface %s is ignored\n1108 0x000371ec 0x000371ec 4    5            ascii   bind\n1109 0x000371f4 0x000371f4 33   34           ascii   WARNING: setsockopt(SO_DONTROUTE)\n1110 0x00037218 0x00037218 11   12           ascii   getsockname\n1111 0x00037224 0x00037224 45   46           ascii   Interface \"%s\" is not ARPable (no ll address)\n1112 0x00037254 0x00037254 12   13           ascii   ARPING to %s\n1113 0x00037264 0x00037264 7    8            ascii   unknown\n1114 0x0003726c 0x0003726c 16   17           ascii    from %s via %s\\n\n1115 0x00037280 0x00037280 34   35           ascii   no src address in the non-DAD mode\n1116 0x000372a4 0x000372a4 8    9            ascii   recvfrom\n1117 0x000372b0 0x000372b0 28   29           ascii   never heard of command [%s]\\n\n1118 0x000372d0 0x000372d0 47   48           ascii   this option requires a bridge name as argument\\n\n1119 0x00037300 0x00037300 25   26           ascii   bridge %s doesn't exist!\\n\n1120 0x0003731c 0x0003731c 42   43           ascii   incorrect number of arguments for command\\n\n1121 0x00037348 0x00037348 8    9            ascii   %4i.%.2i\n1122 0x00037354 0x00037354 33   34           ascii   %.2x%.2x.%.2x%.2x%.2x%.2x%.2x%.2x\n1123 0x00037378 0x00037378 4    5            ascii   %3i\\t\n1124 0x00037380 0x00037380 30   31           ascii   %.2x:%.2x:%.2x:%.2x:%.2x:%.2x\\t\n1125 0x000373a8 0x000373a8 4    5            ascii   %s\\t\\t\n1126 0x000373b0 0x000373b0 33   34           ascii   port\\tmac addr\\t\\tlocal\\tageing timer\n1127 0x000373d4 0x000373d4 32   33           ascii   can't find port %s in bridge %s\\n\n1128 0x00037400 0x00037400 29   30           ascii   interface %s does not exist!\\n\n1129 0x00037420 0x00037420 31   32           ascii   device %s is not a slave of %s\\n\n1130 0x00037440 0x00037440 16   17           ascii   br_del_interface\n1131 0x00037454 0x00037454 74   75           ascii   device %s is already a member of a bridge; can't enslave it to bridge %s.\\n\n1132 0x000374a0 0x000374a0 87   88           ascii   device %s is a bridge device itself; can't enslave a bridge device to a bridge device.\\n\n1133 0x000374f8 0x000374f8 16   17           ascii   br_add_interface\n1134 0x0003750c 0x0003750c 41   42           ascii   bridge %s doesn't exist; can't delete it\\n\n1135 0x00037538 0x00037538 39   40           ascii   bridge %s is still up; can't delete it\\n\n1136 0x00037560 0x00037560 13   14           ascii   br_del_bridge\n1137 0x00037570 0x00037570 65   66           ascii   device %s already exists; can't create bridge with the same name\\n\n1138 0x000375b4 0x000375b4 13   14           ascii   br_add_bridge\n1139 0x000375c4 0x000375c4 10   11           ascii   \\t\\t\\t\\t\\t\\t\\t%s\\n\n1140 0x000375d0 0x000375d0 45   46           ascii   bridge name\\tbridge id\\t\\tSTP enabled\\tinterfaces\n1141 0x00037600 0x00037600 5    6            ascii   \\t%s\\t\\t\n1142 0x00037608 0x00037608 8    9            ascii   %s (%i)\\n\n1143 0x00037614 0x00037614 17   18           ascii    port id\\t\\t%.4x\\t\\t\\t\n1144 0x00037628 0x00037628 11   12           ascii   state\\t\\t\\t%s\\n\n1145 0x00037634 0x00037634 17   18           ascii    designated root\\t\n1146 0x00037648 0x00037648 16   17           ascii   \\tpath cost\\t\\t%4i\\n\n1147 0x0003765c 0x0003765c 19   20           ascii    designated bridge\\t\n1148 0x00037670 0x00037670 19   20           ascii   \\tmessage age timer\\t\n1149 0x00037684 0x00037684 22   23           ascii   \\n designated port\\t%.4x\n1150 0x0003769c 0x0003769c 23   24           ascii   \\t\\t\\tforward delay timer\\t\n1151 0x000376b4 0x000376b4 21   22           ascii   \\n designated cost\\t%4i\n1152 0x000376cc 0x000376cc 15   16           ascii   \\t\\t\\thold timer\\t\\t\n1153 0x000376dc 0x000376dc 10   11           ascii   \\n flags\\t\\t\\t\n1154 0x000376e8 0x000376e8 15   16           ascii   CONFIG_PENDING\n1155 0x000376f8 0x000376f8 20   21           ascii   TOPOLOGY_CHANGE_ACK\n1156 0x00037710 0x00037710 35   36           ascii    STP is disabled for this interface\n1157 0x00037734 0x00037734 12   13           ascii    bridge id\\t\\t\n1158 0x00037744 0x00037744 18   19           ascii   \\n designated root\\t\n1159 0x00037758 0x00037758 19   20           ascii   \\n root port\\t\\t%4i\\t\\t\\t\n1160 0x0003776c 0x0003776c 15   16           ascii   path cost\\t\\t%4i\\n\n1161 0x0003777c 0x0003777c 10   11           ascii    max age\\t\\t\n1162 0x00037788 0x00037788 19   20           ascii   \\t\\t\\tbridge max age\\t\\t\n1163 0x0003779c 0x0003779c 14   15           ascii   \\n hello time\\t\\t\n1164 0x000377ac 0x000377ac 21   22           ascii   \\t\\t\\tbridge hello time\\t\n1165 0x000377c4 0x000377c4 17   18           ascii   \\n forward delay\\t\\t\n1166 0x000377d8 0x000377d8 24   25           ascii   \\t\\t\\tbridge forward delay\\t\n1167 0x000377f4 0x000377f4 15   16           ascii   \\n ageing time\\t\\t\n1168 0x00037804 0x00037804 16   17           ascii   \\t\\t\\tgc interval\\t\\t\n1169 0x00037818 0x00037818 15   16           ascii   \\n hello timer\\t\\t\n1170 0x00037828 0x00037828 14   15           ascii   \\t\\t\\ttcn timer\\t\\t\n1171 0x00037838 0x00037838 24   25           ascii   \\n topology change timer\\t\n1172 0x00037854 0x00037854 13   14           ascii   \\t\\t\\tgc timer\\t\\t\n1173 0x00037864 0x00037864 16   17           ascii   TOPOLOGY_CHANGE\n1174 0x00037878 0x00037878 25   26           ascii   TOPOLOGY_CHANGE_DETECTED\n1175 0x00037894 0x00037894 5    6            ascii   addbr\n1176 0x0003789c 0x0003789c 5    6            ascii   addif\n1177 0x000378a4 0x000378a4 5    6            ascii   delbr\n1178 0x000378ac 0x000378ac 5    6            ascii   delif\n1179 0x000378b4 0x000378b4 9    10           ascii   setageing\n1180 0x000378c0 0x000378c0 13   14           ascii   setbridgeprio\n1181 0x000378d0 0x000378d0 5    6            ascii   setfd\n1182 0x000378d8 0x000378d8 8    9            ascii   setgcint\n1183 0x000378e4 0x000378e4 8    9            ascii   sethello\n1184 0x000378f0 0x000378f0 9    10           ascii   setmaxage\n1185 0x000378fc 0x000378fc 11   12           ascii   setpathcost\n1186 0x00037908 0x00037908 11   12           ascii   setportprio\n1187 0x00037914 0x00037914 4    5            ascii   show\n1188 0x0003791c 0x0003791c 8    9            ascii   showmacs\n1189 0x00037928 0x00037928 7    8            ascii   showstp\n1190 0x00037938 0x00037938 5    6            ascii   ether\n1191 0x00037940 0x00037940 18   19           ascii   invalid hw-addr %s\n1192 0x00037954 0x00037954 12   13           ascii   SIOCSIFFLAGS\n1193 0x00037964 0x00037964 6    7            ascii   metric\n1194 0x00037970 0x00037970 10   11           ascii   txqueuelen\n1195 0x0003797c 0x0003797c 7    8            ascii   dstaddr\n1196 0x00037984 0x00037984 7    8            ascii   netmask\n1197 0x0003798c 0x0003798c 9    10           ascii   broadcast\n1198 0x0003799c 0x0003799c 11   12           ascii   pointopoint\n1199 0x000379ac 0x000379ac 8    9            ascii   trailers\n1200 0x000379b8 0x000379b8 7    8            ascii   promisc\n1201 0x000379c0 0x000379c0 9    10           ascii   multicast\n1202 0x000379cc 0x000379cc 8    9            ascii   allmulti\n1203 0x000379d8 0x000379d8 7    8            ascii   dynamic\n1204 0x000379e0 0x000379e0 13   14           ascii   SIOCSIFMETRIC\n1205 0x000379f0 0x000379f0 10   11           ascii   SIOCSIFMTU\n1206 0x000379fc 0x000379fc 13   14           ascii   SIOCSIFTXQLEN\n1207 0x00037a0c 0x00037a0c 14   15           ascii   SIOCSIFDSTADDR\n1208 0x00037a1c 0x00037a1c 14   15           ascii   SIOCSIFNETMASK\n1209 0x00037a2c 0x00037a2c 14   15           ascii   SIOCSIFBRDADDR\n1210 0x00037a3c 0x00037a3c 13   14           ascii   SIOCSIFHWADDR\n1211 0x00037a4c 0x00037a4c 11   12           ascii   SIOCSIFADDR\n1212 0x00037a58 0x00037a58 6    7            ascii   sendto\n1213 0x00037a60 0x00037a60 32   33           ascii   ping wrote %d chars; %d expected\n1214 0x00037a84 0x00037a84 28   29           ascii   \\n--- %s ping statistics ---\\n\n1215 0x00037aa4 0x00037aa4 25   26           ascii   %ld packets transmitted,\n1216 0x00037ac0 0x00037ac0 22   23           ascii   %ld packets received,\n1217 0x00037ad8 0x00037ad8 16   17           ascii   %ld duplicates,\n1218 0x00037aec 0x00037aec 18   19           ascii   %ld%% packet loss\\n\n1219 0x00037b00 0x00037b00 52   53           ascii   round-trip min/avg/max = %lu.%lu/%lu.%lu/%lu.%lu ms\\n\n1220 0x00037b38 0x00037b38 58   59           ascii   unknown address type; only AF_INET is currently supported.\n1221 0x00037b74 0x00037b74 28   29           ascii   PING %s (%s): %d data bytes\\n\n1222 0x00037b94 0x00037b94 29   30           ascii   %d bytes from %s: icmp_seq=%u\n1223 0x00037bb4 0x00037bb4 7    8            ascii    ttl=%d\n1224 0x00037bbc 0x00037bbc 16   17           ascii    time=%lu.%lu ms\n1225 0x00037bd0 0x00037bd0 7    8            ascii    (DUP!)\n1226 0x00037bd8 0x00037bd8 10   11           ascii   Echo Reply\n1227 0x00037be4 0x00037be4 23   24           ascii   Destination Unreachable\n1228 0x00037bfc 0x00037bfc 13   14           ascii   Source Quench\n1229 0x00037c0c 0x00037c0c 23   24           ascii   Redirect (change route)\n1230 0x00037c24 0x00037c24 12   13           ascii   Echo Request\n1231 0x00037c34 0x00037c34 13   14           ascii   Time Exceeded\n1232 0x00037c44 0x00037c44 17   18           ascii   Parameter Problem\n1233 0x00037c58 0x00037c58 17   18           ascii   Timestamp Request\n1234 0x00037c6c 0x00037c6c 15   16           ascii   Timestamp Reply\n1235 0x00037c7c 0x00037c7c 19   20           ascii   Information Request\n1236 0x00037c90 0x00037c90 17   18           ascii   Information Reply\n1237 0x00037ca4 0x00037ca4 20   21           ascii   Address Mask Request\n1238 0x00037cbc 0x00037cbc 18   19           ascii   Address Mask Reply\n1239 0x00037cd0 0x00037cd0 17   18           ascii   unknown ICMP type\n1240 0x00037ce4 0x00037ce4 25   26           ascii   Warning: Got ICMP %d (%s)\n1241 0x00037d50 0x00037d50 15   16           ascii   /proc/net/route\n1242 0x00037d60 0x00037d60 17   18           ascii   Metric Ref    Use\n1243 0x00037d74 0x00037d74 18   19           ascii     MSS Window  irtt\n1244 0x00037d88 0x00037d88 87   88           ascii   Kernel IP routing table\\nDestination     Gateway         Genmask         Flags %s Iface\\n\n1245 0x00037de0 0x00037de0 7    8            ascii   %*[^\\n]\\n\n1246 0x00037de8 0x00037de8 28   29           ascii   %63s%lx%lx%X%d%d%d%lx%d%d%d\\n\n1247 0x00037e08 0x00037e08 6    7            ascii   fscanf\n1248 0x00037e10 0x00037e10 19   20           ascii   %-16s%-16s%-16s%-6s\n1249 0x00037e24 0x00037e24 16   17           ascii   %5d %-5d %6d %s\\n\n1250 0x00037e38 0x00037e38 17   18           ascii   %-6d %-2d %7d %s\\n\n1251 0x00037e4c 0x00037e4c 4    5            ascii   -net\n1252 0x00037e54 0x00037e54 5    6            ascii   -host\n1253 0x00037e5c 0x00037e5c 4    5            ascii   A:ne\n1254 0x00037e64 0x00037e64 4    5            ascii   inet\n1255 0x00037e6c 0x00037e6c 12   13           ascii   resolving %s\n1256 0x00037e7c 0x00037e7c 23   24           ascii   gateway %s is a NETWORK\n1257 0x00037e98 0x00037e98 36   37           ascii   netmask %.8x and host route conflict\n1258 0x00037ec0 0x00037ec0 16   17           ascii   bogus netmask %s\n1259 0x00037ed4 0x00037ed4 34   35           ascii   netmask and route address conflict\n1260 0x00037ef8 0x00037ef8 15   16           ascii   SIOC[ADD|DEL]RT\n1261 0x00037f1e 0x00037f1e 6    7            ascii   delete\n1262 0x00037f2a 0x00037f2a 4    5            ascii   #net\n1263 0x00037f31 0x00037f31 5    6            ascii   #host\n1264 0x00037f3a 0x00037f3a 6    7            ascii   metric\n1265 0x00037f43 0x00037f43 7    8            ascii   netmask\n1266 0x00037f52 0x00037f52 7    8            ascii   gateway\n1267 0x00037f62 0x00037f62 6    7            ascii   window\n1268 0x00037f6b 0x00037f6b 4    5            ascii   irtt\n1269 0x00037f78 0x00037f78 6    7            ascii   device\n1270 0x00037f7f 0x00037f7f 8    9            ascii   \\t reject\n1271 0x00037f89 0x00037f89 4    5            ascii   !mod\n1272 0x00037f8f 0x00037f8f 4    5            ascii   \"dyn\n1273 0x00037f94 0x00037f94 11   12           ascii   \\v#reinstate\n1274 0x00037fc3 0x00037fc3 6    7            ascii    GHRDM\n1275 0x00037fd0 0x00037fd0 6    7            ascii   gpl:r:\n1276 0x00037fd8 0x00037fd8 10   11           ascii   local file\n1277 0x00037fe8 0x00037fe8 24   25           ascii   too long remote-filename\n1278 0x00038004 0x00038004 5    6            ascii   octet\n1279 0x0003800c 0x0003800c 4    5            ascii   read\n1280 0x00038014 0x00038014 7    8            ascii   timeout\n1281 0x0003801c 0x0003801c 12   13           ascii   last timeout\n1282 0x0003802c 0x0003802c 6    7            ascii   select\n1283 0x00038034 0x00038034 15   16           ascii   server says: %s\n1284 0x00038044 0x00038044 5    6            ascii   write\n1285 0x0003804c 0x0003804c 15   16           ascii   Undefined error\n1286 0x0003805c 0x0003805c 14   15           ascii   File not found\n1287 0x0003806c 0x0003806c 16   17           ascii   Access violation\n1288 0x00038080 0x00038080 29   30           ascii   Disk full or allocation error\n1289 0x000380a0 0x000380a0 22   23           ascii   Illegal TFTP operation\n1290 0x000380b8 0x000380b8 19   20           ascii   Unknown transfer ID\n1291 0x000380cc 0x000380cc 19   20           ascii   File already exists\n1292 0x000380e0 0x000380e0 12   13           ascii   No such user\n1293 0x00038100 0x00038100 7    8            ascii   open %s\n1294 0x00038108 0x00038108 20   21           ascii   if_name >= %d chars\\n\n1295 0x00038120 0x00038120 28   29           ascii   socket or ioctl error for %s\n1296 0x00038140 0x00038140 21   22           ascii   /proc/net/vlan/config\n1297 0x0003815a 0x0003815a 4    5            ascii   \\aadd\n1298 0x00038161 0x00038161 4    5            ascii   \\arem\n1299 0x00038169 0x00038169 13   14           ascii   set_name_type\n1300 0x00038178 0x00038178 10   11           ascii   \\a\\fset_flag\n1301 0x00038186 0x00038186 14   15           ascii   set_egress_map\n1302 0x00038198 0x00038198 15   16           ascii   set_ingress_map\n1303 0x000381aa 0x000381aa 13   14           ascii   VLAN_PLUS_VID\n1304 0x000381ba 0x000381ba 20   21           ascii   VLAN_PLUS_VID_NO_PAD\n1305 0x000381d1 0x000381d1 12   13           ascii   DEV_PLUS_VID\n1306 0x000381e0 0x000381e0 19   20           ascii   DEV_PLUS_VID_NO_PAD\n1307 0x00038200 0x00038200 15   16           ascii   <INVALID STATE>\n1308 0x00038210 0x00038210 8    9            ascii   disabled\n1309 0x0003821c 0x0003821c 9    10           ascii   listening\n1310 0x00038228 0x00038228 8    9            ascii   learning\n1311 0x00038234 0x00038234 10   11           ascii   forwarding\n1312 0x00038240 0x00038240 8    9            ascii   blocking\n1313 0x0003824c 0x0003824c 26   27           ascii   DHCPC perform a DHCP renew\n1314 0x00038268 0x00038268 8    9            ascii   deconfig\n1315 0x00038274 0x00038274 38   39           ascii   DHCPC Unicasting a release of %s to %s\n1316 0x0003829c 0x0003829c 7    8            ascii   release\n1317 0x000382a4 0x000382a4 29   30           ascii   DHCPC Entering released state\n1318 0x000382c4 0x000382c4 21   22           ascii   c:CfbH:h:i:np:qr:s:uv\n1319 0x000382dc 0x000382dc 21   22           ascii   udhcpcd, version %s\\n\\n\n1320 0x000382f4 0x000382f4 9    10           ascii   0.9.9-pre\n1321 0x00038300 0x00038300 36   37           ascii   FATAL: couldn't listen on socket, %m\n1322 0x00038328 0x00038328 67   68           ascii   DHCPC Send DISCOVER with request ip %d.%d.%d.%d and unicast flag %d\n1323 0x0003836c 0x0003836c 9    10           ascii   leasefail\n1324 0x00038378 0x00038378 45   46           ascii   DHCPC DHCP Service unavailable, recv no OFFER\n1325 0x000383a8 0x000383a8 32   33           ascii   No lease, forking to background.\n1326 0x000383cc 0x000383cc 18   19           ascii   No lease, failing.\n1327 0x000383e0 0x000383e0 68   69           ascii   DHCPC Send REQUEST to server %d.%d.%d.%d with request ip %d.%d.%d.%d\n1328 0x00038428 0x00038428 31   32           ascii   Lease lost, entering init state\n1329 0x00038448 0x00038448 51   52           ascii   DHCPC Broadcast REQUEST with request ip %d.%d.%d.%d\n1330 0x0003847c 0x0003847c 60   61           ascii   DHCPC Recv OFFER from server %d.%d.%d.%d with ip %d.%d.%d.%d\n1331 0x000384bc 0x000384bc 42   43           ascii   No lease time with ACK, using 1 hour lease\n1332 0x000384e8 0x000384e8 62   63           ascii   DHCPC: offered address is in use (got ARP reply), Send decline\n1333 0x00038528 0x00038528 36   37           ascii   Lease of %s obtained, lease time %ld\n1334 0x00038550 0x00038550 73   74           ascii   DHCPC Recv ACK from server %d.%d.%d.%d with ip %d.%d.%d.%d lease time %ld\n1335 0x0003859c 0x0003859c 5    6            ascii   bound\n1336 0x000385a4 0x000385a4 17   18           ascii   Received DHCP NAK\n1337 0x000385b8 0x000385b8 58   59           ascii   DHCPC Recv NAK from server %d.%d.%d.%d with ip %d.%d.%d.%d\n1338 0x000385f8 0x000385f8 7    8            ascii   sig:%d\\n\n1339 0x00038600 0x00038600 13   14           ascii   unicast renew\n1340 0x00038610 0x00038610 15   16           ascii   broadcast renew\n1341 0x00038620 0x00038620 66   67           ascii   DHCPC: Error after mac clone, can't read WAN interface information\n1342 0x00038664 0x00038664 51   52           ascii   DHCPC: mac clone, re-read WAN interface information\n1343 0x00038698 0x00038698 16   17           ascii   Received SIGTERM\n1344 0x000386ac 0x000386ac 32   33           ascii   /usr/share/udhcpc/default.script\n1345 0x000386d0 0x000386d0 8    9            ascii   clientid\n1346 0x000386dc 0x000386dc 13   14           ascii   clientid-none\n1347 0x000386ec 0x000386ec 10   11           ascii   foreground\n1348 0x000386f8 0x000386f8 10   11           ascii   background\n1349 0x00038704 0x00038704 8    9            ascii   hostname\n1350 0x00038710 0x00038710 9    10           ascii   interface\n1351 0x00038720 0x00038720 7    8            ascii   pidfile\n1352 0x00038728 0x00038728 4    5            ascii   quit\n1353 0x00038730 0x00038730 6    7            ascii   script\n1354 0x00038738 0x00038738 7    8            ascii   unicast\n1355 0x000387c0 0x000387c0 46   47           ascii   received bogus message (bad magic) -- ignoring\n1356 0x000387f8 0x000387f8 16   17           ascii   Sending renew...\n1357 0x0003880c 0x0003880c 19   20           ascii   Sending discover...\n1358 0x00038820 0x00038820 24   25           ascii   Sending select for %s...\n1359 0x0003883c 0x0003883c 12   13           ascii   /dev/urandom\n1360 0x0003884c 0x0003884c 41   42           ascii   Could not load seed from /dev/urandom: %m\n1361 0x00038878 0x00038878 18   19           ascii   Sending release...\n1362 0x00038890 0x00038890 10   11           ascii   <\\bMSFT 5.0\n1363 0x000388a0 0x000388a0 6    7            ascii   msgget\n1364 0x000388a8 0x000388a8 26   27           ascii   httpd_ipc_send:msg too log\n1365 0x000388c4 0x000388c4 18   19           ascii   msqid:%d mtype:%d\\n\n1366 0x000388d8 0x000388d8 14   15           ascii   busybox:msgsnd\n1367 0x000388e8 0x000388e8 48   49           ascii   DHCPC: parse classless static route option error\n1368 0x0003891c 0x0003891c 66   67           ascii   DHCPC: get %d static route from classless static route option(121)\n1369 0x00038960 0x00038960 58   59           ascii   DHCPC: parse Microsoft classless static route option error\n1370 0x0003899c 0x0003899c 76   77           ascii   DHCPC: get %d static route from Microsoft classless static route option(249)\n1371 0x000389ec 0x000389ec 38   39           ascii   DHCPC: parse static route option error\n1372 0x00038a14 0x00038a14 66   67           ascii   DHCPC:GET ip:%x mask:%x gateway:%x dns1:%x dns2:%x static route:%x\n1373 0x00038a58 0x00038a58 55   56           ascii   DHCPC: get %d static route from static route option(33)\n1374 0x00038a90 0x00038a90 29   30           ascii   IPC:this msg is not for dhcpc\n1375 0x00038ab0 0x00038ab0 19   20           ascii   IPC:incorrect magic\n1376 0x00038ac4 0x00038ac4 23   24           ascii   IPC:unsupported version\n1377 0x00038adc 0x00038adc 33   34           ascii   DHCPS:REQUEST ip %x, static ip %x\n1378 0x00038b00 0x00038b00 46   47           ascii   DHCPS:REQUEST ip %x is reserved as a static ip\n1379 0x00038b30 0x00038b30 47   48           ascii   DHCPS:REQUEST ip %x already reserved by someone\n1380 0x00038b60 0x00038b60 46   47           ascii   DHCPS:REQUEST ip %x is not in the address pool\n1381 0x00038b90 0x00038b90 6    7            ascii   shmget\n1382 0x00038b98 0x00038b98 16   17           ascii   two many clients\n1383 0x00038bac 0x00038bac 16   17           ascii   /etc/udhcpd.conf\n1384 0x00038bc0 0x00038bc0 55   56           ascii   max_leases value (%lu) not sane, setting to %lu instead\n1385 0x00038bf8 0x00038bf8 40   41           ascii   FATAL: couldn't create server socket, %m\n1386 0x00038c24 0x00038c24 18   19           ascii   Received a SIGUSR1\n1387 0x00038c38 0x00038c38 43   44           ascii   Received a SIGUSR2, now DHCP SERVER restart\n1388 0x00038c64 0x00038c64 9    10           ascii   errno:%d\\n\n1389 0x00038c70 0x00038c70 18   19           ascii   Received a SIGTERM\n1390 0x00038c84 0x00038c84 54   55           ascii   DHCPS:Recv DISCOVER from %02X:%02X:%02X:%02X:%02X:%02X\n1391 0x00038cbc 0x00038cbc 17   18           ascii   send OFFER failed\n1392 0x00038cd0 0x00038cd0 53   54           ascii   DHCPS:Recv REQUEST from %02X:%02X:%02X:%02X:%02X:%02X\n1393 0x00038d08 0x00038d08 46   47           ascii   DHCPS:Wrong Server id or request an invalid ip\n1394 0x00038d38 0x00038d38 51   52           ascii   DHCPS:Server id not found and request an invalid ip\n1395 0x00038d6c 0x00038d6c 42   43           ascii   DHCPS:Server id and requested ip not found\n1396 0x00038d98 0x00038d98 11   12           ascii   DHCPS:%x %x\n1397 0x00038da4 0x00038da4 69   70           ascii   DHCPS:REQUEST ip %x already reserved by %02X:%02X:%02X:%02X:%02X:%02X\n1398 0x00038dec 0x00038dec 53   54           ascii   DHCPS:Recv DECLINE from %02X:%02X:%02X:%02X:%02X:%02X\n1399 0x00038e24 0x00038e24 53   54           ascii   DHCPS:Recv RELEASE from %02X:%02X:%02X:%02X:%02X:%02X\n1400 0x00038e5c 0x00038e5c 52   53           ascii   DHCPS:Recv INFORM from %02X:%02X:%02X:%02X:%02X:%02X\n1401 0x00038e94 0x00038e94 43   44           ascii   unsupported DHCP message (%02x) -- ignoring\n1402 0x00038edf 0x00038edf 37   38           ascii   XCould not setsocketopt on raw socket\n1403 0x00038f08 0x00038f08 30   31           ascii   unable to open config file: %s\n1404 0x00038f2c 0x00038f2c 29   30           ascii   Failure parsing line %d of %s\n1405 0x00038f50 0x00038f50 5    6            ascii   , \\t/-\n1406 0x00038f58 0x00038f58 5    6            ascii   start\n1407 0x00038f60 0x00038f60 13   14           ascii   192.168.1.100\n1408 0x00038f74 0x00038f74 13   14           ascii   192.168.1.199\n1409 0x00038f84 0x00038f84 6    7            ascii   option\n1410 0x00038f90 0x00038f90 10   11           ascii   max_leases\n1411 0x00038fa0 0x00038fa0 9    10           ascii   remaining\n1412 0x00038fac 0x00038fac 9    10           ascii   auto_time\n1413 0x00038fb8 0x00038fb8 4    5            ascii   7200\n1414 0x00038fc0 0x00038fc0 12   13           ascii   decline_time\n1415 0x00038fd0 0x00038fd0 4    5            ascii   3600\n1416 0x00038fd8 0x00038fd8 13   14           ascii   conflict_time\n1417 0x00038fe8 0x00038fe8 10   11           ascii   offer_time\n1418 0x00038ff8 0x00038ff8 9    10           ascii   min_lease\n1419 0x00039004 0x00039004 10   11           ascii   lease_file\n1420 0x00039010 0x00039010 27   28           ascii   /var/lib/misc/udhcpd.leases\n1421 0x0003902c 0x0003902c 19   20           ascii   /var/run/udhcpd.pid\n1422 0x00039040 0x00039040 11   12           ascii   notify_file\n1423 0x0003904c 0x0003904c 6    7            ascii   siaddr\n1424 0x00039054 0x00039054 7    8            ascii   0.0.0.0\n1425 0x0003905c 0x0003905c 5    6            ascii   sname\n1426 0x00039064 0x00039064 9    10           ascii   boot_file\n1427 0x00039070 0x00039070 12   13           ascii   static_lease\n1428 0x000390b0 0x000390b0 51   52           ascii   %s belongs to someone, reserving it for %ld seconds\n1429 0x000390e4 0x000390e4 14   15           ascii   DHCPS:Send NAK\n1430 0x000390f4 0x000390f4 20   21           ascii   DHCPS:Send ACK to %s\n1431 0x0003910c 0x0003910c 25   26           ascii   lease host name not found\n1432 0x00039128 0x00039128 7    8            ascii   Unknown\n1433 0x00039130 0x00039130 46   47           ascii   DHCPS:no ip addresses to give, OFFER abandoned\n1434 0x00039160 0x00039160 31   32           ascii   DHCPS:lease host name not found\n1435 0x00039180 0x00039180 41   42           ascii   DHCPS:lease pool is full, OFFER abandoned\n1436 0x000391ac 0x000391ac 27   28           ascii   DHCPS:Send OFFER with ip %s\n1437 0x000391c8 0x000391c8 22   23           ascii   \\n\\r\\n\\rbuf = %08X, len=%d\n1438 0x000391e0 0x000391e0 7    8            ascii   \\n\\r%02X\n1439 0x000391e8 0x000391e8 7    8            ascii   - %02X\n1440 0x000391f0 0x000391f0 5    6            ascii   %02X\n1441 0x000391f8 0x000391f8 4    5            ascii   %s,\n1442 0x00039200 0x00039200 16   17           ascii   %s (v%s) started\n1443 0x00039214 0x00039214 4    5            ascii   fork\n1444 0x0003921c 0x0003921c 10   11           ascii   EMERGENCY!\n1445 0x00039228 0x00039228 6    7            ascii   ALERT!\n1446 0x00039230 0x00039230 9    10           ascii   critical!\n1447 0x0003923c 0x0003923c 7    8            ascii   warning\n1448 0x00039244 0x00039244 4    5            ascii   info\n1449 0x0003924c 0x0003924c 5    6            ascii   debug\n1450 0x00039254 0x00039254 42   43           ascii   Option 0x%02x did not fit into the packet!\n1451 0x00039280 0x00039280 37   38           ascii   bogus packet, option fields too long.\n1452 0x000392a8 0x000392a8 32   33           ascii   received bogus message, ignoring\n1453 0x000392d0 0x000392d0 7    8            ascii   MSFT 98\n1454 0x000392e0 0x000392e0 30   31           ascii   Unable to open pidfile %s: %m\\n\n1455 0x00039300 0x00039300 24   25           ascii   udhcp_sp_ipc_inform send\n1456 0x0003931c 0x0003931c 59   60           ascii   SIOCGIFADDR failed, is the interface up and configured?: %m\n1457 0x00039358 0x00039358 24   25           ascii   SIOCGIFINDEX failed!: %m\n1458 0x00039374 0x00039374 25   26           ascii   SIOCGIFHWADDR failed!: %m\n1459 0x00039390 0x00039390 18   19           ascii   socket failed!: %m\n1460 0x000393a4 0x000393a4 10   11           ascii   %2d) %-16s\n1461 0x000393b0 0x000393b0 20   21           ascii   bad signal name '%s'\n1462 0x000393c8 0x000393c8 12   13           ascii   Bad PID '%s'\n1463 0x000393d8 0x000393d8 23   24           ascii   Could not kill pid '%d'\n1464 0x000393f0 0x000393f0 34   35           ascii     PID  Uid     VmSize Stat Command\n1465 0x00039414 0x00039414 19   20           ascii   %5d %-8s        %s\n1466 0x00039428 0x00039428 17   18           ascii   %5d %-8s %6ld %s\n1467 0x0003943c 0x0003943c 5    6            ascii   [%s]\\n\n1468 0x00039444 0x00039444 13   14           ascii   bad speed: %s\n1469 0x00039454 0x00039454 25   26           ascii   too many alternate speeds\n1470 0x00039470 0x00039470 21   22           ascii   bad timeout value: %s\n1471 0x00039488 0x00039488 16   17           ascii   I:LH:f:hil:mt:wn\n1472 0x0003949c 0x0003949c 4    5            ascii   /dev\n1473 0x000394a4 0x000394a4 24   25           ascii   /dev: chdir() failed: %m\n1474 0x000394c0 0x000394c0 11   12           ascii   /dev/%s: %m\n1475 0x000394cc 0x000394cc 31   32           ascii   /dev/%s: not a character device\n1476 0x000394ec 0x000394ec 42   43           ascii   /dev/%s: cannot open as standard input: %m\n1477 0x00039518 0x00039518 27   28           ascii   %s: not open for read/write\n1478 0x00039534 0x00039534 19   20           ascii   %s: dup problem: %m\n1479 0x00039548 0x00039548 13   14           ascii   %s: ioctl: %m\n1480 0x00039558 0x00039558 12   13           ascii   %s: read: %m\n1481 0x00039568 0x00039568 17   18           ascii   %s: input overrun\n1482 0x0003957c 0x0003957c 21   22           ascii   %s: ioctl: TCSETA: %m\n1483 0x00039598 0x00039598 21   22           ascii   %s: can't exec %s: %m\n1484 0x000395b0 0x000395b0 10   11           ascii   /bin/login\n1485 0x000395bc 0x000395bc 4    5            ascii   tty1\n1486 0x000395c4 0x000395c4 10   11           ascii   /etc/issue\n1487 0x000395d8 0x000395d8 20   21           ascii   -f permission denied\n1488 0x000395f0 0x000395f0 5    6            ascii   f:h:p\n1489 0x000395f8 0x000395f8 7    8            ascii   UNKNOWN\n1490 0x00039600 0x00039600 26   27           ascii    on `%.100s' from `%.200s'\n1491 0x0003961c 0x0003961c 12   13           ascii    on `%.100s'\n1492 0x0003962c 0x0003962c 15   16           ascii   Login incorrect\n1493 0x0003963c 0x0003963c 28   29           ascii   invalid password for `%s'%s\\n\n1494 0x0003965c 0x0003965c 41   42           ascii   \\r\\nSystem closed for routine maintenance.\\r\n1495 0x00039688 0x00039688 47   48           ascii   \\r\\n[Disconnect bypassed -- root login allowed.]\\r\n1496 0x000396b8 0x000396b8 7    8            ascii   /dev/%s\n1497 0x000396c0 0x000396c0 37   38           ascii   unable to determine TTY name, got %s\\n\n1498 0x000396e8 0x000396e8 14   15           ascii   root login %s\\n\n1499 0x000396f8 0x000396f8 35   36           ascii   \\nLogin timed out after %d seconds.\\n\n1500 0x00039728 0x00039728 10   11           ascii   getcell(0)\n1501 0x00039734 0x00039734 10   11           ascii   not contig\n1502 0x00039744 0x00039744 29   30           ascii   command line too complicated\\n\n1503 0x00039764 0x00039764 22   23           ascii   argument list too long\n1504 0x0003977c 0x0003977c 8    9            ascii   no Shell\n1505 0x00039788 0x00039788 14   15           ascii   cannot execute\n1506 0x00039798 0x00039798 28   29           ascii   %dm%fs %dm%fs\\n%dm%fs %dm%fs\\n\n1507 0x000397b8 0x000397b8 19   20           ascii   \\nBuilt-in commands:\n1508 0x000397cc 0x000397cc 19   20           ascii   -------------------\n1509 0x000397e0 0x000397e0 28   29           ascii   too many files open in shell\n1510 0x00039800 0x00039800 12   13           ascii   no closing `\n1511 0x00039810 0x00039810 12   13           ascii   unclosed ${\\n\n1512 0x00039820 0x00039820 11   12           ascii   unclosed ${\n1513 0x0003982c 0x0003982c 22   23           ascii   string in ${} too long\n1514 0x00039844 0x00039844 4    5            ascii   =-+?\n1515 0x0003984c 0x0003984c 29   30           ascii   cannot use ${...=...} with $n\n1516 0x0003986c 0x0003986c 18   19           ascii   missing value for\n1517 0x00039880 0x00039880 16   17           ascii   unset variable:\n1518 0x00039898 0x00039898 31   32           ascii   : cannot redirect shell command\n1519 0x000398b8 0x000398b8 6    7            ascii   create\n1520 0x000398c0 0x000398c0 4    5            ascii   open\n1521 0x000398c8 0x000398c8 21   22           ascii   : illegal >& argument\n1522 0x000398e0 0x000398e0 9    10           ascii   here file\n1523 0x000398ec 0x000398ec 9    10           ascii   : cannot\n1524 0x000398f8 0x000398f8 19   20           ascii   out of string space\n1525 0x0003990c 0x0003990c 29   30           ascii   can't create pipe - try again\n1526 0x0003992c 0x0003992c 12   13           ascii   : bad number\n1527 0x0003993c 0x0003993c 23   24           ascii   trap: bad signal number\n1528 0x00039954 0x00039954 24   25           ascii   bad break/continue level\n1529 0x00039970 0x00039970 19   20           ascii   : no home directory\n1530 0x00039984 0x00039984 15   16           ascii   : bad directory\n1531 0x00039998 0x00039998 29   30           ascii   Shell input nested too deeply\n1532 0x000399b8 0x000399b8 4    5            ascii   $`'\"\n1533 0x000399cc 0x000399cc 13   14           ascii   : cannot open\n1534 0x000399dc 0x000399dc 13   14           ascii    is read-only\n1535 0x000399f0 0x000399f0 16   17           ascii   : bad identifier\n1536 0x00039a04 0x00039a04 7    8            ascii   export\n1537 0x00039a0c 0x00039a0c 9    10           ascii   readonly\n1538 0x00039a18 0x00039a18 16   17           ascii   nothing to shift\n1539 0x00039a2c 0x00039a2c 20   21           ascii   Usage: read name ...\n1540 0x00039a44 0x00039a44 19   20           ascii   input line too long\n1541 0x00039a58 0x00039a58 15   16           ascii   here document `\n1542 0x00039a68 0x00039a68 10   11           ascii   ' unclosed\n1543 0x00039a74 0x00039a74 11   12           ascii   no closing\n1544 0x00039a80 0x00039a80 10   11           ascii   0123456789\n1545 0x00039a8c 0x00039a8c 12   13           ascii   syntax error\n1546 0x00039a9c 0x00039a9c 13   14           ascii   word too long\n1547 0x00039aac 0x00039aac 15   16           ascii   `$ '\"\\t;&<>()|^\\n\n1548 0x00039abc 0x00039abc 4    5            ascii   \"'`$\n1549 0x00039ac4 0x00039ac4 7    8            ascii   Signal\n1550 0x00039acc 0x00039acc 14   15           ascii    - core dumped\n1551 0x00039adc 0x00039adc 5    6            ascii   SHELL\n1552 0x00039ae4 0x00039ae4 4    5            ascii   HOME\n1553 0x00039af0 0x00039af0 4    5            ascii   PATH\n1554 0x00039af8 0x00039af8 29   30           ascii   /sbin:/bin:/usr/sbin:/usr/bin\n1555 0x00039b18 0x00039b18 13   14           ascii   /bin:/usr/bin\n1556 0x00039b44 0x00039b44 60   61           ascii   \\n\\nBusyBox v1.01 (2014.06.27-07:45+0000) Built-in shell (msh)\n1557 0x00039b84 0x00039b84 46   47           ascii   Enter 'help' for a list of built-in commands.\\n\n1558 0x00039bb4 0x00039bb4 8    9            ascii   .profile\n1559 0x00039bc0 0x00039bc0 12   13           ascii   /etc/profile\n1560 0x00039bd0 0x00039bd0 11   12           ascii   : not found\n1561 0x00039bdc 0x00039bdc 11   12           ascii   PLACEHOLDER\n1562 0x00039be8 0x00039be8 4    5            ascii   TCOM\n1563 0x00039bf0 0x00039bf0 6    7            ascii   TPAREN\n1564 0x00039bf8 0x00039bf8 5    6            ascii   TPIPE\n1565 0x00039c00 0x00039c00 5    6            ascii   TLIST\n1566 0x00039c0c 0x00039c0c 4    5            ascii   TAND\n1567 0x00039c14 0x00039c14 4    5            ascii   TFOR\n1568 0x00039c20 0x00039c20 5    6            ascii   TCASE\n1569 0x00039c2c 0x00039c2c 6    7            ascii   TWHILE\n1570 0x00039c34 0x00039c34 6    7            ascii   TUNTIL\n1571 0x00039c3c 0x00039c3c 5    6            ascii   TELIF\n1572 0x00039c44 0x00039c44 4    5            ascii   TPAT\n1573 0x00039c4c 0x00039c4c 6    7            ascii   TBRACE\n1574 0x00039c54 0x00039c54 6    7            ascii   TASYNC\n1575 0x00039c5c 0x00039c5c 4    5            ascii   TDOT\n1576 0x00039c68 0x00039c68 4    5            ascii   case\n1577 0x00039c70 0x00039c70 4    5            ascii   esac\n1578 0x00039c78 0x00039c78 5    6            ascii   while\n1579 0x00039c84 0x00039c84 4    5            ascii   done\n1580 0x00039c90 0x00039c90 4    5            ascii   then\n1581 0x00039c98 0x00039c98 4    5            ascii   else\n1582 0x00039ca0 0x00039ca0 4    5            ascii   elif\n1583 0x00039ca8 0x00039ca8 5    6            ascii   until\n1584 0x00039cc8 0x00039cc8 5    6            ascii   break\n1585 0x00039cd0 0x00039cd0 8    9            ascii   continue\n1586 0x00039cdc 0x00039cdc 4    5            ascii   eval\n1587 0x00039ce4 0x00039ce4 4    5            ascii   exec\n1588 0x00039cec 0x00039cec 4    5            ascii   exit\n1589 0x00039cf4 0x00039cf4 6    7            ascii   export\n1590 0x00039cfc 0x00039cfc 4    5            ascii   help\n1591 0x00039d04 0x00039d04 6    7            ascii   newgrp\n1592 0x00039d0c 0x00039d0c 8    9            ascii   readonly\n1593 0x00039d1c 0x00039d1c 5    6            ascii   shift\n1594 0x00039d24 0x00039d24 5    6            ascii   times\n1595 0x00039d2c 0x00039d2c 4    5            ascii   trap\n1596 0x00039d34 0x00039d34 5    6            ascii   umask\n1597 0x00039d3c 0x00039d3c 8    9            ascii   Signal 0\n1598 0x00039d48 0x00039d48 6    7            ascii   Hangup\n1599 0x00039d50 0x00039d50 4    5            ascii   Quit\n1600 0x00039d58 0x00039d58 19   20           ascii   Illegal instruction\n1601 0x00039d6c 0x00039d6c 14   15           ascii   Trace/BPT trap\n1602 0x00039d7c 0x00039d7c 5    6            ascii   Abort\n1603 0x00039d84 0x00039d84 9    10           ascii   Bus error\n1604 0x00039d90 0x00039d90 24   25           ascii   Floating Point Exception\n1605 0x00039dac 0x00039dac 6    7            ascii   Killed\n1606 0x00039db4 0x00039db4 7    8            ascii   SIGUSR1\n1607 0x00039dbc 0x00039dbc 7    8            ascii   SIGSEGV\n1608 0x00039dc4 0x00039dc4 7    8            ascii   SIGUSR2\n1609 0x00039dcc 0x00039dcc 11   12           ascii   Alarm clock\n1610 0x00039dd8 0x00039dd8 10   11           ascii   Terminated\n1611 0x00039df0 0x00039df0 11   12           ascii   .msh_XXXXXX\n1612 0x00039e60 0x00039e60 5    6            ascii   \\e[%dD\n1613 0x00039e68 0x00039e68 5    6            ascii   \\e[%dA\n1614 0x00039e70 0x00039e70 5    6            ascii   \\e[%dC\n1615 0x00039e7c 0x00039e7c 24   25           ascii    `\"#$%^&*()=+{}[]:;'|\\<>\n1616 0x00039ea8 0x00039ea8 6    7            ascii   kernel\n1617 0x00039eb0 0x00039eb0 52   53           ascii   klogd started: BusyBox v1.01 (2014.06.27-07:45+0000)\n1618 0x00039ee8 0x00039ee8 46   47           ascii   klogd: Error return from sys_sycall: %d - %m.\\n\n1619 0x00039f1c 0x00039f1c 6    7            ascii   daemon\n1620 0x00039f24 0x00039f24 26   27           ascii   Kernel log daemon exiting.\n1621 0x00039f40 0x00039f40 25   26           ascii   unknown facility name: %s\n1622 0x00039f5c 0x00039f5c 25   26           ascii   unknown priority name: %s\n1623 0x00039f78 0x00039f78 5    6            ascii   p:st:\n1624 0x00039f80 0x00039f80 12   13           ascii   semop[SMrup]\n1625 0x00039f90 0x00039f90 26   27           ascii   Can't find circular buffer\n1626 0x00039fac 0x00039fac 48   49           ascii   Can't get access to circular buffer from syslogd\n1627 0x00039fe0 0x00039fe0 65   66           ascii   Can't get access to semaphone(s) for circular buffer from syslogd\n1628 0x0003a024 0x0003a024 12   13           ascii   semop[SMrdn]\n1629 0x0003a034 0x0003a034 14   15           ascii   <empty syslog>\n1630 0x0003a044 0x0003a044 20   21           ascii   cannot create socket\n1631 0x0003a05c 0x0003a05c 12   13           ascii   semop[SMwdn]\n1632 0x0003a06c 0x0003a06c 42   43           ascii   Weird! Can't find the terminator token???\n1633 0x0003a098 0x0003a098 61   62           ascii   Weird! Can't find the terminator token from the beginning???\n1634 0x0003a0d8 0x0003a0d8 12   13           ascii   semop[SMwup]\n1635 0x0003a0e8 0x0003a0e8 21   22           ascii   Bummer, can't print:\n1636 0x0003a100 0x0003a100 4    5            ascii   <%d>\n1637 0x0003a108 0x0003a108 5    6            ascii   %s.%s\n1638 0x0003a110 0x0003a110 7    8            ascii   <%d> %s\n1639 0x0003a118 0x0003a118 16   17           ascii   %s %s %s %s %3i\\n\n1640 0x0003a12c 0x0003a12c 25   26           ascii   get share memory success.\n1641 0x0003a148 0x0003a148 5    6            ascii   shmat\n1642 0x0003a150 0x0003a150 39   40           ascii   atttach share memary succeed. addr:%d.\\n\n1643 0x0003a178 0x0003a178 6    7            ascii   semget\n1644 0x0003a180 0x0003a180 24   25           ascii   allocated share memory \\r\n1645 0x0003a19c 0x0003a19c 49   50           ascii   Buffer already allocated just grab the semaphore?\n1646 0x0003a1d0 0x0003a1d0 48   49           ascii   Couldn't get file descriptor for socket /var/log\n1647 0x0003a204 0x0003a204 36   37           ascii   Could not connect to socket /var/log\n1648 0x0003a22c 0x0003a22c 36   37           ascii   Could not set permission on /var/log\n1649 0x0003a254 0x0003a254 12   13           ascii   select error\n1650 0x0003a264 0x0003a264 20   21           ascii   Receive message:%s.\\n\n1651 0x0003a27c 0x0003a27c 17   18           ascii   UNIX socket error\n1652 0x0003a290 0x0003a290 18   19           ascii   m:nO:s:Sb:R:l:r:LC\n1653 0x0003a2a4 0x0003a2a4 16   17           ascii   Exiting Syslogd!\n1654 0x0003a2b8 0x0003a2b8 26   27           ascii   System log daemon exiting.\n1655 0x0003a2d4 0x0003a2d4 5    6            ascii   alert\n1656 0x0003a2dc 0x0003a2dc 4    5            ascii   crit\n1657 0x0003a2e4 0x0003a2e4 5    6            ascii   emerg\n1658 0x0003a2f0 0x0003a2f0 4    5            ascii   none\n1659 0x0003a2f8 0x0003a2f8 6    7            ascii   notice\n1660 0x0003a300 0x0003a300 5    6            ascii   panic\n1661 0x0003a308 0x0003a308 4    5            ascii   warn\n1662 0x0003a310 0x0003a310 4    5            ascii   auth\n1663 0x0003a318 0x0003a318 8    9            ascii   authpriv\n1664 0x0003a324 0x0003a324 4    5            ascii   cron\n1665 0x0003a330 0x0003a330 4    5            ascii   kern\n1666 0x0003a33c 0x0003a33c 4    5            ascii   mail\n1667 0x0003a344 0x0003a344 4    5            ascii   mark\n1668 0x0003a34c 0x0003a34c 4    5            ascii   news\n1669 0x0003a354 0x0003a354 8    9            ascii   security\n1670 0x0003a360 0x0003a360 6    7            ascii   syslog\n1671 0x0003a368 0x0003a368 4    5            ascii   uucp\n1672 0x0003a370 0x0003a370 6    7            ascii   local0\n1673 0x0003a378 0x0003a378 6    7            ascii   local1\n1674 0x0003a380 0x0003a380 6    7            ascii   local2\n1675 0x0003a388 0x0003a388 6    7            ascii   local3\n1676 0x0003a390 0x0003a390 6    7            ascii   local4\n1677 0x0003a398 0x0003a398 6    7            ascii   local5\n1678 0x0003a3a0 0x0003a3a0 6    7            ascii   local6\n1679 0x0003a3a8 0x0003a3a8 6    7            ascii   local7\n1680 0x0003a3b0 0x0003a3b0 17   18           ascii   /var/log/messages\n1681 0x0003a3c4 0x0003a3c4 41   42           ascii   %s is write-protected, mounting read-only\n1682 0x0003a3f0 0x0003a3f0 4    5            ascii   auto\n1683 0x0003a3f8 0x0003a3f8 10   11           ascii   o:rt:wafnv\n1684 0x0003a404 0x0003a404 22   23           ascii   %s on %s type %s (%s)\\n\n1685 0x0003a41c 0x0003a41c 10   11           ascii   /etc/fstab\n1686 0x0003a428 0x0003a428 23   24           ascii   \\nCannot read /etc/fstab\n1687 0x0003a440 0x0003a440 6    7            ascii   noauto\n1688 0x0003a448 0x0003a448 4    5            ascii   swap\n1689 0x0003a454 0x0003a454 15   16           ascii   nfsmount failed\n1690 0x0003a464 0x0003a464 16   17           ascii   /etc/filesystems\n1691 0x0003a478 0x0003a478 17   18           ascii   /proc/filesystems\n1692 0x0003a48c 0x0003a48c 24   25           ascii   Mounting %s on %s failed\n1693 0x0003a4a8 0x0003a4a8 28   29           ascii   Can't find %s in /etc/fstab\\n\n1694 0x0003a4c8 0x0003a4c8 5    6            ascii   async\n1695 0x0003a4d0 0x0003a4d0 5    6            ascii   atime\n1696 0x0003a4d8 0x0003a4d8 8    9            ascii   defaults\n1697 0x0003a4e8 0x0003a4e8 8    9            ascii   diratime\n1698 0x0003a4f4 0x0003a4f4 7    8            ascii   noatime\n1699 0x0003a4fc 0x0003a4fc 5    6            ascii   nodev\n1700 0x0003a504 0x0003a504 10   11           ascii   nodiratime\n1701 0x0003a510 0x0003a510 6    7            ascii   noexec\n1702 0x0003a518 0x0003a518 6    7            ascii   nosuid\n1703 0x0003a520 0x0003a520 7    8            ascii   remount\n1704 0x0003a530 0x0003a530 4    5            ascii   suid\n1705 0x0003a538 0x0003a538 4    5            ascii   sync\n1706 0x0003a540 0x0003a540 4    5            ascii   move\n1707 0x0003a548 0x0003a548 35   36           ascii   unknown nfs status return value: %d\n1708 0x0003a56c 0x0003a56c 34   35           ascii   excessively long host:dir argument\n1709 0x0003a590 0x0003a590 41   42           ascii   warning: multiple hostnames not supported\n1710 0x0003a5bc 0x0003a5bc 41   42           ascii   directory to mount not in host:dir format\n1711 0x0003a5e8 0x0003a5e8 20   21           ascii   got bad hp->h_length\n1712 0x0003a600 0x0003a600 32   33           ascii   excessively long option argument\n1713 0x0003a624 0x0003a624 11   12           ascii   %s%saddr=%s\n1714 0x0003a630 0x0003a630 5    6            ascii   rsize\n1715 0x0003a638 0x0003a638 5    6            ascii   wsize\n1716 0x0003a640 0x0003a640 5    6            ascii   timeo\n1717 0x0003a648 0x0003a648 7    8            ascii   retrans\n1718 0x0003a650 0x0003a650 8    9            ascii   acregmin\n1719 0x0003a65c 0x0003a65c 8    9            ascii   acregmax\n1720 0x0003a668 0x0003a668 8    9            ascii   acdirmin\n1721 0x0003a674 0x0003a674 8    9            ascii   acdirmax\n1722 0x0003a680 0x0003a680 7    8            ascii   actimeo\n1723 0x0003a688 0x0003a688 5    6            ascii   retry\n1724 0x0003a690 0x0003a690 9    10           ascii   mountport\n1725 0x0003a69c 0x0003a69c 9    10           ascii   mounthost\n1726 0x0003a6a8 0x0003a6a8 5    6            ascii    \\t\\n\\r,\n1727 0x0003a6b0 0x0003a6b0 9    10           ascii   mountprog\n1728 0x0003a6bc 0x0003a6bc 9    10           ascii   mountvers\n1729 0x0003a6c8 0x0003a6c8 7    8            ascii   nfsprog\n1730 0x0003a6d0 0x0003a6d0 7    8            ascii   nfsvers\n1731 0x0003a6d8 0x0003a6d8 4    5            ascii   vers\n1732 0x0003a6e0 0x0003a6e0 5    6            ascii   proto\n1733 0x0003a6ec 0x0003a6ec 36   37           ascii   Warning: Unrecognized proto= option.\n1734 0x0003a714 0x0003a714 6    7            ascii   namlen\n1735 0x0003a71c 0x0003a71c 40   41           ascii   Warning: Option namlen is not supported.\n1736 0x0003a748 0x0003a748 4    5            ascii   addr\n1737 0x0003a750 0x0003a750 35   36           ascii   unknown nfs mount parameter: %s=%d\\n\n1738 0x0003a77c 0x0003a77c 4    5            ascii   soft\n1739 0x0003a784 0x0003a784 4    5            ascii   hard\n1740 0x0003a78c 0x0003a78c 4    5            ascii   intr\n1741 0x0003a794 0x0003a794 5    6            ascii   posix\n1742 0x0003a7a4 0x0003a7a4 4    5            ascii   lock\n1743 0x0003a7ac 0x0003a7ac 40   41           ascii   Warning: option nolock is not supported.\n1744 0x0003a7d8 0x0003a7d8 31   32           ascii   unknown nfs mount option: %s%s\\n\n1745 0x0003a7f8 0x0003a7f8 21   22           ascii   NFSv%d not supported!\n1746 0x0003a810 0x0003a810 21   22           ascii   got bad hp->h_length?\n1747 0x0003a828 0x0003a828 40   41           ascii   %s:%s failed, reason given by server: %s\n1748 0x0003a854 0x0003a854 30   31           ascii   NFS over TCP is not supported.\n1749 0x0003a874 0x0003a874 10   11           ascii   nfs socket\n1750 0x0003a880 0x0003a880 16   17           ascii   nfs bindresvport\n1751 0x0003a894 0x0003a894 11   12           ascii   nfs connect\n1752 0x0003a940 0x0003a940 27   28           ascii   forced umount of %s failed!\n1753 0x0003a95c 0x0003a95c 29   30           ascii   %s busy - remounted read-only\n1754 0x0003a97c 0x0003a97c 27   28           ascii   Cannot remount %s read-only\n1755 0x0003a998 0x0003a998 14   15           ascii   Cannot open %s\n1756 0x0003a9a8 0x0003a9a8 29   30           ascii   Couldn't umount %s on %s: %s\\n\n1757 0x0003a9c8 0x0003a9c8 17   18           ascii   cannot set groups\n1758 0x0003a9dc 0x0003a9dc 19   20           ascii   cannot set group id\n1759 0x0003a9f0 0x0003a9f0 18   19           ascii   cannot set user id\n1760 0x0003aa04 0x0003aa04 6    7            ascii   %s%s%s\n1761 0x0003aa10 0x0003aa10 24   25           ascii   no valid shadow password\n1762 0x0003aa2c 0x0003aa2c 10   11           ascii   Password:\n1763 0x0003aa38 0x0003aa38 4    5            ascii   icmp\n1764 0x0003aa40 0x0003aa40 18   19           ascii   could not stat '/'\n1765 0x0003aa54 0x0003aa54 21   22           ascii   could not open '/dev'\n1766 0x0003aa80 0x0003aa80 7    8            ascii   default\n1767 0x0003aa90 0x0003aa90 9    10           ascii   /proc/net\n1768 0x0003aa9c 0x0003aa9c 33   34           ascii   No usable address families found.\n1769 0x0003aac0 0x0003aac0 5    6            ascii   %02X-\n1770 0x0003aac8 0x0003aac8 10   11           ascii   [NONE SET]\n1771 0x0003aad4 0x0003aad4 33   34           ascii   warning: no inet socket available\n1772 0x0003aaf8 0x0003aaf8 11   12           ascii   SIOCGIFCONF\n1773 0x0003ab04 0x0003ab04 16   17           ascii   Device not found\n1774 0x0003ab18 0x0003ab18 45   46           ascii   %s: error fetching interface information: %s\\n\n1775 0x0003ab48 0x0003ab48 13   14           ascii   /proc/net/dev\n1776 0x0003ab58 0x0003ab58 40   41           ascii   Warning: cannot open %s. Limited output.\n1777 0x0003ab84 0x0003ab84 10   11           ascii   compressed\n1778 0x0003ab90 0x0003ab90 5    6            ascii   bytes\n1779 0x0003ab98 0x0003ab98 26   27           ascii   X bytes:%Lu (%Lu.%u %sB)%s\n1780 0x0003abb4 0x0003abb4 22   23           ascii   %-9.9s Link encap:%s\n1781 0x0003abcc 0x0003abcc 11   12           ascii   HWaddr %s\n1782 0x0003abd8 0x0003abd8 8    9            ascii   Media:%s\n1783 0x0003abe4 0x0003abe4 6    7            ascii   (auto)\n1784 0x0003abec 0x0003abec 21   22           ascii             %s addr:%s\n1785 0x0003ac04 0x0003ac04 10   11           ascii    P-t-P:%s\n1786 0x0003ac10 0x0003ac10 10   11           ascii    Bcast:%s\n1787 0x0003ac1c 0x0003ac1c 9    10           ascii    Mask:%s\\n\n1788 0x0003ac28 0x0003ac28 10   11           ascii\n1789 0x0003ac34 0x0003ac34 11   12           ascii   [NO FLAGS]\n1790 0x0003ac40 0x0003ac40 18   19           ascii    MTU:%d  Metric:%d\n1791 0x0003ac54 0x0003ac54 61   62           ascii   RX packets:%Lu errors:%lu dropped:%lu overruns:%lu frame:%lu\\n\n1792 0x0003ac94 0x0003ac94 28   29           ascii                compressed:%lu\\n\n1793 0x0003acb4 0x0003acb4 63   64           ascii   TX packets:%Lu errors:%lu dropped:%lu overruns:%lu carrier:%lu\\n\n1794 0x0003acf4 0x0003acf4 25   26           ascii             collisions:%lu\n1795 0x0003ad10 0x0003ad10 15   16           ascii   compressed:%lu\n1796 0x0003ad20 0x0003ad20 14   15           ascii   txqueuelen:%d\n1797 0x0003ad30 0x0003ad30 12   13           ascii   \\n          R\n1798 0x0003ad44 0x0003ad44 13   14           ascii   Interrupt:%d\n1799 0x0003ad54 0x0003ad54 19   20           ascii   Base address:0x%lx\n1800 0x0003ad68 0x0003ad68 15   16           ascii   Memory:%lx-%lx\n1801 0x0003ad78 0x0003ad78 12   13           ascii   DMA chan:%x\n1802 0x0003ad88 0x0003ad88 32   33           ascii   %n%Lu%u%u%u%u%n%n%n%Lu%u%u%u%u%u\n1803 0x0003adac 0x0003adac 34   35           ascii   %Lu%Lu%u%u%u%u%n%n%Lu%Lu%u%u%u%u%u\n1804 0x0003add0 0x0003add0 36   37           ascii   %Lu%Lu%u%u%u%u%u%u%Lu%Lu%u%u%u%u%u%u\n1805 0x0003adf8 0x0003adf8 7    8            ascii   10base2\n1806 0x0003ae00 0x0003ae00 7    8            ascii   10baseT\n1807 0x0003ae0c 0x0003ae0c 8    9            ascii   100baseT\n1808 0x0003ae18 0x0003ae18 9    10           ascii   100baseTX\n1809 0x0003ae24 0x0003ae24 9    10           ascii   100baseFX\n1810 0x0003ae34 0x0003ae34 10   11           ascii   BROADCAST\n1811 0x0003ae40 0x0003ae40 6    7            ascii   DEBUG\n1812 0x0003ae48 0x0003ae48 9    10           ascii   LOOPBACK\n1813 0x0003ae54 0x0003ae54 12   13           ascii   POINTOPOINT\n1814 0x0003ae64 0x0003ae64 11   12           ascii   NOTRAILERS\n1815 0x0003ae70 0x0003ae70 8    9            ascii   RUNNING\n1816 0x0003ae7c 0x0003ae7c 6    7            ascii   NOARP\n1817 0x0003ae84 0x0003ae84 8    9            ascii   PROMISC\n1818 0x0003ae90 0x0003ae90 9    10           ascii   ALLMULTI\n1819 0x0003ae9c 0x0003ae9c 6    7            ascii   SLAVE\n1820 0x0003aea4 0x0003aea4 7    8            ascii   MASTER\n1821 0x0003aeac 0x0003aeac 10   11           ascii   MULTICAST\n1822 0x0003aeb8 0x0003aeb8 14   15           ascii   DARPA Internet\n1823 0x0003aec8 0x0003aec8 6    7            ascii   unspec\n1824 0x0003aed0 0x0003aed0 6    7            ascii   UNSPEC\n1825 0x0003aed8 0x0003aed8 4    5            ascii   loop\n1826 0x0003aee0 0x0003aee0 14   15           ascii   Local Loopback\n1827 0x0003aef0 0x0003aef0 8    9            ascii   Ethernet\n1828 0x0003af00 0x0003af00 20   21           ascii   Point-Point Protocol\n1829 0x0003af50 0x0003af50 29   30           ascii   cannot get system information\n1830 0x0003af70 0x0003af70 8    9            ascii    login:\n1831 0x0003af80 0x0003af80 12   13           ascii   %A, %d %B %Y\n1832 0x0003af90 0x0003af90 8    9            ascii   %H:%M:%S\n1833 0x0003afa0 0x0003afa0 23   24           ascii   ?pc?d?b?-?l?s???rwxSTst\n1834 0x0003afc0 0x0003afc0 12   13           ascii   /proc/mounts\n1835 0x0003afd0 0x0003afd0 6    7            ascii   rwxXst\n1836 0x0003afd8 0x0003afd8 4    5            ascii   augo\n1837 0x0003b010 0x0003b010 8    9            ascii   abfnrtv\\\n1838 0x0003b019 0x0003b019 9    10           ascii   \\a\\b\\f\\n\\r\\t\\v\\\\\n1839 0x0003b030 0x0003b030 5    6            ascii   /proc\n1840 0x0003b038 0x0003b038 16   17           ascii   Can't open /proc\n1841 0x0003b04c 0x0003b04c 8    9            ascii   /proc/%d\n1842 0x0003b058 0x0003b058 13   14           ascii   /proc/%d/stat\n1843 0x0003b068 0x0003b068 9    10           ascii   %*s (%15c\n1844 0x0003b074 0x0003b074 85   86           ascii   %c %d %*s %*s %*s %*s %*s %*s %*s %*s %*s %*s %*s %*s %*s %*s %ld %*s %*s %*s %*s %ld\n1845 0x0003b0cc 0x0003b0cc 16   17           ascii   /proc/%d/cmdline\n1846 0x0003b0e0 0x0003b0e0 19   20           ascii   unable to stat `%s'\n1847 0x0003b0f4 0x0003b0f4 18   19           ascii   cannot remove `%s'\n1848 0x0003b108 0x0003b108 18   19           ascii   %s: is a directory\n1849 0x0003b11c 0x0003b11c 33   34           ascii   %s: descend into directory `%s'?\n1850 0x0003b140 0x0003b140 19   20           ascii   unable to open `%s'\n1851 0x0003b154 0x0003b154 20   21           ascii   unable to close `%s'\n1852 0x0003b16c 0x0003b16c 27   28           ascii   %s: remove directory `%s'?\n1853 0x0003b188 0x0003b188 21   22           ascii   unable to remove `%s'\n1854 0x0003b1a0 0x0003b1a0 17   18           ascii   %s: remove `%s'?\n1855 0x0003b1b8 0x0003b1b8 13   14           ascii   cannot run %s\n1856 0x0003b1c8 0x0003b1c8 33   34           ascii   unable to cd to %s' for user %s'\\n\n1857 0x0003b1ec 0x0003b1ec 32   33           ascii   cannot cd to home directory or /\n1858 0x0003b210 0x0003b210 41   42           ascii   warning: cannot change to home directory\\n\n1859 0x0003b23c 0x0003b23c 4    5            ascii   USER\n1860 0x0003b244 0x0003b244 7    8            ascii   LOGNAME\n1861 0x0003b24c 0x0003b24c 29   30           ascii   /usr/sbin:/bin:/usr/bin:/sbin\n1862 0x0003b26c 0x0003b26c 4    5            ascii   EXIT\n1863 0x0003b27c 0x0003b27c 4    5            ascii   QUIT\n1864 0x0003b288 0x0003b288 4    5            ascii   ABRT\n1865 0x0003b294 0x0003b294 4    5            ascii   KILL\n1866 0x0003b29c 0x0003b29c 4    5            ascii   SEGV\n1867 0x0003b2a4 0x0003b2a4 4    5            ascii   PIPE\n1868 0x0003b2ac 0x0003b2ac 4    5            ascii   ALRM\n1869 0x0003b2b4 0x0003b2b4 4    5            ascii   USR1\n1870 0x0003b2bc 0x0003b2bc 4    5            ascii   USR2\n1871 0x0003b2c4 0x0003b2c4 4    5            ascii   CHLD\n1872 0x0003b2cc 0x0003b2cc 4    5            ascii   CONT\n1873 0x0003b2d4 0x0003b2d4 4    5            ascii   STOP\n1874 0x0003b2dc 0x0003b2dc 4    5            ascii   TSTP\n1875 0x0003b2e4 0x0003b2e4 4    5            ascii   TTIN\n1876 0x0003b2ec 0x0003b2ec 4    5            ascii   TTOU\n1877 0x0003b2f4 0x0003b2f4 4    5            ascii   TRAP\n1878 0x0003b314 0x0003b314 4    5            ascii   POLL\n1879 0x0003b320 0x0003b320 4    5            ascii   XCPU\n1880 0x0003b328 0x0003b328 4    5            ascii   XFSZ\n1881 0x0003b330 0x0003b330 6    7            ascii   VTALRM\n1882 0x0003b338 0x0003b338 4    5            ascii   PROF\n1883 0x0003b344 0x0003b344 5    6            ascii   WINCH\n1884 0x0003b360 0x0003b360 4    5            ascii   %s:\n1885 0x0003b368 0x0003b368 5    6            ascii   %s%s\\n\n1886 0x0003b370 0x0003b370 37   38           ascii   Unable to connect to remote host (%s)\n1887 0x0003b398 0x0003b398 8    9            ascii   getcwd()\n1888 0x0003b40f 0x0003b40f 56   57           ascii   \\bBusyBox v1.01 (2014.06.27-07:45+0000) multi-call binary\n1889 0x0003b448 0x0003b448 16   17           ascii   memory exhausted\n1890 0x0003b45c 0x0003b45c 17   18           ascii   invalid date `%s'\n1891 0x0003b470 0x0003b470 11   12           ascii   Write Error\n1892 0x0003b47c 0x0003b47c 23   24           ascii   can`t create raw socket\n1893 0x0003b494 0x0003b494 34   35           ascii   permission denied. (are you root?)\n1894 0x0003b4b8 0x0003b4b8 12   13           ascii   /etc/nologin\n1895 0x0003b4c8 0x0003b4c8 14   15           ascii   /etc/securetty\n1896 0x0003b4d8 0x0003b4d8 9    10           ascii   /etc/motd\n1897 0x0003b4e4 0x0003b4e4 14   15           ascii   standard input\n1898 0x0003b4f4 0x0003b4f4 8    9            ascii   -/bin/sh\n1899 0x0003b500 0x0003b500 15   16           ascii   bb_xstrndup bug\n1900 0x0003b510 0x0003b510 12   13           ascii   bb_xasprintf\n1901 0x0003b524 0x0003b524 16   17           ascii   unknown %cid %ld\n1902 0x0003b538 0x0003b538 15   16           ascii   standard output\n1903 0x0003b5b0 0x0003b5b0 192  193          ascii   \\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\n1904 0x0003be35 0x0003be35 4    5            ascii   @|T0\n1905 0x0003bf01 0x0003bf01 4    5            ascii   Bh@0\n1906 0x0003bfb5 0x0003bfb5 4    5            ascii   @|T0\n1907 0x0003c170 0x0003c170 12   13           ascii   /dev/console\n1908 0x0003c300 0x0003c300 6    7            ascii   subnet\n1909 0x0003c30c 0x0003c30c 8    9            ascii   timezone\n1910 0x0003c318 0x0003c318 6    7            ascii   router\n1911 0x0003c324 0x0003c324 7    8            ascii   timesvr\n1912 0x0003c330 0x0003c330 7    8            ascii   namesvr\n1913 0x0003c348 0x0003c348 6    7            ascii   logsvr\n1914 0x0003c352 0x0003c352 11   12           ascii   !\\acookiesvr\n1915 0x0003c35e 0x0003c35e 8    9            ascii   !\\blprsvr\n1916 0x0003c36a 0x0003c36a 10   11           ascii   !\\thostname\n1917 0x0003c377 0x0003c377 9    10           ascii   \\fbootsize\n1918 0x0003c383 0x0003c383 7    8            ascii   \\rdomain\n1919 0x0003c390 0x0003c390 7    8            ascii   swapsvr\n1920 0x0003c39c 0x0003c39c 8    9            ascii   rootpath\n1921 0x0003c3a8 0x0003c3a8 5    6            ascii   ipttl\n1922 0x0003c3c0 0x0003c3c0 9    10           ascii   broadcast\n1923 0x0003c3cc 0x0003c3cc 7    8            ascii   srouter\n1924 0x0003c3d6 0x0003c3d6 8    9            ascii   5!ntpsrv\n1925 0x0003c3e2 0x0003c3e2 8    9            ascii   !*vsinfo\n1926 0x0003c3ee 0x0003c3ee 6    7            ascii   5+wins\n1927 0x0003c3fa 0x0003c3fa 6    7            ascii   1,nbnt\n1928 0x0003c407 0x0003c407 4    5            ascii   .nbs\n1929 0x0003c412 0x0003c412 11   12           ascii   5/requestip\n1930 0x0003c41f 0x0003c41f 6    7            ascii   2lease\n1931 0x0003c42a 0x0003c42a 10   11           ascii   \\b3dhcptype\n1932 0x0003c437 0x0003c437 9    10           ascii   5serverid\n1933 0x0003c443 0x0003c443 8    9            ascii   6message\n1934 0x0003c44f 0x0003c44f 8    9            ascii   8maxsize\n1935 0x0003c45b 0x0003c45b 5    6            ascii   9tftp\n1936 0x0003c467 0x0003c467 9    10           ascii   Bbootfile\n1937 0x0003c473 0x0003c473 9    10           ascii   Ccsrouter\n1938 0x0003c47e 0x0003c47e 13   14           ascii   5ymscsrouter5", "type": "tool_result"}
{"role": "assistant", "content": "{\n  \"thought\": \"I have completed the analysis of the 'bin' directory. Key findings include: 1) All files in 'bin' have overly permissive permissions (rwxrwxrwx), allowing any user to modify binaries, which could lead to privilege escalation if attackers have local access. 2) The 'iptables-xml' symlink exposes an absolute development path, indicating potential information leakage. 3) The 'busybox' binary (version 1.01 from 2014) contains multiple applets and functions that handle untrusted input (e.g., 'run_script', network-related functions), but no specific exploitable vulnerabilities were identified in this analysis. The world-writable binaries present a clear and exploitable attack chain for local privilege escalation. Since no further actionable vulnerabilities were found in 'bin', I will conclude this task.\",\n  \"action\": \"finish\",\n  \"action_input\": {\n    \"final_response\": \"Analysis of 'bin' directory complete. Findings:\\n\\n**1. Critical Security Issues:**\\n- **World-writable binaries**: All files in 'bin' have permissions rwxrwxrwx, allowing any user to modify or replace binaries. This enables local privilege escalation if attackers can execute modified binaries (e.g., replacing 'login' or 'sh' to gain root access).\\n- **Information leakage**: The 'iptables-xml' symlink points to an absolute development path ('/home/jiangdunchuan/project/tmp_wa850/build/../rootfs.build.2.6.31/sbin/iptables-multi'), exposing internal environment details.\\n\\n**2. BusyBox Analysis:**\\n- Version: BusyBox v1.01 (2014.06.27), which is outdated and may contain unpatched vulnerabilities.\\n- Key applets identified: 'arping', 'brctl', 'chmod', 'date', 'echo', 'false', 'getty', 'ifconfig', 'init', 'insmod', 'kill', 'klogd', 'linuxrc', 'logger', 'login', 'logread', 'lsmod', 'mount', 'ping', 'reboot', 'rmmod', 'route', 'syslogd', 'test', 'tftp', 'true', 'udhcpc', 'udhcpd', 'umount', 'vconfig'.\\n- Potential input points: Functions like 'run_script' (handles DHCP scripts), 'correct_password' (authentication), and network applets (e.g., 'udhcpc', 'tftp') may process untrusted data, but no specific exploitable code paths were verified in this analysis.\\n\\n**3. Exploit Chain Assessment:**\\n- **Local privilege escalation**: Attackers with shell access can overwrite any binary in 'bin' due to permissive permissions. When these binaries are executed by privileged processes or users, code execution with elevated privileges occurs.\\n- **Evidence**: All files in 'bin' are symlinks to 'busybox' with 777 permissions, and 'busybox' itself is world-writable.\\n- **Exploitability**: High for local attackers; low for remote without additional vulnerabilities.\\n\\n**Recommendations:**\\n- Restrict file permissions to minimum required (e.g., 755 for binaries).\\n- Update BusyBox to a patched version.\\n- Remove or secure the 'iptables-xml' symlink.\\n- Conduct dynamic testing to validate network applet vulnerabilities.\"\n  },\n  \"status\": \"complete\"\n}"}
